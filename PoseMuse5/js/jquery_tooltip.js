/*!
 * Tipped - The jQuery Tooltip - v3.1.8
 * (c) 2010-2013 Nick Stakenburg
 *
 * http://projects.nickstakenburg.com/tipped
 *
 * License: http://projects.nickstakenburg.com/tipped/license
 */
var Tipped = { version: "3.1.8" };

Tipped.Skins = {
  // base skin, don't modify! (create custom skins in a separate file)
  base: {
    afterUpdate: false,
    ajax: {
      cache: true,
      type: "get"
    },
    background: {
      color: "#f2f2f2",
      opacity: 1
    },
    border: {
      size: 1,
      color: "#000",
      opacity: 1
    },
    closeButtonSkin: "default",
    containment: {
      selector: "viewport"
    },
    fadeIn: 180,
    fadeOut: 220,
    showDelay: 75,
    hideDelay: 25,
    radius: {
      size: 5,
      position: "background"
    },
    hideAfter: false,
    hideOn: {
      element: "self",
      event: "mouseleave"
    },
    hideOthers: false,
    hook: "topleft",
    inline: false,
    offset: { x: 0, y: 0 },
    onHide: false,
    onShow: false,
    shadow: {
      blur: 2,
      color: "#000",
      offset: { x: 0, y: 0 },
      opacity: 0.12
    },
    showOn: "mousemove",
    spinner: true,
    stem: {
      height: 9,
      width: 18,
      offset: { x: 9, y: 9 },
      spacing: 2
    },
    target: "self"
  },

  // Every other skin inherits from this one
  reset: {
    ajax: false,
    closeButton: false,
    hideOn: [
      {
        element: "self",
        event: "mouseleave"
      },
      {
        element: "tooltip",
        event: "mouseleave"
      }
    ],
    hook: "topmiddle",
    stem: true
  },

  dark: {
    background: { color: "#282828" },
    border: { color: "#9b9b9b", opacity: 0.4, size: 1 },
    shadow: { opacity: 0.02 },
    spinner: { color: "#fff" }
  },

  light: {
    background: { color: "#fff" },
    border: { color: "#646464", opacity: 0.4, size: 1 },
    shadow: { opacity: 0.04 }
  },

  gray: {
    background: {
      color: [
        { position: 0, color: "#8f8f8f" },
        { position: 1, color: "#808080" }
      ]
    },
    border: { color: "#131313", size: 1, opacity: 0.6 }
  },

  tiny: {
    background: { color: "#161616" },
    border: { color: "#969696", opacity: 0.35, size: 1 },
    fadeIn: 0,
    fadeOut: 0,
    radius: 4,
    stem: {
      width: 11,
      height: 6,
      offset: { x: 6, y: 6 }
    },
    shadow: false,
    spinner: { color: "#fff" }
  },

  yellow: {
    background: "#ffffaa",
    border: { size: 1, color: "#6d5208", opacity: 0.4 }
  },

  red: {
    background: {
      color: [
        { position: 0, color: "#e13c37" },
        { position: 1, color: "#e13c37" }
      ]
    },
    border: { size: 1, color: "#150201", opacity: 0.6 },
    spinner: { color: "#fff" }
  },

  green: {
    background: {
      color: [
        { position: 0, color: "#4bb638" },
        { position: 1, color: "#4aab3a" }
      ]
    },
    border: { size: 1, color: "#122703", opacity: 0.6 },
    spinner: { color: "#fff" }
  },

  blue: {
    background: {
      color: [
        { position: 0, color: "#4588c8" },
        { position: 1, color: "#3d7cb9" }
      ]
    },
    border: { color: "#020b17", opacity: 0.6 },
    spinner: { color: "#fff" }
  }
};

/* black and white are dark and light without radius */
(function($) {
  $.extend(Tipped.Skins, {
    black: $.extend(true, {}, Tipped.Skins.dark, { radius: 0 }),
    white: $.extend(true, {}, Tipped.Skins.light, { radius: 0 })
  });
})(jQuery);

Tipped.Skins.CloseButtons = {
  base: {
    diameter: 17,
    border: 2,
    x: { diameter: 10, size: 2, opacity: 1 },
    states: {
      default: {
        background: {
          color: [
            { position: 0, color: "#1a1a1a" },
            { position: 0.46, color: "#171717" },
            { position: 0.53, color: "#121212" },
            { position: 0.54, color: "#101010" },
            { position: 1, color: "#000" }
          ],
          opacity: 1
        },
        x: { color: "#fafafa", opacity: 1 },
        border: { color: "#fff", opacity: 1 }
      },
      hover: {
        background: {
          color: "#333",
          opacity: 1
        },
        x: { color: "#e6e6e6", opacity: 1 },
        border: { color: "#fff", opacity: 1 }
      }
    },
    shadow: {
      blur: 1,
      color: "#000",
      offset: { x: 0, y: 0 },
      opacity: 0.5
    }
  },

  reset: {},

  default: {},

  light: {
    diameter: 17,
    border: 2,
    x: { diameter: 10, size: 2, opacity: 1 },
    states: {
      default: {
        background: {
          color: [
            { position: 0, color: "#797979" },
            { position: 0.48, color: "#717171" },
            { position: 0.52, color: "#666" },
            { position: 1, color: "#666" }
          ],
          opacity: 1
        },
        x: { color: "#fff", opacity: 0.95 },
        border: { color: "#676767", opacity: 1 }
      },
      hover: {
        background: {
          color: [
            { position: 0, color: "#868686" },
            { position: 0.48, color: "#7f7f7f" },
            { position: 0.52, color: "#757575" },
            { position: 1, color: "#757575" }
          ],
          opacity: 1
        },
        x: { color: "#fff", opacity: 1 },
        border: { color: "#767676", opacity: 1 }
      }
    }
  }
};

eval(
  (function(p, a, c, k, e, r) {
    e = function(c) {
      return (
        (c < a ? "" : e(parseInt(c / a))) +
        ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36))
      );
    };
    if (!"".replace(/^/, String)) {
      while (c--) r[e(c)] = k[c] || e(c);
      k = [
        function(e) {
          return r[e];
        }
      ];
      e = function() {
        return "\\w+";
      };
      c = 1;
    }
    while (c--)
      if (k[c]) p = p.replace(new RegExp("\\b" + e(c) + "\\b", "g"), k[c]);
    return p;
  })(
    '(12(a){12 c(a,b){13 c=[a,b];1a c.15=a,c.17=b,c}12 f(a){1N.5v&&5v[5v.6z?"6z":"8c"](a)}12 j(a){11.1g=a}12 k(a){13 b={};28(13 c 5w a)b[c]=a[c]+"2w";1a b}12 l(a,b){1a 1b.8d(a*a+b*b)}12 m(a){1a 2E*a/1b.2Z}12 n(a){1a a*1b.2Z/2E}12 o(a){1a 1/1b.4A(a)}12 v(b){1f(b){11.1g=b,u.1z(b);13 c=11.2e();11.19=a.1k({},c.19),11.2x=1,11.1o={},11.1V=a(b).1X("2p-1V"),u.30(11),11.29=11.19.1u.1D,11.6A=11.19.1l&&11.29,11.3a={x:0,y:0},11.3l={17:0,15:0},11.1P()}}12 x(b,c){11.1g=b,11.1g&&c&&(11.19=a.1k({31:3,1A:{x:0,y:0},1Q:"#4B",1K:.5,2L:1},20[2]||{}),11.2x=11.19.2L,11.1o={},11.1V=a(b).1X("2p-1V"),w.30(11),11.1P())}12 z(b){11.1g=b,11.1g&&(11.19=a.1k({31:5,1A:{x:0,y:0},1Q:"#4B",1K:.5,2L:1},20[1]||{}),11.2x=11.19.2L,11.1V=a(b).1X("2p-1V"),y.30(11),11.1P())}12 A(b,c){28(13 d 5w c)c[d]&&c[d].3D&&c[d].3D===5x?(b[d]=a.1k({},b[d])||{},A(b[d],c[d])):b[d]=c[d];1a b}12 C(b,c){1f(11.1g=b,11.1g){13 e=a(b).1X("2p-1V");e&&B.1z(b),e=h(),a(b).1X("2p-1V",e),11.1V=e;13 f;"8e"!=a.1p(c)||d.2j(c)?f=20[2]||{}:(f=c,c=1r),11.19=B.6B(f);13 g=b.6C("5y");1f(!c){13 i=b.6C("1X-2p");i?c=i:g&&(c=g)}g&&(a(b).1X("5z",g),b.8f("5y","")),11.2F=c,11.2k=11.19.2k||+B.19.4C,11.1o={2G:{14:1,18:1},5A:[],3b:[],2q:{4D:!1,2l:!1,1L:!1,3c:!1,1P:!1,4E:!1,5B:!1,3E:!1},5C:""};13 j=11.19.1C;11.1C="2M"==j?"2M":"4F"!=j&&j?d.2j(j)?j:j&&1x.6D(j)||11.1g:11.1g,11.6E(),B.30(11)}}13 b=6F.3F.8g,d={8h:12(c,d){13 e=c;1a 12(){13 c=[a.1v(e,11)].6G(b.5D(20));1a d.5E(11,c)}},2j:12(a){1a a&&1==a.8i},4G:12(a,c){13 d=b.5D(20,2);1a 8j(12(){1a a.5E(a,d)},c)},44:12(a){1a d.4G.5E(11,[a,1].6G(b.5D(20,1)))},5F:12(a){1a{x:a.5G,y:a.6H}},1g:{4H:12(a){13 b=0,d=0;8k b+=a.4I||0,d+=a.4J||0,a=a.4K;8l(a);1a c(d,b)},4L:12(b){13 e=a(b).1A(),f=d.1g.4H(b),g={17:a(1N).4I(),15:a(1N).4J()};1a e.15+=f.15-g.15,e.17+=f.17-g.17,c(e.15,e.17)},5H:12(){12 a(a){28(13 b=a;b&&b.4K;)b=b.4K;1a b}1a 12(b){13 c=a(b);1a!(!c||!c.3d)}}()}},e=12(a){12 b(b){13 c=5I(b+"([\\\\d.]+)").8m(a);1a c?5J(c[1]):!0}1a{3m:!(!1N.8n||-1!==a.3n("5K"))&&b("8o "),5K:a.3n("5K")>-1&&(!!1N.5L&&5L.6I&&5J(5L.6I())||7.55),5M:a.3n("6J/")>-1&&b("6J/"),4M:a.3n("4M")>-1&&-1===a.3n("8p")&&b("8q:"),6K:!!a.3e(/8r.*8s.*8t/),4N:a.3n("4N")>-1&&b("4N/")}}(8u.8v),g={32:{46:{5N:"1.4.4",5O:1N.46&&46.8w.8x}},6L:12(){12 b(b){28(13 c=b.3e(a),d=c&&c[1]&&c[1].2N(".")||[],e=0,f=0,g=d.2a;g>f;f++)e+=2O(d[f]*1b.6M(10,6-2*f));1a c&&c[3]?e-1:e}13 a=/^(\\d+(\\.?\\d+){0,3})([A-6N-8y-]+[A-6N-8z-9]+)?/;1a 12(a){11.32[a].6O||(11.32[a].6O=!0,(!11.32[a].5O||b(11.32[a].5O)<b(11.32[a].5N)&&!11.32[a].6P)&&(11.32[a].6P=!0,f("1S 8A "+a+" >= "+11.32[a].5N)))}}()},h=12(){13 a=0,b="8B";1a 12(c){28(c=c||b,a++;1x.6D(c+a);)a++;1a c+a}}(),i=12(){13 b=[];1a{1t:12(c){28(13 d=1r,e=0;b.2a>e;e++)b[e]&&b[e].47==c.47&&b[e].1p.6Q()==c.1p.6Q()&&a.6R(b[e].1X||{})==a.6R(c.1X||{})&&(d=b[e].4O);1a d},4P:12(c,d){11.1z(c.47),b.2n(a.1k({},c,{4O:d}))},1z:12(a){28(13 c=0;b.2a>c;c++)b[c]&&b[c].47==a&&3G b[c]},6S:12(){b=[]}}}();a.1k(1S,12(){1a{2H:{3f:12(){13 a=1x.22("3f");1a!(!a.3o||!a.3o("2d"))}(),3H:12(){6T{1a!!("8C"5w 1N||1N.6U&&1x 8D 6U)}6V(a){1a!1}}(),48:12(){13 b=["8E","8F","8G"],c=!1;1a a.1w(b,12(a,b){6T{1x.8H(b),c=!0}6V(d){}}),c}()},3p:12(){(11.2H.3f||e.3m)&&(g.6L("46"),a(1x).6W(12(){B.6X()}))},4Q:12(a,b,c){1a j.4Q(a,b,c),11.1t(a)},1t:12(a){1a 3q j(a)},5P:12(a){1a B.5P(a)},1W:12(a){1a 11.1t(a).1W(),11},1I:12(a){1a 11.1t(a).1I(),11},33:12(a){1a 11.1t(a).33(),11},2P:12(a){1a 11.1t(a).2P(),11},1z:12(a){1a 11.1t(a).1z(),11},4R:12(){1a B.4R(),11},5Q:12(a){1a B.5Q(a),11},5R:12(a){1a B.5R(a),11},1L:12(b){1f(d.2j(b))1a B.5S(b);1f("5T"!=a.1p(b)){13 c=a(b),e=0;1a a.1w(c,12(a,b){B.5S(b)&&e++}),e}1a B.3I().2a},5U:12(){1a B.5U(),11}}}()),a.1k(j,{4Q:12(b,c){1f(b){13 e=20[2]||{},f=[];1a B.6Y(),d.2j(b)?f.2n(3q C(b,c,e)):a(b).1w(12(a,b){f.2n(3q C(b,c,e))}),f}}}),a.1k(j.3F,{49:12(){1a B.2r.4S={x:0,y:0},B.1t(11.1g)},1W:12(){1a a.1w(11.49(),12(a,b){b.1W()}),11},1I:12(){1a a.1w(11.49(),12(a,b){b.1I()}),11},33:12(){1a a.1w(11.49(),12(a,b){b.33()}),11},2P:12(){1a a.1w(11.49(),12(a,b){b.2P()}),11},1z:12(){1a B.1z(11.1g),11}});13 p={4T:12(){13 b;1a b=e.6K?{14:1N.5V,18:1N.5W}:{18:a(1N).18(),14:a(1N).14()}}},q={3r:1b.1E(1b.4U(1N.3r?5J(1N.3r)||1:1,2)),3p:12(){12 a(a){13 b=a.3o("2d");b.8I(q.3r,q.3r)}1a 1N.4V&&!1S.2H.3f&&e.3m?12(b){4V.8J(b),a(b)}:12(b){a(b)}}(),3J:12(b,c){a(b).3g({14:c.14*11.3r,18:c.18*11.3r}).1q(k(c))},6Z:12(b){13 c=a.1k({17:0,15:0,14:0,18:0,1n:0},20[1]||{}),d=c,e=d.15,f=d.17,g=d.14,h=d.18,i=d.1n;1a i?(b.2f(),b.3s(e+i,f),b.26(e+g-i,f+i,i,n(-90),n(0),!1),b.26(e+g-i,f+h-i,i,n(0),n(90),!1),b.26(e+i,f+h-i,i,n(90),n(2E),!1),b.26(e+i,f+i,i,n(-2E),n(-90),!1),b.2g(),b.34(),3t 0):(b.70(e,f,g,h),3t 0)},8K:12(b,c){28(13 d=a.1k({x:0,y:0,1Q:"#4B"},20[2]||{}),e=0,f=c.2a;f>e;e++)28(13 g=0,h=c[e].2a;h>g;g++){13 i=2O(c[e].3u(g))*(1/9);b.2Q=t.2R(d.1Q,i),i&&b.70(d.x+g,d.y+e,1,1)}},4a:12(b,c){13 d;1f("2s"==a.1p(c))d=t.2R(c);1G 1f("2s"==a.1p(c.1Q))d=t.2R(c.1Q,"2y"==a.1p(c.1K)?c.1K:1);1G 1f(a.71(c.1Q)){13 e=a.1k({3K:0,3L:0,3M:0,3N:0},20[2]||{});d=q.72.73(b.8L(e.3K,e.3L,e.3M,e.3N),c.1Q,c.1K)}1a d}};q.72={73:12(b,c){28(13 d="2y"==a.1p(20[2])?20[2]:1,e=0,f=c.2a;f>e;e++){13 g=c[e];("5T"==a.1p(g.1K)||"2y"!=a.1p(g.1K))&&(g.1K=1),b.8M(g.1e,t.2R(g.1Q,g.1K*d))}1a b}};13 r={74:["3O","4b","3P","3Q","4c","4d","4e","4f","4g","4h","4i","3R"],4j:{75:/^(17|15|1R|1O)(17|15|1R|1O|2t|2S)$/,1J:/^(17|1R)/,35:/(2t|2S)/,76:/^(17|1R|15|1O)/},77:12(){13 a={17:"18",15:"14",1R:"18",1O:"14"};1a 12(b){1a a[b]}}(),35:12(a){1a!!a.3v().3e(11.4j.35)},78:12(a){1a!11.35(a)},2I:12(a){1a a.3v().3e(11.4j.1J)?"1J":"2b"},5X:12(a){13 b=1r,c=a.3v().3e(11.4j.76);1a c&&c[1]&&(b=c[1]),b},2N:12(a){1a a.3v().3e(11.4j.75)}},s={5Y:12(a){13 b=a.19.1l;1a{14:b.14,18:b.18}},4k:12(b,c){13 d=a.1k({3S:"1E"},20[2]||{}),e=b.19.1l,f=e.14,g=e.18,h=11.4W(f,g,c);1a d.3S&&(h.14=1b[d.3S](h.14),h.18=1b[d.3S](h.18)),{14:h.14,18:h.18}},4W:12(a,b,c){13 d=m(1b.79(.5*(b/a))),e=2E-d,f=1b.4A(n(e-90))*c,g=a+2*f,h=g*b/a;1a{14:g,18:h}},3T:12(a,b){13 c=11.4k(a,b),d=11.5Y(a),f=(r.35(a.29),1b.1E(c.18+b));1a a.19.1l.1A||0,a.19.1n&&a.19.1n.2u||0,{2z:{1c:{14:1b.1E(c.14),18:1b.1E(f)}},1i:{1c:c},1l:{1c:{14:d.14,18:d.18}}}},5Z:12(b,c,d){13 f=b.19,g={17:0,15:0},h={17:0,15:0},i=a.1k({},c),j=b.1i,k=k||11.3T(b,b.1i),l=k.2z.1c;d&&(l.18=d,j=0);13 m=r.2N(b.29),n=r.2I(b.29);1f(b.19.1l){13 o=r.5X(b.29);1f("17"==o?g.17=l.18-j:"15"==o&&(g.15=l.18-j),"1J"==n){1T(m[2]){1h"2t":1h"2S":h.15=.5*i.14;1B;1h"1O":h.15=i.14}"1R"==m[1]&&(h.17=i.18-j+l.18)}1G{1T(m[2]){1h"2t":1h"2S":h.17=.5*i.18;1B;1h"1R":h.17=i.18}"1O"==m[1]&&(h.15=i.14-j+l.18)}i[r.77(o)]+=l.18-j}1G 1f("1J"==n){1T(m[2]){1h"2t":1h"2S":h.15=.5*i.14;1B;1h"1O":h.15=i.14}"1R"==m[1]&&(h.17=i.18)}1G{1T(m[2]){1h"2t":1h"2S":h.17=.5*i.18;1B;1h"1R":h.17=i.18}"1O"==m[1]&&(h.15=i.14)}13 p=f.1n&&f.1n.2u||0,q=f.1i&&f.1i.2u||0;1f(b.19.1l){13 t=p&&"1m"==f.1n.1e?p:0,u=p&&"1i"==f.1n.1e?p:p+q,v=q+t+.5*k.1l.1c.14-.5*k.1i.1c.14,w=u>v?u-v:0,x=1b.1E(q+t+.5*k.1l.1c.14+w);1f("1J"==n)1T(m[2]){1h"15":h.15+=x;1B;1h"1O":h.15-=x}1G 1T(m[2]){1h"17":h.17+=x;1B;1h"1R":h.17-=x}}13 y;1f(f.1l&&(y=f.1l.1A)){13 z=s.60(y,b.6A,c,k.1i.1c,q,p);1f(y=z.1A,z.4l,"1J"==n)1T(m[2]){1h"15":h.15+=y.x;1B;1h"1O":h.15-=y.x}1G 1T(m[2]){1h"17":h.17+=y.y;1B;1h"1R":h.17-=y.y}}13 B;1f(f.1l&&(B=f.1l.8N))1f("1J"==n)1T(m[1]){1h"17":h.17-=B;1B;1h"1R":h.17+=B}1G 1T(m[1]){1h"15":h.15-=B;1B;1h"1O":h.15+=B}1a{1c:i,1e:{17:0,15:0},1m:{1e:g,1c:c},1l:{1c:l},2J:h}},60:12(b,c,d,e,f,g){13 h=r.2I(c),i=a.1k({},b),j={x:0,y:0},k=0;1a"1J"==h&&(k=d.14-e.14-2*f-2*g)<2*b.x&&(j.x=i.x,/(1O)$/.3h(c)&&(j.x*=-1),i.x=0),"2b"==h&&(k=d.18-e.18-2*f-2*g)<2*b.y&&(j.y=i.y,/(1R)$/.3h(c)&&(j.y*=-1),i.y=0),{1A:i,4l:j}}},t=12(){12 d(a){13 b=a;1a b.7a=a[0],b.7b=a[1],b.7c=a[2],b}12 e(a){1a 2O(a,16)}12 f(a){13 b=6F(3);1f(0==a.3n("#")&&(a=a.4X(1)),a=a.3v(),""!=a.61(c,""))1a 1r;3==a.2a?(b[0]=a.3u(0)+a.3u(0),b[1]=a.3u(1)+a.3u(1),b[2]=a.3u(2)+a.3u(2)):(b[0]=a.4X(0,2),b[1]=a.4X(2,4),b[2]=a.4X(4));28(13 f=0;b.2a>f;f++)b[f]=e(b[f]);1a d(b)}12 g(a,b){13 c=f(a);1a c[3]=b,c.1K=b,c}12 h(b,c){1a"5T"==a.1p(c)&&(c=1),"8O("+g(b,c).8P()+")"}12 i(a){1a"#"+(j(a)[2]>50?"4B":"8Q")}12 j(a){1a k(f(a))}12 k(a){13 f,g,h,a=d(a),b=a.7a,c=a.7b,e=a.7c,i=b>c?b:c;e>i&&(i=e);13 j=c>b?b:c;1f(j>e&&(j=e),h=i/8R,g=0!=i?(i-j)/i:0,0==g)f=0;1G{13 k=(i-b)/(i-j),l=(i-c)/(i-j),m=(i-e)/(i-j);f=b==i?m-l:c==i?2+k-m:4+l-k,f/=6,0>f&&(f+=1)}f=1b.23(7d*f),g=1b.23(62*g),h=1b.23(62*h);13 n=[];1a n[0]=f,n[1]=g,n[2]=h,n.8S=f,n.8T=g,n.8U=h,n}13 b="8V",c=5I("["+b+"]","g");1a{8W:f,2R:h,8X:i}}(),u={4Y:{},1t:12(b){1f(!b)1a 1r;13 c=1r,d=a(b).1X("2p-1V");1a d&&(c=11.4Y[d]),c},30:12(a){11.4Y[a.1V]=a},1z:12(a){13 b=11.1t(a);b&&(3G 11.4Y[b.1V],b.1z())}};a.1k(v.3F,12(){12 b(){11.1o.1u={};13 b=11.29;a.1w(r.74,a.1v(12(b,c){13 d,e=11.1o.1u[c]={};11.29=c;13 f=11.2o();d=f,e.2J=d.2J;13 g=d.1H.1c,h={17:d.1H.1e.17,15:d.1H.1e.15};1f(e.1H={1c:g,1e:h},e.1D={1c:d.21.1c},11.1s){13 i=11.1s.2o(),j=i.21.1e,k=e.1H.1e;a.1k(!0,e,{2J:i.2J,1H:{1e:{17:k.17+j.17,15:k.15+j.15}},1D:{1c:i.1D.1c}})}},11)),11.29=b}12 c(){11.36(),11.19.1s&&(w.1z(11.1g),11.19.1y&&11.19.1y.1s&&y.1z(11.1g)),11.2T&&(11.2T.1z(),11.2T=1r),11.1j&&(a(11.1j).1z(),11.1j=1r)}12 d(){11.1H&&(11.1y&&(a(11.1y).1z(),11.1y=1r,11.63=1r,11.64=1r),a(11.1H).1z(),11.1l=1r,11.1m=1r,11.1H=1r,11.1o={})}12 f(){13 a=11.2e();11.2G=a.1o.2G;13 b=a.19;11.1n=b.1n&&b.1n.2u||0,11.1i=b.1i&&b.1i.2u||0,11.2m=b.2m;13 c=1b.4U(11.2G.18,11.2G.14);11.1n>c/2&&(11.1n=1b.65(c/2)),"1i"==11.19.1n.1e&&11.1n>11.1i&&(11.1i=11.1n),11.1o={19:{1n:11.1n,1i:11.1i,2m:11.2m}}}12 g(){11.36(),1N.4V&&1N.4V.8Y(1x);13 b=11.2e(),c=11.19;11.1H=a("<2h>").1Y("8Z")[0],a(b.4Z).1Z(11.1H),11.51(),11.7e(b),c.1y&&(11.7f(b),c.1y.1s&&(11.2U?(11.2U.19=c.1y.1s,11.2U.1P()):11.2U=3q z(11.1g,a.1k({2L:11.2x},c.1y.1s)))),e.3m&&7>e.3m&&a(b.1j).66(11.2T=a("<91>").1Y("92").3g({93:0,4m:"94:\'\';"})),11.52(),c.1s&&(11.1s?(11.1s.19=c.1s,11.1s.1P()):11.1s=3q x(11.1g,11,a.1k({2L:11.2x},c.1s))),11.7g()}12 h(){13 b=11.2e(),c=a(b.1j),d=a(b.1j).67(".7h").7i()[0];1f(d){a(d).1q({14:"68",18:"68"});13 e=2O(c.1q("17")),f=2O(c.1q("15")),g=2O(c.1q("14"));c.1q({15:"-7j",17:"-7j",14:"95",18:"68"}),b.1F("1L")||a(b.1j).1W();13 h=B.53.69(d);b.19.3i&&"2y"==a.1p(b.19.3i)&&h.14>b.19.3i&&(a(d).1q({14:b.19.3i+"2w"}),h=B.53.69(d)),b.1F("1L")||a(b.1j).1I(),b.1o.2G=h,c.1q({15:f+"2w",17:e+"2w",14:g+"2w"}),11.1P()}}12 i(a,b,c){13 d=!1;11.4n(a)&&(d=!0),11.7k(b)&&(d=!0),c&&11.7l(c)&&(d=!0),d&&11.1P()}12 j(a){13 b=!1;1a(11.3l.15!=a.15||11.3l.17!=a.17)&&(b=!0,11.3l=a),b}12 l(a){13 b=!1;1a(11.3a.x!=a.x||11.3a.y!=a.y)&&(b=!0,11.3a=a),b}12 m(a){13 c=!1;1a 11.29!=a&&(c=!0,11.29=a),c}12 o(){1a B.1t(11.1g)[0]}12 p(){1a s.3T(11,11.1i)}12 u(){13 b=11.2e().19.1y,c=b.3w+2*b.1i;a(11.63).1q({15:-1*c+"2w"}),a(11.64).1q({15:0})}12 v(){13 b=11.2e().19.1y,c=b.3w+2*b.1i;a(11.63).1q({15:0}),a(11.64).1q({15:c+"2w"})}12 A(b){13 c=b.19.1y,d={14:c.3w+2*c.1i,18:c.3w+2*c.1i};a(b.1j).1Z(a(11.1y=1x.22("2h")).1Y("7m").1q(k(d)).1Z(a(11.7n=1x.22("2h")).1Y("96").1q(k(d)))),11.6a(b,"6b"),11.6a(b,"6c"),1S.2H.3H||e.4N||a(11.1y).3U("4o",a.1v(11.7o,11)).3U("54",a.1v(11.7p,11))}12 C(b,c){13 d=b.19.1y,e=d.3w,f=d.1i||0,g=d.x.3w,h=d.x.2u,j=(d.x.97,d.2q[c||"6b"]),l={14:e+2*f,18:e+2*f};g>=e&&(g=e-2);13 m;a(11.7n).1Z(a(11[c+"7q"]=1x.22("2h")).1Y("98").1q(a.1k(k(l),{15:("6c"==c?l.14:0)+"2w"}))),a(1x.3d).1Z(a(m=1x.22("3f"))),q.3J(m,l),q.3p(m);13 o=m.3o("2d");o.2L=11.2x,a(11[c+"7q"]).1Z(m),o.99(l.14/2,l.18/2),o.2Q=q.4a(o,j.1m,{3K:0,3L:0-e/2,3M:0,3N:0+e/2}),o.2f(),o.26(0,0,e/2,0,2*1b.2Z,!0),o.2g(),o.34(),f&&(o.2Q=q.4a(o,j.1i,{3K:0,3L:0-e/2-f,3M:0,3N:0+e/2+f}),o.2f(),o.26(0,0,e/2,1b.2Z,0,!1),o.1d((e+f)/2,0),o.26(0,0,e/2+f,0,1b.2Z,!0),o.26(0,0,e/2+f,1b.2Z,0,!0),o.1d(e/2,0),o.26(0,0,e/2,0,1b.2Z,!1),o.2g(),o.34());13 p=g/2,r=h/2;1f(r>p){13 s=r;r=p,p=s}o.2Q=t.2R(j.x.1Q||j.x,j.x.1K||1),o.56(n(45)),o.2f(),o.3s(0,0),o.1d(0,p);28(13 u=0;4>u;u++)o.1d(0,p),o.1d(r,p),o.1d(r,p-(p-r)),o.1d(p,r),o.1d(p,0),o.56(n(90));o.2g(),o.34()}12 D(b){13 l,m,o,p,q,c=a.1k({1l:!1,3x:1r,9a:1r,2f:!1,2g:!1,3y:1r,3z:1r,1n:0,1i:0,57:0,37:{x:0,y:0}},20[1]||{}),d=c.3y,e=c.3z,f=c.37,g=c.1i,h=c.1n,i=c.3x,j=d.1m.1e,k=d.1m.1c,t={x:1b.2V(11.3a.x),y:1b.2V(11.3a.y)},u={x:0,y:0},v={x:0,y:0};1f(e){l=e.1l.1c,m=e.2z.1e,o=e.2z.1c,p=o.14-l.14;13 w=c.57,x=g+h+.5*l.14-.5*e.1i.1c.14;q=1b.1E(w>x?w-x:0);13 y=s.60(f,i,k,e.1i.1c,g,h);f=y.1A,v=y.4l,u={x:1b.1U(k.14-2*1b.1U(q,f.x||0)-e.1i.1c.14-(2*h||0),0),y:1b.1U(k.18-2*1b.1U(q,f.y||0)-e.1i.1c.18-(2*h||0),0)},r.35(i)&&(u.x*=.5,u.y*=.5),t.x=1b.4U(t.x,u.x),t.y=1b.4U(t.y,u.y),r.35(i)&&(0>11.3a.x&&t.x>0&&(t.x*=-1),0>11.3a.y&&t.y>0&&(t.y*=-1)),11.3l&&11.3l.3A&&a.1w(11.3l.3A,12(b,c){a.1w("17 1O 1R 15".2N(" "),12(a,b){c==b&&5I("("+b+")$").3h(i)&&(t[/^(15|1O)$/.3h(b)?"x":"y"]=0)})})}13 z,A;1f(h?(z=j.15+g+h,A=j.17+g):(z=j.15+g,A=j.17+g),f&&f.x&&/^(3O|3R)$/.3h(i)&&(z+=f.x),c.2f&&b.2f(),b.3s(z,A),c.1l)1T(i){1h"3O":z=j.15+g,h&&(z+=h),z+=1b.1U(q,f.x||0),z+=t.x,b.1d(z,A),A-=l.18,z+=.5*l.14,b.1d(z,A),A+=l.18,z+=.5*l.14,b.1d(z,A);1B;1h"4b":1h"58":z=j.15+.5*k.14-.5*l.14,z+=t.x,b.1d(z,A),A-=l.18,z+=.5*l.14,b.1d(z,A),A+=l.18,z+=.5*l.14,b.1d(z,A),z=j.15+.5*k.14-.5*o.14,b.1d(z,A);1B;1h"3P":z=j.15+k.14-g-l.14,h&&(z-=h),z-=1b.1U(q,f.x||0),z-=t.x,b.1d(z,A),A-=l.18,z+=.5*l.14,b.1d(z,A),A+=l.18,z+=.5*l.14,b.1d(z,A)}1f(h?h&&(b.26(j.15+k.14-g-h,j.17+g+h,h,n(-90),n(0),!1),z=j.15+k.14-g,A=j.17+g+h):(z=j.15+k.14-g,A=j.17+g,b.1d(z,A)),c.1l)1T(i){1h"3Q":A=j.17+g,h&&(A+=h),A+=1b.1U(q,f.y||0),A+=t.y,b.1d(z,A),z+=l.18,A+=.5*l.14,b.1d(z,A),z-=l.18,A+=.5*l.14,b.1d(z,A);1B;1h"4c":1h"59":A=j.17+.5*k.18-.5*l.14,A+=t.y,b.1d(z,A),z+=l.18,A+=.5*l.14,b.1d(z,A),z-=l.18,A+=.5*l.14,b.1d(z,A);1B;1h"4d":A=j.17+k.18-g,h&&(A-=h),A-=l.14,A-=1b.1U(q,f.y||0),A-=t.y,b.1d(z,A),z+=l.18,A+=.5*l.14,b.1d(z,A),z-=l.18,A+=.5*l.14,b.1d(z,A)}1f(h?h&&(b.26(j.15+k.14-g-h,j.17+k.18-g-h,h,n(0),n(90),!1),z=j.15+k.14-g-h,A=j.17+k.18-g):(z=j.15+k.14-g,A=j.17+k.18-g,b.1d(z,A)),c.1l)1T(i){1h"4e":z=j.15+k.14-g,h&&(z-=h),z-=1b.1U(q,f.x||0),z-=t.x,b.1d(z,A),z-=.5*l.14,A+=l.18,b.1d(z,A),z-=.5*l.14,A-=l.18,b.1d(z,A);1B;1h"4f":1h"5a":z=j.15+.5*k.14+.5*l.14,z+=t.x,b.1d(z,A),z-=.5*l.14,A+=l.18,b.1d(z,A),z-=.5*l.14,A-=l.18,b.1d(z,A);1B;1h"4g":z=j.15+g+l.14,h&&(z+=h),z+=1b.1U(q,f.x||0),z+=t.x,b.1d(z,A),z-=.5*l.14,A+=l.18,b.1d(z,A),z-=.5*l.14,A-=l.18,b.1d(z,A)}1f(h?h&&(b.26(j.15+g+h,j.17+k.18-g-h,h,n(90),n(2E),!1),z=j.15+g,A=j.17+k.18-g-h):(z=j.15+g,A=j.17+k.18-g,b.1d(z,A)),c.1l)1T(i){1h"4h":A=j.17+k.18-g,h&&(A-=h),A-=1b.1U(q,f.y||0),A-=t.y,b.1d(z,A),z-=l.18,A-=.5*l.14,b.1d(z,A),z+=l.18,A-=.5*l.14,b.1d(z,A);1B;1h"4i":1h"5b":A=j.17+.5*k.18+.5*l.14,A+=t.y,b.1d(z,A),z-=l.18,A-=.5*l.14,b.1d(z,A),z+=l.18,A-=.5*l.14,b.1d(z,A);1B;1h"3R":A=j.17+g+l.14,h&&(A+=h),A+=1b.1U(q,f.y||0),A+=t.y,b.1d(z,A),z-=l.18,A-=.5*l.14,b.1d(z,A),z+=l.18,A-=.5*l.14,b.1d(z,A)}1a h?h&&(b.26(j.15+g+h,j.17+g+h,h,n(-2E),n(-90),!1),z=j.15+g+h,A=j.17+g,z+=1,b.1d(z,A)):(z=j.15+g,A=j.17+g,b.1d(z,A)),c.2g&&b.2g(),{x:z,y:A,1l:t,5c:v,37:f}}12 E(b){13 o,p,q,r,s,t,c=a.1k({1l:!1,3x:1r,2f:!1,2g:!1,3y:1r,3z:1r,1n:0,1i:0,7r:0,37:{x:0,y:0},5d:1r},20[1]||{}),d=c.3y,e=c.3z,g=(c.7r,c.37),h=c.1i,i=c.1n&&c.1n.2u||0,j=c.7s,k=c.3x,l=d.1m.1e,m=d.1m.1c,u=c.5d&&c.5d.1l||{x:0,y:0};1f(e){o=e.1l.1c,p=e.2z.1e,q=e.2z.1c,r=e.1i.1c,s=q.14-o.14;13 v=h+j+.5*o.14-.5*r.14;t=1b.1E(i>v?i-v:0)}13 w=l.15+h+j,x=l.17+h;j&&(w+=1),a.1k({},{x:w,y:x}),c.2f&&b.2f();13 z=a.1k({},{x:w,y:x});1f(x-=h,b.1d(w,x),i?i&&(b.26(l.15+i,l.17+i,i,n(-90),n(-2E),!0),w=l.15,x=l.17+i):(w=l.15,x=l.17,b.1d(w,x)),c.1l)1T(k){1h"3R":x=l.17+h,j&&(x+=j),x-=.5*r.14,x+=.5*o.14,x+=1b.1U(t,g.y||0),x+=u.y,b.1d(w,x),w-=r.18,x+=.5*r.14,b.1d(w,x),w+=r.18,x+=.5*r.14,b.1d(w,x);1B;1h"4i":1h"5b":x=l.17+.5*m.18-.5*r.14,x+=u.y,b.1d(w,x),w-=r.18,x+=.5*r.14,b.1d(w,x),w+=r.18,x+=.5*r.14,b.1d(w,x);1B;1h"4h":x=l.17+m.18-h-r.14,j&&(x-=j),x+=.5*r.14,x-=.5*o.14,x-=1b.1U(t,g.y||0),x-=u.y,b.1d(w,x),w-=r.18,x+=.5*r.14,b.1d(w,x),w+=r.18,x+=.5*r.14,b.1d(w,x)}1f(i?i&&(b.26(l.15+i,l.17+m.18-i,i,n(-2E),n(-9b),!0),w=l.15+i,x=l.17+m.18):(w=l.15,x=l.17+m.18,b.1d(w,x)),c.1l)1T(k){1h"4g":w=l.15+h,j&&(w+=j),w-=.5*r.14,w+=.5*o.14,w+=1b.1U(t,g.x||0),w+=u.x,b.1d(w,x),x+=r.18,w+=.5*r.14,b.1d(w,x),x-=r.18,w+=.5*r.14,b.1d(w,x);1B;1h"4f":1h"5a":w=l.15+.5*m.14-.5*r.14,w+=u.x,b.1d(w,x),x+=r.18,w+=.5*r.14,b.1d(w,x),x-=r.18,w+=.5*r.14,b.1d(w,x),w=l.15+.5*m.14+r.14,b.1d(w,x);1B;1h"4e":w=l.15+m.14-h-r.14,j&&(w-=j),w+=.5*r.14,w-=.5*o.14,w-=1b.1U(t,g.x||0),w-=u.x,b.1d(w,x),x+=r.18,w+=.5*r.14,b.1d(w,x),x-=r.18,w+=.5*r.14,b.1d(w,x)}1f(i?i&&(b.26(l.15+m.14-i,l.17+m.18-i,i,n(90),n(0),!0),w=l.15+m.14,x=l.17+m.14+i):(w=l.15+m.14,x=l.17+m.18,b.1d(w,x)),c.1l)1T(k){1h"4d":x=l.17+m.18-h,x+=.5*r.14,x-=.5*o.14,j&&(x-=j),x-=1b.1U(t,g.y||0),x-=u.y,b.1d(w,x),w+=r.18,x-=.5*r.14,b.1d(w,x),w-=r.18,x-=.5*r.14,b.1d(w,x);1B;1h"4c":1h"59":x=l.17+.5*m.18+.5*r.14,x+=u.y,b.1d(w,x),w+=r.18,x-=.5*r.14,b.1d(w,x),w-=r.18,x-=.5*r.14,b.1d(w,x);1B;1h"3Q":x=l.17+h,j&&(x+=j),x+=r.14,x-=.5*r.14-.5*o.14,x+=1b.1U(t,g.y||0),x+=u.y,b.1d(w,x),w+=r.18,x-=.5*r.14,b.1d(w,x),w-=r.18,x-=.5*r.14,b.1d(w,x)}1f(i?i&&(b.26(l.15+m.14-i,l.17+i,i,n(0),n(-90),!0),w=l.15+m.14-i,x=l.17):(w=l.15+m.14,x=l.17,b.1d(w,x)),c.1l)1T(k){1h"3P":w=l.15+m.14-h,w+=.5*r.14-.5*o.14,j&&(w-=j),w-=1b.1U(t,g.x||0),w-=u.x,b.1d(w,x),x-=r.18,w-=.5*r.14,b.1d(w,x),x+=r.18,w-=.5*r.14,b.1d(w,x);1B;1h"4b":1h"58":w=l.15+.5*m.14+.5*r.14,w+=u.x,b.1d(w,x),x-=r.18,w-=.5*r.14,b.1d(w,x),x+=r.18,w-=.5*r.14,b.1d(w,x),w=l.15+.5*m.14-r.14,b.1d(w,x),b.1d(w,x);1B;1h"3O":w=l.15+h+r.14,w-=.5*r.14,w+=.5*o.14,j&&(w+=j),w+=1b.1U(t,g.x||0),w+=u.x,b.1d(w,x),x-=r.18,w-=.5*r.14,b.1d(w,x),x+=r.18,w-=.5*r.14,b.1d(w,x)}b.1d(z.x,z.y-h),b.1d(z.x,z.y),c.2g&&b.2g()}12 F(b){13 c=11.2o(),d=11.19.1l&&11.4p(),e=11.29&&11.29.3v(),f=11.1n,h=11.1i,i=11.2m,k=({14:2*h+2*i+11.2G.14,18:2*h+2*i+11.2G.18},b.19.1l&&b.19.1l.1A||{x:0,y:0}),l=0,m=0;f&&(l="1m"==11.19.1n.1e?f:0,m="1i"==11.19.1n.1e?f:l+h),a(1x.3d).1Z(11.2W=1x.22("3f")),q.3J(11.2W,c.1H.1c),q.3p(11.2W);13 n=11.2W.3o("2d");n.2L=11.2x,a(11.1H).1Z(11.2W),n.2Q=q.4a(n,11.19.1m,{3K:0,3L:c.1m.1e.17+h,3M:0,3N:c.1m.1e.17+c.1m.1c.18-h}),n.9c=0;13 o;1f(o=11.6d(n,{2f:!0,2g:!0,1i:h,1n:l,57:m,3y:c,3z:d,1l:11.19.1l,3x:e,37:k}),n.34(),h){13 p=q.4a(n,11.19.1i,{3K:0,3L:c.1m.1e.17,3M:0,3N:c.1m.1e.17+c.1m.1c.18});n.2Q=p,o=11.6d(n,{2f:!0,2g:!1,1i:h,1n:l,57:m,3y:c,3z:d,1l:11.19.1l,3x:e,37:k}),11.7t(n,{2f:!1,2g:!0,1i:h,7s:l,1n:{2u:m,1e:11.19.1n.1e},3y:c,3z:d,1l:11.19.1l,3x:e,37:o.37,5d:o}),n.34()}11.3B=o}12 G(){13 i,a=11.2e(),b=11.2G,c=a.19,d=11.1n,f=11.1i,g=11.2m,h={14:2*f+2*g+b.14,18:2*f+2*g+b.18};1f(11.19.1l){13 j=11.4p();i=j.2z.1c}13 k=s.5Z(11,h),l=k.1c,m=k.1e,h=k.1m.1c,o=k.1m.1e;k.1l.1c;13 r,t,u,q={17:0,15:0},v={14:l.14,18:l.18};1f(c.1y){13 w=d;"1m"==c.1n.1e&&(w+=f);13 x=w-1b.9d(n(45))*w,y="1O";11.29.3v().3e(/^(3P|3Q)$/)&&(y="15");13 z=c.1y.3w+2*c.1y.1i,r={14:z,18:z};1f(q.15=o.15-z/2+("15"==y?x:h.14-x),q.17=o.17-z/2+x,"15"==y){1f(0>q.15){13 A=1b.2V(q.15);v.14+=A,m.15+=A,q.15=0}}1G{13 B=q.15+z-v.14;B>0&&(v.14+=B)}1f(0>q.17){13 C=1b.2V(q.17);v.18+=C,m.17+=C,q.17=0}1f(11.19.1y.1s){13 D=11.19.1y.1s,E=D.31,F=D.1A;1f(t={14:r.14+2*E,18:r.18+2*E},u={17:q.17-E+F.y,15:q.15-E+F.x},"15"==y){1f(0>u.15){13 A=1b.2V(u.15);v.14+=A,m.15+=A,q.15+=A,u.15=0}}1G{13 B=u.15+t.14-v.14;B>0&&(v.14+=B)}1f(0>u.17){13 C=1b.2V(u.17);v.18+=C,m.17+=C,q.17+=C,u.17=0}}}13 G=k.2J;G.17+=m.17,G.15+=m.15;13 H={15:1b.1E(m.15+o.15+11.1i+11.19.2m),17:1b.1E(m.17+o.17+11.1i+11.19.2m)},I={1D:{1c:{14:1b.1E(v.14),18:1b.1E(v.18)}},21:{1c:{14:1b.1E(v.14),18:1b.1E(v.18)}},1H:{1c:l,1e:{17:1b.23(m.17),15:1b.23(m.15)}},1m:{1c:{14:1b.1E(h.14),18:1b.1E(h.18)},1e:{17:1b.23(o.17),15:1b.23(o.15)}},2J:{17:1b.23(G.17),15:1b.23(G.15)},2F:{1e:H}};1a 11.19.1y&&(I.1y={1c:{14:1b.1E(r.14),18:1b.1E(r.18)},1e:{17:1b.23(q.17),15:1b.23(q.15)}},11.19.1y.1s&&(I.2U={1c:{14:1b.1E(t.14),18:1b.1E(t.18)},1e:{17:1b.23(u.17),15:1b.23(u.15)}})),I}12 H(){13 b=11.2o(),c=11.2e();a(c.1j).1q(k(b.1D.1c)),a(c.4Z).1q(k(b.21.1c)),11.2T&&11.2T.1q(k(b.1D.1c)),a(11.1H).1q(a.1k(k(b.1H.1c),k(b.1H.1e))),11.1y&&(a(11.1y).1q(k(b.1y.1e)),b.2U&&a(11.2U.1j).1q(k(b.2U.1e))),a(c.38).1q(k(b.2F.1e))}12 I(a){11.2x=a||0,11.1s&&(11.1s.2x=11.2x)}12 J(a){11.7u(a),11.1P()}1a{51:f,7g:b,1P:g,1z:c,36:d,2e:o,2P:h,5e:i,7l:j,7k:l,4n:m,7f:A,6a:C,7e:F,6d:D,7t:E,7o:u,7p:v,4p:p,2o:G,52:H,7u:I,9e:J}}());13 w={3j:{},1t:12(b){1f(!b)1a 1r;13 c=1r,d=a(b).1X("2p-1V");1a d&&(c=11.3j[d]),c},30:12(a){11.3j[a.1V]=a},1z:12(a){13 b=11.1t(a);b&&(3G 11.3j[b.1V],b.1z())},4q:12(a){1a 1b.2Z/2-1b.6M(a,1b.4A(a)*1b.2Z)}};w.4r={4k:12(a,b){13 c=u.1t(a.1g),d=c.4p().1i.1c,e=11.4W(d.14,d.18,b,{3S:!1});1a{14:e.14,18:e.18}},9f:12(a,b,c){13 d=.5*a,e=m(1b.9g(d/l(d,b))),f=2E-e-90,g=o(n(f))*c,h=2*(d+g),i=h/a*b;1a{14:h,18:i}},4W:12(a,b,c){13 d=m(1b.79(.5*(b/a))),e=2E-d,f=1b.4A(n(e-90))*c,g=a+2*f,h=g*b/a;1a{14:g,18:h}},3T:12(b){13 c=u.1t(b.1g),d=b.19.31,e=r.78(c.29),g=(r.2I(c.29),w.4r.4k(b,d)),h={2z:{1c:{14:1b.1E(g.14),18:1b.1E(g.18)},1e:{17:0,15:0}}};1f(d){h.2X=[];28(13 i=0;d>=i;i++){13 j=w.4r.4k(b,i,{3S:!1}),k={1e:{17:h.2z.1c.18-j.18,15:e?d-i:(h.2z.1c.14-j.14)/2},1c:j};h.2X.2n(k)}}1G h.2X=[a.1k({},h.2z)];1a h},56:12(a,b,c){s.56(a,b.3k(),c)}},a.1k(x.3F,12(){12 b(){1a B.1t(11.1g)[0]}12 c(){1a u.1t(11.1g)}12 d(){11.36()}12 e(){11.1j&&(a(11.1j).1z(),11.1l=1r,11.1m=1r,11.1H=1r,11.1j=1r,11.1o={})}12 f(){}12 g(){11.36(),11.51();13 b=11.2e(),c=11.3k();11.1j=a("<2h>").1Y("9h")[0],a(b.1j).66(11.1j),c.2T&&a(b.1j).66(c.2T),c.2o(),a(11.1j).1q({17:0,15:0}),11.7v(),11.52()}12 h(){1a 11.19.1K/(11.19.31+1)}12 i(){13 b=11.3k(),c=b.2o(),d=11.2e(),e=11.2o(),f=11.19.31,g=w.4r.3T(11),h=b.29,i=r.5X(h),j={17:f,15:f};1f(d.19.1l){13 l=g.2X[g.2X.2a-1];"15"==i&&(j.15+=1b.1E(l.1c.18)),"17"==i&&(j.17+=1b.1E(l.1c.18))}13 m=b.1o.19,n=m.1n,o=m.1i;"1m"==d.19.1n.1e&&n&&(n+=o);13 p=e.1H.1c;a(11.1j).1Z(a(11.1H=1x.22("2h")).1Y("9i").1q(k(p))).1q(k(p)),a(1x.3d).1Z(a(11.2W=1x.22("3f"))),q.3J(11.2W,e.1H.1c),q.3p(11.2W);13 s=11.2W.3o("2d");s.2L=11.2x,a(11.1H).1Z(11.2W);28(13 u=f+1,v=0;f>=v;v++)s.2Q=t.2R(11.19.1Q,w.4q(v*(1/u))*(11.19.1K/u)),q.6Z(s,{14:c.1m.1c.14+2*v,18:c.1m.1c.18+2*v,17:j.17-v,15:j.15-v,1n:n+v});1f(b.19.1l){13 x={x:j.15,y:j.17},y=g.2X[0].1c,z=b.19.1l,A=o;A+=.5*z.14;13 B=b.19.1n&&"1m"==b.19.1n.1e?b.19.1n.2u||0:0;B&&(A+=B);13 C=o+B+.5*z.14-.5*y.14,D=1b.1E(n>C?n-C:0),E=b.3B&&b.3B.1l||{x:0,y:0},F=b.3B&&b.3B.5c||{x:0,y:0};1f(A+=1b.1U(D,b.19.1l.1A&&b.19.1l.1A[i&&/^(15|1O)$/.3h(i)?"y":"x"]||0),"17"==i||"1R"==i){1T(h){1h"3O":1h"4g":x.x+=A+E.x-F.x;1B;1h"4b":1h"58":1h"4f":1h"5a":x.x+=.5*c.1m.1c.14+E.x;1B;1h"3P":1h"4e":x.x+=c.1m.1c.14-(A-E.x+F.x)}"1R"==i&&(x.y+=c.1m.1c.18);28(13 v=0,G=g.2X.2a;G>v;v++){s.2Q=t.2R(11.19.1Q,w.4q(v*(1/u))*(11.19.1K/u));13 f=g.2X[v];s.2f(),"17"==i?(s.3s(x.x,x.y-v),s.1d(x.x-.5*f.1c.14,x.y-v),s.1d(x.x,x.y-v-f.1c.18),s.1d(x.x+.5*f.1c.14,x.y-v)):(s.3s(x.x,x.y+v),s.1d(x.x-.5*f.1c.14,x.y+v),s.1d(x.x,x.y+v+f.1c.18),s.1d(x.x+.5*f.1c.14,x.y+v)),s.2g(),s.34()}}1G{1T(h){1h"3R":1h"3Q":x.y+=A+E.y-F.y;1B;1h"4i":1h"5b":1h"4c":1h"59":x.y+=.5*c.1m.1c.18+E.y;1B;1h"4h":1h"4d":x.y+=c.1m.1c.18-(A-E.y+F.y)}"1O"==i&&(x.x+=c.1m.1c.14);28(13 v=0,G=g.2X.2a;G>v;v++){s.2Q=t.2R(11.19.1Q,w.4q(v*(1/u))*(11.19.1K/u));13 f=g.2X[v];s.2f(),"15"==i?(s.3s(x.x-v,x.y),s.1d(x.x-v,x.y-.5*f.1c.14),s.1d(x.x-v-f.1c.18,x.y),s.1d(x.x-v,x.y+.5*f.1c.14)):(s.3s(x.x+v,x.y),s.1d(x.x+v,x.y-.5*f.1c.14),s.1d(x.x+v+f.1c.18,x.y),s.1d(x.x+v,x.y+.5*f.1c.14)),s.2g(),s.34()}}}}12 j(){13 b=11.3k();b.2G,b.1n;13 e=b.2o(),g=(11.2e(),11.19.31),h=a.1k({},e.1m.1c);h.14+=2*g,h.18+=2*g;13 i,k;1f(b.19.1l){13 l=w.4r.3T(11);i=l.2z.1c,k=i.18}13 m=s.5Z(b,h,k),n=m.1c,o=m.1e,h=m.1m.1c,p=m.1m.1e,r=e.1H.1e,t=e.1m.1e,u={17:r.17+t.17-(p.17+g)+11.19.1A.y,15:r.15+t.15-(p.15+g)+11.19.1A.x},v=e.2J,x=e.21.1c,y={17:0,15:0};1f(0>u.17){13 z=1b.2V(u.17);y.17+=z,u.17=0,v.17+=z}1f(0>u.15){13 A=1b.2V(u.15);y.15+=A,u.15=0,v.15+=A}13 B={18:1b.1U(n.18+u.17,x.18+y.17),14:1b.1U(n.14+u.15,x.14+y.15)},C={15:1b.1E(y.15+e.1H.1e.15+e.1m.1e.15+b.1i+b.2m),17:1b.1E(y.17+e.1H.1e.17+e.1m.1e.17+b.1i+b.2m)},D={1D:{1c:B},21:{1c:x,1e:y},1j:{1c:n,1e:u},1H:{1c:n,1e:{17:1b.23(o.17),15:1b.23(o.15)}},1m:{1c:{14:1b.1E(h.14),18:1b.1E(h.18)},1e:{17:1b.23(p.17),15:1b.23(p.15)}},2J:v,2F:{1e:C}};1a D}12 l(){13 b=11.2o(),c=11.3k(),d=11.2e();1f(a(d.1j).1q(k(b.1D.1c)),a(d.4Z).1q(a.1k(k(b.21.1e),k(b.21.1c))),c.2T&&c.2T.1q(k(b.1D.1c)),d.19.1y){13 e=c.2o(),f=b.21.1e,g=e.1y.1e;1f(a(c.1y).1q(k({17:f.17+g.17,15:f.15+g.15})),d.19.1y.1s){13 h=e.2U.1e;a(c.2U.1j).1q(k({17:f.17+h.17,15:f.15+h.15}))}}a(11.1j).1q(a.1k(k(b.1j.1c),k(b.1j.1e))),a(11.1H).1q(k(b.1H.1c)),a(d.38).1q(k(b.2F.1e))}1a{51:f,1z:d,36:e,1P:g,2e:b,3k:c,2o:j,7w:h,7v:i,52:l}}());13 y={3j:{},1t:12(b){1f(!b)1a 1r;13 c=a(b).1X("2p-1V");1a c?11.3j[c]:1r},30:12(a){11.3j[a.1V]=a},1z:12(a){13 b=11.1t(a);b&&(3G 11.3j[b.1V],b.1z())}};a.1k(z.3F,12(){12 b(){1a B.1t(11.1g)[0]}12 c(){1a u.1t(11.1g)}12 d(){1a 11.19.1K/(11.19.31+1)}12 e(){11.36()}12 f(){11.1j&&(a(11.1j).1z(),11.1j=1r)}12 g(){11.36();13 c=(11.2e(),11.3k()),d=c.2o().1y.1c,e=a.1k({},d),f=11.19.31;e.14+=2*f,e.18+=2*f,a(c.1y).6e(a(11.1j=1x.22("2h")).1Y("9j")),a(1x.3d).1Z(a(11.4s=1x.22("3f"))),q.3J(11.4s,e),q.3p(11.4s);13 g=11.4s.3o("2d");g.2L=11.2x,a(11.1j).1Z(11.4s);28(13 h=e.14/2,i=e.18/2,j=d.18/2,k=f+1,l=0;f>=l;l++)g.2Q=t.2R(11.19.1Q,w.4q(l*(1/k))*(11.19.1K/k)),g.2f(),g.26(h,i,j+l,n(0),n(7d),!0),g.2g(),g.34()}1a{1P:g,1z:e,36:f,2e:b,3k:c,7w:d}}());13 B={2A:{},19:{3V:"6f",4C:9k},6X:12(){12 b(){13 b=["2B"];1S.2H.3H&&(b.2n("9l"),a(1x.3d).3U("2B",12(){1a 3t 0})),a.1w(b,12(b,c){a(1x.7x).9m(".3C .7m, .3C .9n-1D",c,12(b){b.9o(),b.9p(),B.6g(a(b.1C).5f(".3C")[0]).1I()})}),a(1N).3U("3J",a.1v(11.7y,11))}1a b}(),7y:12(){11.5g&&(1N.6h(11.5g),11.5g=1r),11.5g=d.4G(a.1v(12(){13 b=11.3I();a.1w(b,12(a,b){b.1e()})},11),9q)},5h:12(b){13 d,c=a(b).1X("2p-1V");1f(!c){13 e=11.6g(a(b).5f(".3C")[0]);e&&e.1g&&(c=a(e.1g).1X("2p-1V"))}1a c&&(d=11.2A[c])?d:3t 0},5P:12(a){13 b;1a d.2j(a)&&(b=11.5h(a)),b&&b.1g},1t:12(b){13 c=[];1f(d.2j(b)){13 e=11.5h(b);e&&(c=[e])}1G a.1w(11.2A,12(d,e){e.1g&&a(e.1g).7z(b)&&c.2n(e)});1a c},6g:12(b){1f(!b)1a 1r;13 c=1r;1a a.1w(11.2A,12(a,d){d.1F("1P")&&d.1j===b&&(c=d)}),c},9r:12(b){13 c=[];1a a.1w(11.2A,12(d,e){e.1g&&a(e.1g).7z(b)&&c.2n(e)}),c},1W:12(b){1f(d.2j(b)){13 c=b,e=11.1t(c)[0];e&&e.1W()}1G a(b).1w(a.1v(12(a,b){13 c=11.1t(b)[0];c&&c.1W()},11))},1I:12(b){1f(d.2j(b)){13 c=11.1t(b)[0];c&&c.1I()}1G a(b).1w(a.1v(12(a,b){13 c=11.1t(b)[0];c&&c.1I()},11))},33:12(b){1f(d.2j(b)){13 c=b,e=11.1t(c)[0];e&&e.33()}1G a(b).1w(a.1v(12(a,b){13 c=11.1t(b)[0];c&&c.33()},11))},4R:12(){a.1w(11.3I(),12(a,b){b.1I()})},2P:12(b){1f(d.2j(b)){13 c=b,e=11.1t(c)[0];e&&e.2P()}1G a(b).1w(a.1v(12(a,b){13 c=11.1t(b)[0];c&&c.2P()},11))},3I:12(){13 b=[];1a a.1w(11.2A,12(a,c){c.1L()&&b.2n(c)}),b},5S:12(b){13 c=!1;1a d.2j(b)&&a.1w(11.3I()||[],12(a,d){1a d.1g==b?(c=!0,!1):3t 0}),c},7A:12(){13 c,b=0;1a a.1w(11.2A,12(a,d){d.2k>b&&(b=d.2k,c=d)}),c},7B:12(){1>=11.3I().2a&&a.1w(11.2A,12(b,c){c.1F("1P")&&!c.19.2k&&a(c.1j).1q({2k:c.2k=+B.19.4C})})},30:12(a){11.2A[a.1V]=a},5i:12(b){13 c=11.5h(b);1f(c){13 d=a(c.1g).1X("2p-1V");3G 11.2A[d],c.1I(),c.1z()}},1z:12(b){d.2j(b)?11.5i(b):a(b).1w(a.1v(12(a,b){11.5i(b)},11))},6Y:12(){a.1w(11.2A,a.1v(12(a,b){b.1g&&!d.1g.5H(b.1g)&&11.5i(b.1g)},11))},5Q:12(a){11.19.3V=a||"6f"},5R:12(a){11.19.4C=a||0},5U:12(){a.1w(11.2A,a.1v(12(a,b){b.1o&&b.1o.2l&&(b.1o.2l.6i(),b.1o.2l=1r),b.27("3c",!1)},11)),i.6S()},6B:12(){12 f(d){13 e;1a e="2s"==a.1p(d)?{1g:c.25&&c.25.1g||b.25.1g,2v:d}:A(a.1k({},b.25),d)}12 g(f){1a b=1S.2C.7C,c=A(a.1k({},b),1S.2C.6j),d=1S.2C.6k.7C,e=A(a.1k({},d),1S.2C.6k.6j),g=h,h(f)}12 h(g){g.21=g.21&&1S.2C[g.21]?g.21:1S.2C[B.19.3V]?B.19.3V:"6f";13 h=g.21?a.1k({},1S.2C[g.21]||1S.2C[B.19.3V]):{},i=A(a.1k({},c),h),j=A(a.1k({},i),g);1f(j.2c){13 k=c.2c||{},l=b.2c;"4t"==a.1p(j.2c)&&(j.2c={3W:k.3W||l.3W,1p:k.1p||l.1p}),j.2c=A(a.1k({},l),j.2c)}1f(j.1m&&"2s"==a.1p(j.1m)&&(j.1m={1Q:j.1m,1K:1}),j.1i){13 m,n=c.1i||{},o=b.1i;m="2y"==a.1p(j.1i)?{2u:j.1i,1Q:n.1Q||o.1Q,1K:n.1K||o.1K}:A(a.1k({},o),j.1i),j.1i=0===m.2u?!1:m}1f(j.1n){13 p;p="2y"==a.1p(j.1n)?{2u:j.1n,1e:c.1n&&c.1n.1e||b.1n.1e}:A(a.1k({},b.1n),j.1n),j.1n=0===p.2u?!1:p}13 q,s=s=j.1u&&j.1u.1C||"2s"==a.1p(j.1u)&&j.1u||c.1u&&c.1u.1C||"2s"==a.1p(c.1u)&&c.1u||b.1u&&b.1u.1C||b.1u,t=j.1u&&j.1u.1D||c.1u&&c.1u.1D||b.1u&&b.1u.1D||B.2r.6l(s);1f(j.1u?"2s"==a.1p(j.1u)?q={1C:j.1u,1D:B.2r.7D(j.1u)}:(q={1D:t,1C:s},j.1u.1D&&(q.1D=j.1u.1D),j.1u.1C&&(q.1C=j.1u.1C)):q={1D:t,1C:s},"2M"==j.1C){13 u=r.2I(q.1C);q.1C="1J"==u?q.1C.61(/(15|1O)/,"2t"):q.1C.61(/(17|1R)/,"2t")}j.1u=q;13 v;1f("2M"==j.1C?(v=a.1k({},b.1A),a.1k(v,1S.2C.6j.1A||{}),g.21&&a.1k(v,(1S.2C[g.21]||1S.2C[B.19.3V]).1A||{}),v=B.2r.7E(b.1A,b.1u,q.1C,!0),g.1A&&(v=a.1k(v,g.1A||{})),j.3X=0):v={x:j.1A.x,y:j.1A.y},j.1A=v,j.1y&&j.7F){13 w=a.1k({},1S.2C.6k[j.7F]),x=A(a.1k({},e),w);1f(x.2q&&a.1w(["6b","6c"],12(b,c){13 f=x.2q[c],g=e.2q&&e.2q[c];1f(f.1m){13 h=g&&g.1m;1f("2y"==a.1p(f.1m))f.1m={1Q:h&&h.1Q||d.2q[c].1m.1Q,1K:f.1m};1G 1f("2s"==a.1p(f.1m)){13 i=h&&"2y"==a.1p(h.1K)&&h.1K||d.2q[c].1m.1K;f.1m={1Q:f.1m,1K:i}}1G f.1m=A(a.1k({},d.2q[c].1m),f.1m)}1f(f.1i){13 j=g&&g.1i;f.1i="2y"==a.1p(f.1i)?{1Q:j&&j.1Q||d.2q[c].1i.1Q,1K:f.1i}:A(a.1k({},d.2q[c].1i),f.1i)}}),x.1s){13 z=e.1s&&e.1s.3D&&e.1s.3D==5x?e.1s:d.1s;x.1s.3D&&x.1s.3D==5x&&(z=A(z,x.1s)),x.1s=z}j.1y=x}1f(j.1s){13 C;C="4t"==a.1p(j.1s)?c.1s&&"4t"==a.1p(c.1s)?b.1s:c.1s?c.1s:b.1s:A(a.1k({},b.1s),j.1s||{}),"2y"==a.1p(C.1A)&&(C.1A={x:C.1A,y:C.1A}),j.1s=C}1f(j.1l){13 D={};D="4t"==a.1p(j.1l)?A({},b.1l):A(A({},b.1l),a.1k({},j.1l)),"2y"==a.1p(D.1A)&&(D.1A={x:D.1A,y:D.1A}),j.1l=D}1f(j.2Y&&("2s"==a.1p(j.2Y)?j.2Y={5j:j.2Y,7G:!0}:"4t"==a.1p(j.2Y)&&(j.2Y=j.2Y?{5j:"4T",7G:!0}:!1)),j.25&&"2B-9s"==j.25&&(j.7H=!0,j.25=!1),j.25)1f(a.71(j.25)){13 E=[];a.1w(j.25,12(a,b){E.2n(f(b))}),j.25=E}1G j.25=[f(j.25)];1a j.2K&&"2s"==a.1p(j.2K)&&(j.2K=[""+j.2K]),j.2m=0,j.1M&&(1N.6m||(j.1M=!1)),j}13 b,c,d,e;1a g}()};B.2r=12(){12 c(c){13 d=r.2N(c),e=d[1],f=d[2],g=r.2I(c),h=a.1k({1J:!0,2b:!0},20[1]||{});1a"1J"==g?(h.2b&&(e=b[e]),h.1J&&(f=b[f])):(h.2b&&(f=b[f]),h.1J&&(e=b[e])),e+f}12 f(a){13 d=r.2N(a);1a c(d[1]+b[d[2]])}12 h(b,c){a(b.1j).1q({17:c.17+"2w",15:c.15+"2w"})}12 j(a,b,d,e){13 g=y(a,b,d,e),h=d&&"2s"==7I d.1p?d.1p:"";1f(/9t$/.3h(h),1===g.3Y.3Z)1a l(a,g),g;13 m=b,n=e,o={1J:!g.3Y.1J,2b:!g.3Y.2b},p={1J:!1,2b:!1},q=r.2I(b);1a((p.2b="1J"==q&&o.2b)||(p.1J="2b"==q&&o.1J))&&(m=c(b,p),n=c(e,p),g=y(a,m,d,n),1===g.3Y.3Z)?(l(a,g),g):(g=k(g,a),l(a,g),g)}12 k(a,b){13 c=z(b),d=c.1c,e=c.1e,f=u.1t(b.1g).1o.1u[a.1u.1D].1D.1c,g=a.1e,h={17:0,15:0,3A:[]};1a e.15>g.15&&(h.15=e.15-g.15,h.3A.2n("15"),a.1e.15=e.15),e.17>g.17&&(h.17=g.17-e.17,h.3A.2n("17"),a.1e.17=e.17),e.15+d.14<g.15+f.14&&(h.15=e.15+d.14-(g.15+f.14),h.3A.2n("1O"),a.1e.15=e.15+d.14-f.14),e.17+d.18<g.17+f.18&&(h.17=e.17+d.18-(g.17+f.18),h.3A.2n("1R"),a.1e.17=e.17+d.18-f.18),a.7J=h,a}12 l(a,b){a.5e(b.1u.1D,b.3Y.4l,b.7J),h(a,b.1e)}12 m(a){1a a&&(/^2M|2B|3H$/.3h("2s"==7I a.1p&&a.1p||"")||a.5G>=0)}12 n(a,b,c){1a a>=b&&c>=a}12 o(a,b,c,d){13 e=n(a,c,d),f=n(b,c,d);1f(e&&f)1a b-a;1f(e&&!f)1a d-a;1f(!e&&f)1a b-c;13 g=n(c,a,b),h=n(d,a,b);1a g&&h?d-c:g&&!h?b-c:!g&&h?d-a:0}12 q(a,b){1a o(a.1e.15,a.1e.15+a.1c.14,b.1e.15,b.1e.15+b.1c.14)*o(a.1e.17,a.1e.17+a.1c.18,b.1e.17,b.1e.17+b.1c.18)}12 s(a,b){13 c=a.1c.14*a.1c.18;1a c?q(a,b)/c:0}12 t(a,b){13 c=r.2N(b),d=r.2I(b),e={15:0,17:0};1f("1J"==d){1T(c[2]){1h"2t":1h"2S":e.15=.5*a.14;1B;1h"1O":e.15=a.14}"1R"==c[1]&&(e.17=a.18)}1G{1T(c[2]){1h"2t":1h"2S":e.17=.5*a.18;1B;1h"1R":e.17=a.18}"1O"==c[1]&&(e.15=a.14)}1a e}12 v(b){13 c=d.1g.4L(b),e=d.1g.4H(b),f={17:a(1N).4I(),15:a(1N).4J()};1a c.15+=-1*(e.15-f.15),c.17+=-1*(e.17-f.17),c}12 y(b,e,f,g){13 h,i,j,k=u.1t(b.1g),l=k.19,n=l.1A,o=m(f);1f(o||!f){1f(j={14:24,18:24},o){13 p=d.5F(f);h={17:p.y-.5*j.18+6,15:p.x-.5*j.14+6}}1G{13 q=b.1o.2v;h={17:(q?q.y:0)-.5*j.18+6,15:(q?q.x:0)-.5*j.14+6}}b.1o.2v={x:h.15,y:h.17}}1G h=v(f),j={14:a(f).7K(),18:a(f).7L()};1f(l.1l&&"2M"!=l.1C){13 y=r.2N(g),A=r.2N(e),C=r.2I(g),D=k.1o.19,E=k.4p().1i.1c,F=D.1n,G=D.1i,H=F&&"1m"==l.1n.1e?F:0,I=F&&"1i"==l.1n.1e?F:F+G,J=G+H+.5*l.1l.14-.5*E.14,K=I>J?I-J:0;4u=1b.1E(G+H+.5*l.1l.14+K+l.1l.1A["1J"==C?"x":"y"]),"1J"==C&&"15"==y[2]&&"15"==A[2]||"1O"==y[2]&&"1O"==A[2]?(j.14-=2*4u,h.15+=4u):("2b"==C&&"17"==y[2]&&"17"==A[2]||"1R"==y[2]&&"1R"==A[2])&&(j.18-=2*4u,h.17+=4u)}i=a.1k({},h);13 L=o?c(l.1u.1D):l.1u.1C,M=t(j,L),N=t(j,g);({17:h.17+M.17+n.y,15:h.15+M.15+n.x}),h={15:h.15+N.15,17:h.17+N.17};13 P=a.1k({},n);P=x(P,L,g,"2M"==k.19.1C),h.17+=P.y,h.15+=P.x;13 k=u.1t(b.1g),Q=k.1o.1u,R=a.1k({},Q[e]),S={x:0,y:0},y=r.2N(g);1f("2t"!=y[2]){13 C=C=r.2I(g),T=B.2r.6l(g,"2b"==C?{1J:!0,2b:!1}:{1J:!1,2b:!0});e==T&&(S.y=k.3B.5c.y,S.x=k.3B.5c.x)}13 U={17:h.17-R.2J.17-S.y,15:h.15-R.2J.15-S.x};R.1D.1e=U;13 V={1J:!0,2b:!0},W={x:0,y:0};1f(b.19.2Y){13 X=z(b),Y=b.19.1s?w.1t(b.1g):k,Z=Y.2o().1D.1c;V.3Z=s({1c:Z,1e:U},X),1>V.3Z&&((U.15<X.1e.15||U.15+Z.14>X.1e.15+X.1c.14)&&(V.1J=!1,W.x=U.15<X.1e.15?U.15-X.1e.15:U.15+Z.14-(X.1e.15+X.1c.14)),(U.17<X.1e.17||U.17+Z.18>X.1e.17+X.1c.18)&&(V.2b=!1,W.y=U.17<X.1e.17?U.17-X.1e.17:U.17+Z.18-(X.1e.17+X.1c.18)))}1G V.3Z=1;V.4l=W;13 $=Q[e].1H,7M=s({1c:j,1e:i},{1c:$.1c,1e:{17:U.17+$.1e.17,15:U.15+$.1e.15}});1a{1e:U,3Z:{1C:7M},3Y:V,1u:{1D:e,1C:g}}}12 z(b){13 c={17:a(1N).4I(),15:a(1N).4J()},e=b.19,f=e.1C;("2M"==f||"4F"==f)&&(f=b.1g);13 g=a(f).5f(e.2Y.5j).7i()[0];1f(!g||"4T"==e.2Y.5j)1a{1c:p.4T(),1e:c};13 h=d.1g.4L(g),i=d.1g.4H(g);1a h.15+=-1*(i.15-c.15),h.17+=-1*(i.17-c.17),{1c:{14:a(g).5V(),18:a(g).5W()},1e:h}}13 b={15:"1O",1O:"15",17:"1R",1R:"17",2t:"2t",2S:"2S"};e.3m&&9>e.3m||e.4M&&2>e.4M||e.5M&&9u>e.5M;13 x=12(){13 a=[[-1,-1],[0,-1],[1,-1],[-1,0],[0,0],[1,0],[-1,1],[0,1],[1,1]],b={3R:0,3O:0,4b:1,58:1,3P:2,3Q:2,4c:5,59:5,4d:8,4e:8,4f:7,5a:7,4g:6,4h:6,4i:3,5b:3};1a 12(c,d,e,f){13 g=a[b[d]],h=a[b[e]],i=[1b.65(.5*1b.2V(g[0]-h[0]))?-1:1,1b.65(.5*1b.2V(g[1]-h[1]))?-1:1];1a r.35(d)||!r.35(e)||f||("1J"==r.2I(e)?i[0]=0:i[1]=0),{x:i[0]*c.x,y:i[1]*c.y}}}();1a{1t:y,4P:j,6l:c,7D:f,7N:v,7E:x,6n:m}}(),B.2r.4S={x:0,y:0},a(1x).6W(12(){13 b=B.2r;a(1x).3U("5k",12(a){b.4S={x:a.5G,y:a.6H}})}),B.53=12(){12 b(){a(1x.3d).1Z(a(1x.22("2h")).1Y("9v").1Z(a(1x.22("2h")).1Y("3C").1Z(a(11.1j=1x.22("2h")).1Y("7O"))))}12 c(b){1a{14:a(b).5V(),18:a(b).5W()}}12 e(b){13 d=c(b),e=b.4K;1a e&&a(e).1q({14:d.14+"2w"})&&c(b).18>d.18&&d.14++,a(e).1q({14:"62%"}),d}12 f(b,c,e){11.1j||11.1P();13 f=b.19,g=a.1k({1M:!1},20[3]||{});!f.7P&&!d.2j(c)||a(c).1X("7Q")||(f.7P&&"2s"==a.1p(c)&&(b.39=a("#"+c)[0],c=b.39),!b.40&&c&&d.1g.5H(c)&&(a(b.39).1X("7R",a(b.39).1q("7S")),b.40=1x.22("2h"),a(b.39).6e(a(b.40).1I())));13 h=1x.22("2h");a(11.1j).1Z(a(h).1Y("7h 9w").1Z(c)),d.2j(c)&&a(c).1W(),f.21&&a(h).1Y("9x"+b.19.21);13 i=a(h).67("7T[4m]").9y(12(){1a!(a(11).3g("18")&&a(11).3g("14"))});1f(i.2a>0&&!b.1F("3E")){b.27("3E",!0),f.1M&&(g.1M||b.1M||(b.1M=b.6o(f.1M)),b.1F("1L")&&(b.1e(),a(b.1j).1W()),b.1M.6p());13 j=0,k=1b.1U(9z,9A*(i.2a||0));b.2i("3E"),b.41("3E",a.1v(12(){i.1w(12(){11.6q=12(){}}),j>=i.2a||(11.5l(b,h),e&&e())},11),k),a.1w(i,a.1v(12(c,d){13 f=3q 9B;f.6q=a.1v(12(){f.6q=12(){};13 c=f.14,g=f.18,k=a(d).3g("14"),l=a(d).3g("18");k&&l||(!k&&l?(c=1b.23(l*c/g),g=l):!l&&k&&(g=1b.23(k*g/c),c=k),a(d).3g({14:c,18:g}),j++),j==i.2a&&(b.2i("3E"),b.1M&&(b.1M.1z(),b.1M=1r),b.1F("1L")&&a(b.1j).1I(),11.5l(b,h),e&&e())},11),f.4m=d.4m},11))}1G 11.5l(b,h),e&&e()}12 g(b,c){13 d=e(c),f={14:d.14-(2O(a(c).1q("2m-15"))||0)-(2O(a(c).1q("2m-1O"))||0),18:d.18-(2O(a(c).1q("2m-17"))||0)-(2O(a(c).1q("2m-1R"))||0)};b.19.3i&&"2y"==a.1p(b.19.3i)&&f.14>b.19.3i&&(a(c).1q({14:b.19.3i+"2w"}),d=e(c)),b.1o.2G=d,a(b.38).7U(c)}1a{1P:b,42:f,5l:g,69:e}}(),a.1k(C.3F,12(){12 b(a,b,c){11.1o.3b[a]=d.4G(b,c)}12 c(a){1a 11.1o.3b[a]}12 e(a){11.1o.3b[a]&&(1N.6h(11.1o.3b[a]),3G 11.1o.3b[a])}12 f(){a.1w(11.1o.3b,12(a,b){1N.6h(b)}),11.1o.3b=[]}12 g(b,c,d,e){c=c;13 f=a.1v(d,e||11);11.1o.5A.2n({1g:b,7V:c,7W:f}),a(b).3U(c,f)}12 h(){a.1w(11.1o.5A,12(b,c){a(c.1g).7X(c.7V,c.7W)})}12 j(a,b){11.1o.2q[a]=b}12 l(a){1a 11.1o.2q[a]}12 m(){11.2D(11.1g,"4o",11.5m),11.2D(11.1g,"54",a.1v(12(a){11.6r(a)},11)),11.19.2K&&a.1w(11.19.2K,a.1v(12(b,c){13 d=!1;"2B"==c&&(11.19.25&&a.1w(11.19.25,12(a,b){1a"4F"==b.1g&&"2B"==b.2v?(d=!0,!1):3t 0}),11.27("5B",d)),11.2D(11.1g,c,"2B"==c?d?11.33:11.1W:a.1v(12(){11.7Y()},11))},11)),11.19.25?a.1w(11.19.25,a.1v(12(b,c){13 d;1T(c.1g){1h"4F":1f(11.1F("5B")&&"2B"==c.2v)1a;d=11.1g;1B;1h"1C":d=11.1C}d&&11.2D(d,c.2v,"2B"==c.2v?11.1I:a.1v(12(){11.6s()},11))},11)):11.19.7Z&&11.19.2K&&!a.6t("2B",11.19.2K)>-1&&11.2D(11.1g,"54",a.1v(12(){11.2i("1W")},11));13 b=!1;!11.19.9C&&11.19.2K&&((b=a.6t("5k",11.19.2K)>-1)||a.6t("5n",11.19.2K)>-1)&&"2M"==11.1C&&11.2D(11.1g,b?"5k":"5n",12(a){11.1F("4E")&&11.1e(a)})}12 n(){11.2D(11.1j,1S.2H.3H?"5n":"4o",11.5m),11.2D(11.1j,"54",11.6r),11.2D(11.1j,1S.2H.3H?"5n":"4o",a.1v(12(){11.5o("4v")||11.1W()},11)),11.19.25&&a.1w(11.19.25,a.1v(12(b,c){13 d;1T(c.1g){1h"1D":d=11.1j}d&&11.2D(d,c.2v,c.2v.3e(/^(2B|5k|4o)$/)?11.1I:a.1v(12(){11.6s()},11))},11))}12 o(a,b,c){13 d=u.1t(11.1g);d&&d.5e(a,b,c)}12 p(a){13 b=u.1t(11.1g);b&&b.4n(a)}12 q(){11.4n(11.19.1u.1D)}12 r(){a(11.1j=1x.22("2h")).1Y("3C"),11.80()}12 s(){11.1P();13 a=u.1t(11.1g);a?a.1P():(3q v(11.1g),11.27("4E",!0))}12 t(){11.1F("1P")||(a(1x.3d).1Z(a(11.1j).1q({15:"-5p",17:"-5p",2k:11.2k}).1Z(a(11.4Z=1x.22("2h")).1Y("9D")).1Z(a(11.38=1x.22("2h")).1Y("7O"))),a(11.1j).1Y("9E"+11.19.21),11.19.7H&&(a(11.1g).1Y("81"),11.2D(1x.7x,"2B",a.1v(12(b){1f(11.1L()){13 c=a(b.1C).5f(".3C, .81")[0];(!c||c&&c!=11.1j&&c!=11.1g)&&11.1I()}},11))),1S.2H.48&&(11.19.4w||11.19.3X)&&(11.5q(11.19.4w),a(11.1j).1Y("6u")),11.82(),11.27("1P",!0),B.30(11))}12 w(){13 c;11.2F,11.40&&11.39&&((c=a(11.39).1X("7R"))&&a(11.39).1q({7S:c}),a(11.40).6e(11.39).1z(),11.40=1r)}12 x(){d.44(a.1v(12(){11.83()},11)),11.84(),11.6v(),d.44(a.1v(12(){a(11.1j).67("7T[4m]").7X("9F")},11)),u.1z(11.1g),11.1F("1P")&&11.1j&&(a(11.1j).1z(),11.1j=1r);13 c,b="5z";(c=a(11.1g).1X(b))&&a(11.1g).3g("5y",c).85("5z"),a(11.1g).85("2p-1V")}12 y(b){13 c=a.1k({4x:11.19.4x,1M:!1},20[1]||{});11.1P(),11.1F("1L")&&a(11.1j).1I(),B.53.42(11,b,a.1v(12(){13 b=11.1F("1L");b||11.27("1L",!0),11.86(),b||11.27("1L",!1),11.1F("1L")&&(a(11.1j).1I(),11.1e(),11.5r(),a(11.1j).1W()),11.27("3c",!0),c.4x&&c.4x(11.38.4y,11.1g),c.4z&&c.4z()},11),{1M:c.1M})}12 z(b){13 c,d={47:11.2F,1p:11.19.2c.1p,1X:11.19.2c.1X||{},87:11.19.2c.87||"7U"};1f(!(11.1F("2l")||11.19.2c.3W&&11.1F("3c"))){1f(11.19.2c.3W&&(c=i.1t(d)))1a 11.6w(c,{4z:a.1v(12(){11.1F("1L")&&11.19.43&&11.19.43(11.38.4y,11.1g)},11)}),3t 0;11.27("2l",!0),11.19.1M&&(11.1M?11.1M.6p():(11.1M=11.6o(11.19.1M),11.27("3c",!1)),11.1e(b)),11.1o.2l&&(11.1o.2l.6i(),11.1o.2l=1r),11.1o.2l=a.2c(a.1k({},d,{9G:a.1v(12(b,c,e){0!==e.9H&&(i.4P(d,e.4O),11.6w(e.4O,{4z:a.1v(12(){11.27("2l",!1),11.1F("1L")&&11.19.43&&11.19.43(11.38.4y,11.1g),11.1M&&(11.1M.1z(),11.1M=1r)},11)}))},11)}))}}12 A(b){13 c=a.1k({1M:11.19.1M&&11.1M},20[1]||{});11.42(b,c)}12 C(){13 b=1x.22("2h");a(b).1X("7Q",!0);13 c=6m.4Q(b,a.1k({},20[0]||{})),d=6m.5Y(b);1a a(b).1q(k(d)),11.42(b,{4x:!1,4z:12(){c.6p()}}),c}12 E(){1f(11.1F("1P")&&!11.19.2k){13 b=B.7A();b&&b!=11&&11.2k<=b.2k&&a(11.1j).1q({2k:11.2k=b.2k+1})}}12 F(){13 a=u.1t(11.1g);a&&(a.2P(),11.1L()&&11.1e())}12 G(a){1f(1S.2H.48){a=a||0;13 b=11.1j.9I;b.9J=a+"5s",b.9K=a+"5s",b.9L=a+"5s",b.9M=a+"5s"}}12 H(b){11.2i("1I"),11.2i("4v"),11.1F("1L")||11.5o("1W")||11.41("1W",a.1v(12(){11.2i("1W"),11.1W(b)},11),11.19.7Z||1)}12 I(b){1f(11.2i("1I"),11.2i("4v"),!11.1L()){1f("12"==a.1p(11.2F)||"12"==a.1p(11.1o.5t)){"12"!=a.1p(11.1o.5t)&&(11.1o.5t=11.2F);13 c=11.1o.5t(11.1g)||!1;1f(c!=11.1o.5C&&(11.1o.5C=c,11.27("3c",!1),11.6v()),11.2F=c,!c)1a}11.19.9N&&B.4R(),11.27("1L",!0),11.19.2c?11.88(b):11.1F("3c")||11.42(11.2F),11.1F("4E")&&11.1e(b),11.5r(),11.19.5u&&d.44(a.1v(12(){11.5m()},11)),"12"==a.1p(11.19.43)&&(!11.19.2c||11.19.2c&&11.19.2c.3W&&11.1F("3c"))&&11.19.43(11.38.4y,11.1g),1S.2H.48&&(11.19.4w||11.19.3X)&&(11.5q(11.19.4w),a(11.1j).1Y("89").8a("6u")),a(11.1j).1W()}}12 J(){11.2i("1W"),11.1F("1L")&&(11.27("1L",!1),1S.2H.48&&(11.19.4w||11.19.3X)?(11.5q(11.19.3X),a(11.1j).8a("89").1Y("6u"),11.41("4v",a.1v(11.6x,11),11.19.3X)):11.6x(),11.1o.2l&&(11.1o.2l.6i(),11.1o.2l=1r,11.27("2l",!1)))}12 K(){11.1F("1P")&&(a(11.1j).1q({15:"-5p",17:"-5p"}),B.7B(),"12"!=a.1p(11.19.8b)||11.1M||11.19.8b(11.38.4y,11.1g))}12 L(){11.2i("1W"),!11.5o("1I")&&11.1F("1L")&&11.41("1I",a.1v(12(){11.2i("1I"),11.2i("4v"),11.1I()},11),11.19.9O||1)}12 M(a){11[11.1L()?"1I":"1W"](a)}12 N(){1a 11.1F("1L")}12 O(){11.27("4D",!0),11.1F("1L")&&11.5r(),11.19.5u&&11.2i("6y")}12 P(){11.27("4D",!1),11.19.5u&&11.41("6y",a.1v(12(){11.2i("6y"),11.1F("4D")||11.1I()},11),11.19.5u)}13 D=12(b){1f(11.1L()){13 c;1f("2M"==11.19.1C){13 e=B.2r.6n(b),f=B.2r.4S;1f(e)f.x||f.y?(11.1o.2v={x:f.x,y:f.y},c=1r):c=b;1G{1f(f.x||f.y)11.1o.2v={x:f.x,y:f.y};1G 1f(!11.1o.2v){13 g=B.2r.7N(11.1g);11.1o.2v={x:g.15,y:g.17}}c=1r}}1G c=11.1C;1f(B.2r.4P(11,11.19.1u.1D,c,11.19.1u.1C),b&&B.2r.6n(b)){13 h={14:a(11.1j).7K(),18:a(11.1j).7L()},i=d.5F(b),g=d.1g.4L(11.1j);i.x>=g.15&&i.x<=g.15+h.14&&i.y>=g.17&&i.y<=g.17+h.18&&d.44(a.1v(12(){11.2i("1I")},11))}}};1a{1P:t,6E:r,86:s,80:m,82:n,1W:I,1I:J,6x:K,33:M,1L:N,7Y:H,6s:L,5q:G,27:j,1F:l,5m:O,6r:P,5o:c,41:b,2i:e,84:f,2D:g,83:h,5e:o,4n:p,9P:q,2P:F,42:y,88:z,6w:A,6o:C,1e:D,5r:E,6v:w,1z:x}}()),1S.3p()})(46);',
    62,
    610,
    "|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||this|function|var|width|left||top|height|options|return|Math|dimensions|lineTo|position|if|element|case|border|container|extend|stem|background|radius|_cache|type|css|null|shadow|get|hook|proxy|each|document|closeButton|remove|offset|break|target|tooltip|ceil|getState|else|bubble|hide|horizontal|opacity|visible|spinner|window|right|build|color|bottom|Tipped|switch|max|uid|show|data|addClass|append|arguments|skin|createElement|round||hideOn|arc|setState|for|_hookPosition|length|vertical|ajax||getTooltip|beginPath|closePath|div|clearTimer|isElement|zIndex|xhr|padding|push|getOrderLayout|tipped|states|Position|string|middle|size|event|px|_globalAlpha|number|box|tooltips|click|Skins|setEvent|180|content|contentDimensions|support|getOrientation|anchor|showOn|globalAlpha|mouse|split|parseInt|refresh|fillStyle|hex2fill|center|iframeShim|closeButtonShadow|abs|bubbleCanvas|blurs|containment|PI|add|blur|scripts|toggle|fill|isCenter|cleanup|cornerOffset|contentElement|inlineContent|_stemCorrection|timers|updated|body|match|canvas|attr|test|maxWidth|shadows|getSkin|_adjustment|IE|indexOf|getContext|init|new|devicePixelRatio|moveTo|void|charAt|toLowerCase|diameter|hookPosition|layout|stemLayout|sides|_corrections|t_Tooltip|constructor|preloading_images|prototype|delete|touch|getVisible|resize|x1|y1|x2|y2|topleft|topright|righttop|lefttop|math|getLayout|bind|defaultSkin|cache|fadeOut|contained|overlap|inlineMarker|setTimer|update|onShow|defer||jQuery|url|cssTransitions|items|createFillStyle|topmiddle|rightmiddle|rightbottom|bottomright|bottommiddle|bottomleft|leftbottom|leftmiddle|regex|getBorderDimensions|correction|src|setHookPosition|mouseenter|getStemLayout|transition|Stem|closeButtonCanvas|boolean|sideOffset|fadeTransition|fadeIn|afterUpdate|firstChild|callback|cos|000|startingZIndex|active|skinned|self|delay|cumulativeScrollOffset|scrollTop|scrollLeft|parentNode|cumulativeOffset|Gecko|Chrome|responseText|set|create|hideAll|mouseBuffer|viewport|min|G_vmlCanvasManager|getCenterBorderDimensions|substring|skins|skinElement||prepare|order|UpdateQueue|mouseleave||rotate|borderRadius|topcenter|rightcenter|bottomcenter|leftcenter|corner|corrections|setHookPositionAndStemCorrection|closest|_resizeTimer|_getTooltip|_remove|selector|mousemove|_updateTooltip|setActive|touchmove|getTimer|10000px|setFadeDuration|raise|ms|contentFunction|hideAfter|console|in|Object|title|tipped_restore_title|events|toggles|fnCallContent|call|apply|pointer|pageX|isAttached|RegExp|parseFloat|Opera|opera|WebKit|required|available|findElement|setDefaultSkin|setStartingZIndex|isVisibleByElement|undefined|clearAjaxCache|innerWidth|innerHeight|getSide|getDimensions|getBubbleLayout|nullifyCornerOffset|replace|100|defaultCloseButton|hoverCloseButton|floor|prepend|find|auto|getMeasureElementDimensions|drawCloseButtonState|default|hover|_drawBackgroundPath|before|dark|getByTooltipElement|clearTimeout|abort|reset|CloseButtons|getInversedPosition|Spinners|isPointerEvent|insertSpinner|play|onload|setIdle|hideDelayed|inArray|t_hidden|_restoreInlineContent|afterAjaxUpdate|_hide|idle|warn|_stemPosition|createOptions|getAttribute|getElementById|_preBuild|Array|concat|pageY|version|AppleWebKit|MobileSafari|check|pow|Za|checked|notified|toUpperCase|param|clear|try|DocumentTouch|catch|ready|startDelegating|removeDetached|drawRoundedRectangle|fillRect|isArray|Gradient|addColorStops|positions|toOrientation|side|toDimension|isCorner|atan|red|green|blue|360|drawBubble|drawCloseButton|createHookCache|t_ContentContainer|first|25000px|setStemCorrection|setAdjustment|t_Close|closeButtonShift|closeButtonMouseover|closeButtonMouseout|CloseButton|stemOffset|backgroundRadius|_drawBorderPath|setGlobalAlpha|drawBackground|getBlurOpacity|documentElement|onWindowResize|is|getHighestTooltip|resetZ|base|getTooltipPositionFromTarget|adjustOffsetBasedOnHooks|closeButtonSkin|flip|hideOnClickOutside|typeof|adjustment|outerWidth|outerHeight|_|getAbsoluteOffset|t_Content|inline|isSpinner|tipped_restore_inline_display|display|img|html|eventName|handler|unbind|showDelayed|showDelay|createPreBuildObservers|t_hideOnClickOutside|createPostBuildObservers|clearEvents|clearTimers|removeData|_buildSkin|dataType|ajaxUpdate|t_visible|removeClass|onHide|log|sqrt|object|setAttribute|slice|wrap|nodeType|setTimeout|do|while|exec|attachEvent|MSIE|KHTML|rv|Apple|Mobile|Safari|navigator|userAgent|fn|jquery|z_|z0|requires|_t_uid_|ontouchstart|instanceof|WebKitTransitionEvent|TransitionEvent|OTransitionEvent|createEvent|scale|initElement|drawPixelArray|createLinearGradient|addColorStop|spacing|rgba|join|fff|255|hue|saturation|brightness|0123456789abcdef|hex2rgb|getSaturatedBW|init_|t_Bubble||iframe|t_iframeShim|frameBorder|javascript|15000px|t_CloseButtonShift|lineCap|t_CloseState|translate|stemCorrection|270|lineWidth|sin|setOpacity|getCenterBorderDimensions2|acos|t_Shadow|t_ShadowBubble|t_CloseButtonShadow|999999|touchstart|delegate|close|preventDefault|stopPropagation|200|getBySelector|outside|move|530|t_UpdateQueue|t_clearfix|t_Content_|filter|8e3|750|Image|fixed|t_Skin|t_Tooltip_|load|success|status|style|MozTransitionDuration|webkitTransitionDuration|OTransitionDuration|transitionDuration|hideOthers|hideDelay|resetHookPosition".split(
      "|"
    ),
    0,
    {}
  )
);
/*
Copyright 2012 Igor Vaynberg

Version: 3.4.3 Timestamp: Tue Sep 17 06:47:14 PDT 2013

This software is licensed under the Apache License, Version 2.0 (the "Apache License") or the GNU
General Public License version 2 (the "GPL License"). You may choose either license to govern your
use of this software only upon the condition that you accept all of the terms of either the Apache
License or the GPL License.

You may obtain a copy of the Apache License and the GPL License at:

http://www.apache.org/licenses/LICENSE-2.0
http://www.gnu.org/licenses/gpl-2.0.html

Unless required by applicable law or agreed to in writing, software distributed under the Apache License
or the GPL Licesnse is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
either express or implied. See the Apache License and the GPL License for the specific language governing
permissions and limitations under the Apache License and the GPL License.
*/
!(function(a) {
  "undefined" == typeof a.fn.each2 &&
    a.extend(a.fn, {
      each2: function(b) {
        for (
          var c = a([0]), d = -1, e = this.length;
          ++d < e && (c.context = c[0] = this[d]) && b.call(c[0], d, c) !== !1;

        );
        return this;
      }
    });
})(jQuery),
  (function(a, b) {
    "use strict";
    function n(a) {
      var b, c, d, e;
      if (!a || a.length < 1) return a;
      for (b = "", c = 0, d = a.length; d > c; c++)
        (e = a.charAt(c)), (b += m[e] || e);
      return b;
    }
    function o(a, b) {
      for (var c = 0, d = b.length; d > c; c += 1) if (q(a, b[c])) return c;
      return -1;
    }
    function p() {
      var b = a(l);
      b.appendTo("body");
      var c = {
        width: b.width() - b[0].clientWidth,
        height: b.height() - b[0].clientHeight
      };
      return b.remove(), c;
    }
    function q(a, c) {
      return a === c
        ? !0
        : a === b || c === b
        ? !1
        : null === a || null === c
        ? !1
        : a.constructor === String
        ? a + "" == c + ""
        : c.constructor === String
        ? c + "" == a + ""
        : !1;
    }
    function r(b, c) {
      var d, e, f;
      if (null === b || b.length < 1) return [];
      for (d = b.split(c), e = 0, f = d.length; f > e; e += 1)
        d[e] = a.trim(d[e]);
      return d;
    }
    function s(a) {
      return a.outerWidth(!1) - a.width();
    }
    function t(c) {
      var d = "keyup-change-value";
      c.on("keydown", function() {
        a.data(c, d) === b && a.data(c, d, c.val());
      }),
        c.on("keyup", function() {
          var e = a.data(c, d);
          e !== b &&
            c.val() !== e &&
            (a.removeData(c, d), c.trigger("keyup-change"));
        });
    }
    function u(c) {
      c.on("mousemove", function(c) {
        var d = i;
        (d === b || d.x !== c.pageX || d.y !== c.pageY) &&
          a(c.target).trigger("mousemove-filtered", c);
      });
    }
    function v(a, c, d) {
      d = d || b;
      var e;
      return function() {
        var b = arguments;
        window.clearTimeout(e),
          (e = window.setTimeout(function() {
            c.apply(d, b);
          }, a));
      };
    }
    function w(a) {
      var c,
        b = !1;
      return function() {
        return b === !1 && ((c = a()), (b = !0)), c;
      };
    }
    function x(a, b) {
      var c = v(a, function(a) {
        b.trigger("scroll-debounced", a);
      });
      b.on("scroll", function(a) {
        o(a.target, b.get()) >= 0 && c(a);
      });
    }
    function y(a) {
      a[0] !== document.activeElement &&
        window.setTimeout(function() {
          var d,
            b = a[0],
            c = a.val().length;
          a.focus(),
            a.is(":visible") &&
              b === document.activeElement &&
              (b.setSelectionRange
                ? b.setSelectionRange(c, c)
                : b.createTextRange &&
                  ((d = b.createTextRange()), d.collapse(!1), d.select()));
        }, 0);
    }
    function z(b) {
      b = a(b)[0];
      var c = 0,
        d = 0;
      if ("selectionStart" in b)
        (c = b.selectionStart), (d = b.selectionEnd - c);
      else if ("selection" in document) {
        b.focus();
        var e = document.selection.createRange();
        (d = document.selection.createRange().text.length),
          e.moveStart("character", -b.value.length),
          (c = e.text.length - d);
      }
      return { offset: c, length: d };
    }
    function A(a) {
      a.preventDefault(), a.stopPropagation();
    }
    function B(a) {
      a.preventDefault(), a.stopImmediatePropagation();
    }
    function C(b) {
      if (!h) {
        var c = b[0].currentStyle || window.getComputedStyle(b[0], null);
        (h = a(document.createElement("div")).css({
          position: "absolute",
          left: "-10000px",
          top: "-10000px",
          display: "none",
          fontSize: c.fontSize,
          fontFamily: c.fontFamily,
          fontStyle: c.fontStyle,
          fontWeight: c.fontWeight,
          letterSpacing: c.letterSpacing,
          textTransform: c.textTransform,
          whiteSpace: "nowrap"
        })),
          h.attr("class", "select2-sizer"),
          a("body").append(h);
      }
      return h.text(b.val()), h.width();
    }
    function D(b, c, d) {
      var e,
        g,
        f = [];
      (e = b.attr("class")),
        e &&
          ((e = "" + e),
          a(e.split(" ")).each2(function() {
            0 === this.indexOf("select2-") && f.push(this);
          })),
        (e = c.attr("class")),
        e &&
          ((e = "" + e),
          a(e.split(" ")).each2(function() {
            0 !== this.indexOf("select2-") &&
              ((g = d(this)), g && f.push(this));
          })),
        b.attr("class", f.join(" "));
    }
    function E(a, b, c, d) {
      var e = n(a.toUpperCase()).indexOf(n(b.toUpperCase())),
        f = b.length;
      return 0 > e
        ? (c.push(d(a)), void 0)
        : (c.push(d(a.substring(0, e))),
          c.push("<span class='select2-match'>"),
          c.push(d(a.substring(e, e + f))),
          c.push("</span>"),
          c.push(d(a.substring(e + f, a.length))),
          void 0);
    }
    function F(a) {
      var b = {
        "\\": "&#92;",
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#47;"
      };
      return String(a).replace(/[&<>"'\/\\]/g, function(a) {
        return b[a];
      });
    }
    function G(c) {
      var d,
        e = null,
        f = c.quietMillis || 100,
        g = c.url,
        h = this;
      return function(i) {
        window.clearTimeout(d),
          (d = window.setTimeout(function() {
            var d = c.data,
              f = g,
              j = c.transport || a.fn.select2.ajaxDefaults.transport,
              k = {
                type: c.type || "GET",
                cache: c.cache || !1,
                jsonpCallback: c.jsonpCallback || b,
                dataType: c.dataType || "json"
              },
              l = a.extend({}, a.fn.select2.ajaxDefaults.params, k);
            (d = d ? d.call(h, i.term, i.page, i.context) : null),
              (f =
                "function" == typeof f
                  ? f.call(h, i.term, i.page, i.context)
                  : f),
              e && e.abort(),
              c.params &&
                (a.isFunction(c.params)
                  ? a.extend(l, c.params.call(h))
                  : a.extend(l, c.params)),
              a.extend(l, {
                url: f,
                dataType: c.dataType,
                data: d,
                success: function(a) {
                  var b = c.results(a, i.page);
                  i.callback(b);
                }
              }),
              (e = j.call(h, l));
          }, f));
      };
    }
    function H(b) {
      var d,
        e,
        c = b,
        f = function(a) {
          return "" + a.text;
        };
      a.isArray(c) && ((e = c), (c = { results: e })),
        a.isFunction(c) === !1 &&
          ((e = c),
          (c = function() {
            return e;
          }));
      var g = c();
      return (
        g.text &&
          ((f = g.text),
          a.isFunction(f) ||
            ((d = g.text),
            (f = function(a) {
              return a[d];
            }))),
        function(b) {
          var g,
            d = b.term,
            e = { results: [] };
          return "" === d
            ? (b.callback(c()), void 0)
            : ((g = function(c, e) {
                var h, i;
                if (((c = c[0]), c.children)) {
                  h = {};
                  for (i in c) c.hasOwnProperty(i) && (h[i] = c[i]);
                  (h.children = []),
                    a(c.children).each2(function(a, b) {
                      g(b, h.children);
                    }),
                    (h.children.length || b.matcher(d, f(h), c)) && e.push(h);
                } else b.matcher(d, f(c), c) && e.push(c);
              }),
              a(c().results).each2(function(a, b) {
                g(b, e.results);
              }),
              b.callback(e),
              void 0);
        }
      );
    }
    function I(c) {
      var d = a.isFunction(c);
      return function(e) {
        var f = e.term,
          g = { results: [] };
        a(d ? c() : c).each(function() {
          var a = this.text !== b,
            c = a ? this.text : this;
          ("" === f || e.matcher(f, c)) &&
            g.results.push(a ? this : { id: this, text: this });
        }),
          e.callback(g);
      };
    }
    function J(b, c) {
      if (a.isFunction(b)) return !0;
      if (!b) return !1;
      throw new Error(c + " must be a function or a falsy value");
    }
    function K(b) {
      return a.isFunction(b) ? b() : b;
    }
    function L(b) {
      var c = 0;
      return (
        a.each(b, function(a, b) {
          b.children ? (c += L(b.children)) : c++;
        }),
        c
      );
    }
    function M(a, c, d, e) {
      var h,
        i,
        j,
        k,
        l,
        f = a,
        g = !1;
      if (
        !e.createSearchChoice ||
        !e.tokenSeparators ||
        e.tokenSeparators.length < 1
      )
        return b;
      for (;;) {
        for (
          i = -1, j = 0, k = e.tokenSeparators.length;
          k > j && ((l = e.tokenSeparators[j]), (i = a.indexOf(l)), !(i >= 0));
          j++
        );
        if (0 > i) break;
        if (
          ((h = a.substring(0, i)),
          (a = a.substring(i + l.length)),
          h.length > 0 &&
            ((h = e.createSearchChoice.call(this, h, c)),
            h !== b && null !== h && e.id(h) !== b && null !== e.id(h)))
        ) {
          for (g = !1, j = 0, k = c.length; k > j; j++)
            if (q(e.id(h), e.id(c[j]))) {
              g = !0;
              break;
            }
          g || d(h);
        }
      }
      return f !== a ? a : void 0;
    }
    function N(b, c) {
      var d = function() {};
      return (
        (d.prototype = new b()),
        (d.prototype.constructor = d),
        (d.prototype.parent = b.prototype),
        (d.prototype = a.extend(d.prototype, c)),
        d
      );
    }
    if (window.Select2 === b) {
      var c,
        d,
        e,
        f,
        g,
        h,
        j,
        k,
        i = { x: 0, y: 0 },
        c = {
          TAB: 9,
          ENTER: 13,
          ESC: 27,
          SPACE: 32,
          LEFT: 37,
          UP: 38,
          RIGHT: 39,
          DOWN: 40,
          SHIFT: 16,
          CTRL: 17,
          ALT: 18,
          PAGE_UP: 33,
          PAGE_DOWN: 34,
          HOME: 36,
          END: 35,
          BACKSPACE: 8,
          DELETE: 46,
          isArrow: function(a) {
            switch ((a = a.which ? a.which : a)) {
              case c.LEFT:
              case c.RIGHT:
              case c.UP:
              case c.DOWN:
                return !0;
            }
            return !1;
          },
          isControl: function(a) {
            var b = a.which;
            switch (b) {
              case c.SHIFT:
              case c.CTRL:
              case c.ALT:
                return !0;
            }
            return a.metaKey ? !0 : !1;
          },
          isFunctionKey: function(a) {
            return (a = a.which ? a.which : a), a >= 112 && 123 >= a;
          }
        },
        l = "<div class='select2-measure-scrollbar'></div>",
        m = {
          "\u24b6": "A",
          Ａ: "A",
          À: "A",
          Á: "A",
          Â: "A",
          Ầ: "A",
          Ấ: "A",
          Ẫ: "A",
          Ẩ: "A",
          Ã: "A",
          Ā: "A",
          Ă: "A",
          Ằ: "A",
          Ắ: "A",
          Ẵ: "A",
          Ẳ: "A",
          Ȧ: "A",
          Ǡ: "A",
          Ä: "A",
          Ǟ: "A",
          Ả: "A",
          Å: "A",
          Ǻ: "A",
          Ǎ: "A",
          Ȁ: "A",
          Ȃ: "A",
          Ạ: "A",
          Ậ: "A",
          Ặ: "A",
          Ḁ: "A",
          Ą: "A",
          Ⱥ: "A",
          Ɐ: "A",
          Ꜳ: "AA",
          Æ: "AE",
          Ǽ: "AE",
          Ǣ: "AE",
          Ꜵ: "AO",
          Ꜷ: "AU",
          Ꜹ: "AV",
          Ꜻ: "AV",
          Ꜽ: "AY",
          "\u24b7": "B",
          Ｂ: "B",
          Ḃ: "B",
          Ḅ: "B",
          Ḇ: "B",
          Ƀ: "B",
          Ƃ: "B",
          Ɓ: "B",
          "\u24b8": "C",
          Ｃ: "C",
          Ć: "C",
          Ĉ: "C",
          Ċ: "C",
          Č: "C",
          Ç: "C",
          Ḉ: "C",
          Ƈ: "C",
          Ȼ: "C",
          Ꜿ: "C",
          "\u24b9": "D",
          Ｄ: "D",
          Ḋ: "D",
          Ď: "D",
          Ḍ: "D",
          Ḑ: "D",
          Ḓ: "D",
          Ḏ: "D",
          Đ: "D",
          Ƌ: "D",
          Ɗ: "D",
          Ɖ: "D",
          Ꝺ: "D",
          Ǳ: "DZ",
          Ǆ: "DZ",
          ǲ: "Dz",
          ǅ: "Dz",
          "\u24ba": "E",
          Ｅ: "E",
          È: "E",
          É: "E",
          Ê: "E",
          Ề: "E",
          Ế: "E",
          Ễ: "E",
          Ể: "E",
          Ẽ: "E",
          Ē: "E",
          Ḕ: "E",
          Ḗ: "E",
          Ĕ: "E",
          Ė: "E",
          Ë: "E",
          Ẻ: "E",
          Ě: "E",
          Ȅ: "E",
          Ȇ: "E",
          Ẹ: "E",
          Ệ: "E",
          Ȩ: "E",
          Ḝ: "E",
          Ę: "E",
          Ḙ: "E",
          Ḛ: "E",
          Ɛ: "E",
          Ǝ: "E",
          "\u24bb": "F",
          Ｆ: "F",
          Ḟ: "F",
          Ƒ: "F",
          Ꝼ: "F",
          "\u24bc": "G",
          Ｇ: "G",
          Ǵ: "G",
          Ĝ: "G",
          Ḡ: "G",
          Ğ: "G",
          Ġ: "G",
          Ǧ: "G",
          Ģ: "G",
          Ǥ: "G",
          Ɠ: "G",
          Ꞡ: "G",
          Ᵹ: "G",
          Ꝿ: "G",
          "\u24bd": "H",
          Ｈ: "H",
          Ĥ: "H",
          Ḣ: "H",
          Ḧ: "H",
          Ȟ: "H",
          Ḥ: "H",
          Ḩ: "H",
          Ḫ: "H",
          Ħ: "H",
          Ⱨ: "H",
          Ⱶ: "H",
          Ɥ: "H",
          "\u24be": "I",
          Ｉ: "I",
          Ì: "I",
          Í: "I",
          Î: "I",
          Ĩ: "I",
          Ī: "I",
          Ĭ: "I",
          İ: "I",
          Ï: "I",
          Ḯ: "I",
          Ỉ: "I",
          Ǐ: "I",
          Ȉ: "I",
          Ȋ: "I",
          Ị: "I",
          Į: "I",
          Ḭ: "I",
          Ɨ: "I",
          "\u24bf": "J",
          Ｊ: "J",
          Ĵ: "J",
          Ɉ: "J",
          "\u24c0": "K",
          Ｋ: "K",
          Ḱ: "K",
          Ǩ: "K",
          Ḳ: "K",
          Ķ: "K",
          Ḵ: "K",
          Ƙ: "K",
          Ⱪ: "K",
          Ꝁ: "K",
          Ꝃ: "K",
          Ꝅ: "K",
          Ꞣ: "K",
          "\u24c1": "L",
          Ｌ: "L",
          Ŀ: "L",
          Ĺ: "L",
          Ľ: "L",
          Ḷ: "L",
          Ḹ: "L",
          Ļ: "L",
          Ḽ: "L",
          Ḻ: "L",
          Ł: "L",
          Ƚ: "L",
          Ɫ: "L",
          Ⱡ: "L",
          Ꝉ: "L",
          Ꝇ: "L",
          Ꞁ: "L",
          Ǉ: "LJ",
          ǈ: "Lj",
          "\u24c2": "M",
          Ｍ: "M",
          Ḿ: "M",
          Ṁ: "M",
          Ṃ: "M",
          Ɱ: "M",
          Ɯ: "M",
          "\u24c3": "N",
          Ｎ: "N",
          Ǹ: "N",
          Ń: "N",
          Ñ: "N",
          Ṅ: "N",
          Ň: "N",
          Ṇ: "N",
          Ņ: "N",
          Ṋ: "N",
          Ṉ: "N",
          Ƞ: "N",
          Ɲ: "N",
          Ꞑ: "N",
          Ꞥ: "N",
          Ǌ: "NJ",
          ǋ: "Nj",
          "\u24c4": "O",
          Ｏ: "O",
          Ò: "O",
          Ó: "O",
          Ô: "O",
          Ồ: "O",
          Ố: "O",
          Ỗ: "O",
          Ổ: "O",
          Õ: "O",
          Ṍ: "O",
          Ȭ: "O",
          Ṏ: "O",
          Ō: "O",
          Ṑ: "O",
          Ṓ: "O",
          Ŏ: "O",
          Ȯ: "O",
          Ȱ: "O",
          Ö: "O",
          Ȫ: "O",
          Ỏ: "O",
          Ő: "O",
          Ǒ: "O",
          Ȍ: "O",
          Ȏ: "O",
          Ơ: "O",
          Ờ: "O",
          Ớ: "O",
          Ỡ: "O",
          Ở: "O",
          Ợ: "O",
          Ọ: "O",
          Ộ: "O",
          Ǫ: "O",
          Ǭ: "O",
          Ø: "O",
          Ǿ: "O",
          Ɔ: "O",
          Ɵ: "O",
          Ꝋ: "O",
          Ꝍ: "O",
          Ƣ: "OI",
          Ꝏ: "OO",
          Ȣ: "OU",
          "\u24c5": "P",
          Ｐ: "P",
          Ṕ: "P",
          Ṗ: "P",
          Ƥ: "P",
          Ᵽ: "P",
          Ꝑ: "P",
          Ꝓ: "P",
          Ꝕ: "P",
          "\u24c6": "Q",
          Ｑ: "Q",
          Ꝗ: "Q",
          Ꝙ: "Q",
          Ɋ: "Q",
          "\u24c7": "R",
          Ｒ: "R",
          Ŕ: "R",
          Ṙ: "R",
          Ř: "R",
          Ȑ: "R",
          Ȓ: "R",
          Ṛ: "R",
          Ṝ: "R",
          Ŗ: "R",
          Ṟ: "R",
          Ɍ: "R",
          Ɽ: "R",
          Ꝛ: "R",
          Ꞧ: "R",
          Ꞃ: "R",
          "\u24c8": "S",
          Ｓ: "S",
          ẞ: "S",
          Ś: "S",
          Ṥ: "S",
          Ŝ: "S",
          Ṡ: "S",
          Š: "S",
          Ṧ: "S",
          Ṣ: "S",
          Ṩ: "S",
          Ș: "S",
          Ş: "S",
          Ȿ: "S",
          Ꞩ: "S",
          Ꞅ: "S",
          "\u24c9": "T",
          Ｔ: "T",
          Ṫ: "T",
          Ť: "T",
          Ṭ: "T",
          Ț: "T",
          Ţ: "T",
          Ṱ: "T",
          Ṯ: "T",
          Ŧ: "T",
          Ƭ: "T",
          Ʈ: "T",
          Ⱦ: "T",
          Ꞇ: "T",
          Ꜩ: "TZ",
          "\u24ca": "U",
          Ｕ: "U",
          Ù: "U",
          Ú: "U",
          Û: "U",
          Ũ: "U",
          Ṹ: "U",
          Ū: "U",
          Ṻ: "U",
          Ŭ: "U",
          Ü: "U",
          Ǜ: "U",
          Ǘ: "U",
          Ǖ: "U",
          Ǚ: "U",
          Ủ: "U",
          Ů: "U",
          Ű: "U",
          Ǔ: "U",
          Ȕ: "U",
          Ȗ: "U",
          Ư: "U",
          Ừ: "U",
          Ứ: "U",
          Ữ: "U",
          Ử: "U",
          Ự: "U",
          Ụ: "U",
          Ṳ: "U",
          Ų: "U",
          Ṷ: "U",
          Ṵ: "U",
          Ʉ: "U",
          "\u24cb": "V",
          Ｖ: "V",
          Ṽ: "V",
          Ṿ: "V",
          Ʋ: "V",
          Ꝟ: "V",
          Ʌ: "V",
          Ꝡ: "VY",
          "\u24cc": "W",
          Ｗ: "W",
          Ẁ: "W",
          Ẃ: "W",
          Ŵ: "W",
          Ẇ: "W",
          Ẅ: "W",
          Ẉ: "W",
          Ⱳ: "W",
          "\u24cd": "X",
          Ｘ: "X",
          Ẋ: "X",
          Ẍ: "X",
          "\u24ce": "Y",
          Ｙ: "Y",
          Ỳ: "Y",
          Ý: "Y",
          Ŷ: "Y",
          Ỹ: "Y",
          Ȳ: "Y",
          Ẏ: "Y",
          Ÿ: "Y",
          Ỷ: "Y",
          Ỵ: "Y",
          Ƴ: "Y",
          Ɏ: "Y",
          Ỿ: "Y",
          "\u24cf": "Z",
          Ｚ: "Z",
          Ź: "Z",
          Ẑ: "Z",
          Ż: "Z",
          Ž: "Z",
          Ẓ: "Z",
          Ẕ: "Z",
          Ƶ: "Z",
          Ȥ: "Z",
          Ɀ: "Z",
          Ⱬ: "Z",
          Ꝣ: "Z",
          "\u24d0": "a",
          ａ: "a",
          ẚ: "a",
          à: "a",
          á: "a",
          â: "a",
          ầ: "a",
          ấ: "a",
          ẫ: "a",
          ẩ: "a",
          ã: "a",
          ā: "a",
          ă: "a",
          ằ: "a",
          ắ: "a",
          ẵ: "a",
          ẳ: "a",
          ȧ: "a",
          ǡ: "a",
          ä: "a",
          ǟ: "a",
          ả: "a",
          å: "a",
          ǻ: "a",
          ǎ: "a",
          ȁ: "a",
          ȃ: "a",
          ạ: "a",
          ậ: "a",
          ặ: "a",
          ḁ: "a",
          ą: "a",
          ⱥ: "a",
          ɐ: "a",
          ꜳ: "aa",
          æ: "ae",
          ǽ: "ae",
          ǣ: "ae",
          ꜵ: "ao",
          ꜷ: "au",
          ꜹ: "av",
          ꜻ: "av",
          ꜽ: "ay",
          "\u24d1": "b",
          ｂ: "b",
          ḃ: "b",
          ḅ: "b",
          ḇ: "b",
          ƀ: "b",
          ƃ: "b",
          ɓ: "b",
          "\u24d2": "c",
          ｃ: "c",
          ć: "c",
          ĉ: "c",
          ċ: "c",
          č: "c",
          ç: "c",
          ḉ: "c",
          ƈ: "c",
          ȼ: "c",
          ꜿ: "c",
          ↄ: "c",
          "\u24d3": "d",
          ｄ: "d",
          ḋ: "d",
          ď: "d",
          ḍ: "d",
          ḑ: "d",
          ḓ: "d",
          ḏ: "d",
          đ: "d",
          ƌ: "d",
          ɖ: "d",
          ɗ: "d",
          ꝺ: "d",
          ǳ: "dz",
          ǆ: "dz",
          "\u24d4": "e",
          ｅ: "e",
          è: "e",
          é: "e",
          ê: "e",
          ề: "e",
          ế: "e",
          ễ: "e",
          ể: "e",
          ẽ: "e",
          ē: "e",
          ḕ: "e",
          ḗ: "e",
          ĕ: "e",
          ė: "e",
          ë: "e",
          ẻ: "e",
          ě: "e",
          ȅ: "e",
          ȇ: "e",
          ẹ: "e",
          ệ: "e",
          ȩ: "e",
          ḝ: "e",
          ę: "e",
          ḙ: "e",
          ḛ: "e",
          ɇ: "e",
          ɛ: "e",
          ǝ: "e",
          "\u24d5": "f",
          ｆ: "f",
          ḟ: "f",
          ƒ: "f",
          ꝼ: "f",
          "\u24d6": "g",
          ｇ: "g",
          ǵ: "g",
          ĝ: "g",
          ḡ: "g",
          ğ: "g",
          ġ: "g",
          ǧ: "g",
          ģ: "g",
          ǥ: "g",
          ɠ: "g",
          ꞡ: "g",
          ᵹ: "g",
          ꝿ: "g",
          "\u24d7": "h",
          ｈ: "h",
          ĥ: "h",
          ḣ: "h",
          ḧ: "h",
          ȟ: "h",
          ḥ: "h",
          ḩ: "h",
          ḫ: "h",
          ẖ: "h",
          ħ: "h",
          ⱨ: "h",
          ⱶ: "h",
          ɥ: "h",
          ƕ: "hv",
          "\u24d8": "i",
          ｉ: "i",
          ì: "i",
          í: "i",
          î: "i",
          ĩ: "i",
          ī: "i",
          ĭ: "i",
          ï: "i",
          ḯ: "i",
          ỉ: "i",
          ǐ: "i",
          ȉ: "i",
          ȋ: "i",
          ị: "i",
          į: "i",
          ḭ: "i",
          ɨ: "i",
          ı: "i",
          "\u24d9": "j",
          ｊ: "j",
          ĵ: "j",
          ǰ: "j",
          ɉ: "j",
          "\u24da": "k",
          ｋ: "k",
          ḱ: "k",
          ǩ: "k",
          ḳ: "k",
          ķ: "k",
          ḵ: "k",
          ƙ: "k",
          ⱪ: "k",
          ꝁ: "k",
          ꝃ: "k",
          ꝅ: "k",
          ꞣ: "k",
          "\u24db": "l",
          ｌ: "l",
          ŀ: "l",
          ĺ: "l",
          ľ: "l",
          ḷ: "l",
          ḹ: "l",
          ļ: "l",
          ḽ: "l",
          ḻ: "l",
          ſ: "l",
          ł: "l",
          ƚ: "l",
          ɫ: "l",
          ⱡ: "l",
          ꝉ: "l",
          ꞁ: "l",
          ꝇ: "l",
          ǉ: "lj",
          "\u24dc": "m",
          ｍ: "m",
          ḿ: "m",
          ṁ: "m",
          ṃ: "m",
          ɱ: "m",
          ɯ: "m",
          "\u24dd": "n",
          ｎ: "n",
          ǹ: "n",
          ń: "n",
          ñ: "n",
          ṅ: "n",
          ň: "n",
          ṇ: "n",
          ņ: "n",
          ṋ: "n",
          ṉ: "n",
          ƞ: "n",
          ɲ: "n",
          ŉ: "n",
          ꞑ: "n",
          ꞥ: "n",
          ǌ: "nj",
          "\u24de": "o",
          ｏ: "o",
          ò: "o",
          ó: "o",
          ô: "o",
          ồ: "o",
          ố: "o",
          ỗ: "o",
          ổ: "o",
          õ: "o",
          ṍ: "o",
          ȭ: "o",
          ṏ: "o",
          ō: "o",
          ṑ: "o",
          ṓ: "o",
          ŏ: "o",
          ȯ: "o",
          ȱ: "o",
          ö: "o",
          ȫ: "o",
          ỏ: "o",
          ő: "o",
          ǒ: "o",
          ȍ: "o",
          ȏ: "o",
          ơ: "o",
          ờ: "o",
          ớ: "o",
          ỡ: "o",
          ở: "o",
          ợ: "o",
          ọ: "o",
          ộ: "o",
          ǫ: "o",
          ǭ: "o",
          ø: "o",
          ǿ: "o",
          ɔ: "o",
          ꝋ: "o",
          ꝍ: "o",
          ɵ: "o",
          ƣ: "oi",
          ȣ: "ou",
          ꝏ: "oo",
          "\u24df": "p",
          ｐ: "p",
          ṕ: "p",
          ṗ: "p",
          ƥ: "p",
          ᵽ: "p",
          ꝑ: "p",
          ꝓ: "p",
          ꝕ: "p",
          "\u24e0": "q",
          ｑ: "q",
          ɋ: "q",
          ꝗ: "q",
          ꝙ: "q",
          "\u24e1": "r",
          ｒ: "r",
          ŕ: "r",
          ṙ: "r",
          ř: "r",
          ȑ: "r",
          ȓ: "r",
          ṛ: "r",
          ṝ: "r",
          ŗ: "r",
          ṟ: "r",
          ɍ: "r",
          ɽ: "r",
          ꝛ: "r",
          ꞧ: "r",
          ꞃ: "r",
          "\u24e2": "s",
          ｓ: "s",
          ß: "s",
          ś: "s",
          ṥ: "s",
          ŝ: "s",
          ṡ: "s",
          š: "s",
          ṧ: "s",
          ṣ: "s",
          ṩ: "s",
          ș: "s",
          ş: "s",
          ȿ: "s",
          ꞩ: "s",
          ꞅ: "s",
          ẛ: "s",
          "\u24e3": "t",
          ｔ: "t",
          ṫ: "t",
          ẗ: "t",
          ť: "t",
          ṭ: "t",
          ț: "t",
          ţ: "t",
          ṱ: "t",
          ṯ: "t",
          ŧ: "t",
          ƭ: "t",
          ʈ: "t",
          ⱦ: "t",
          ꞇ: "t",
          ꜩ: "tz",
          "\u24e4": "u",
          ｕ: "u",
          ù: "u",
          ú: "u",
          û: "u",
          ũ: "u",
          ṹ: "u",
          ū: "u",
          ṻ: "u",
          ŭ: "u",
          ü: "u",
          ǜ: "u",
          ǘ: "u",
          ǖ: "u",
          ǚ: "u",
          ủ: "u",
          ů: "u",
          ű: "u",
          ǔ: "u",
          ȕ: "u",
          ȗ: "u",
          ư: "u",
          ừ: "u",
          ứ: "u",
          ữ: "u",
          ử: "u",
          ự: "u",
          ụ: "u",
          ṳ: "u",
          ų: "u",
          ṷ: "u",
          ṵ: "u",
          ʉ: "u",
          "\u24e5": "v",
          ｖ: "v",
          ṽ: "v",
          ṿ: "v",
          ʋ: "v",
          ꝟ: "v",
          ʌ: "v",
          ꝡ: "vy",
          "\u24e6": "w",
          ｗ: "w",
          ẁ: "w",
          ẃ: "w",
          ŵ: "w",
          ẇ: "w",
          ẅ: "w",
          ẘ: "w",
          ẉ: "w",
          ⱳ: "w",
          "\u24e7": "x",
          ｘ: "x",
          ẋ: "x",
          ẍ: "x",
          "\u24e8": "y",
          ｙ: "y",
          ỳ: "y",
          ý: "y",
          ŷ: "y",
          ỹ: "y",
          ȳ: "y",
          ẏ: "y",
          ÿ: "y",
          ỷ: "y",
          ẙ: "y",
          ỵ: "y",
          ƴ: "y",
          ɏ: "y",
          ỿ: "y",
          "\u24e9": "z",
          ｚ: "z",
          ź: "z",
          ẑ: "z",
          ż: "z",
          ž: "z",
          ẓ: "z",
          ẕ: "z",
          ƶ: "z",
          ȥ: "z",
          ɀ: "z",
          ⱬ: "z",
          ꝣ: "z"
        };
      (j = a(document)),
        (g = (function() {
          var a = 1;
          return function() {
            return a++;
          };
        })()),
        j.on("mousemove", function(a) {
          (i.x = a.pageX), (i.y = a.pageY);
        }),
        (d = N(Object, {
          bind: function(a) {
            var b = this;
            return function() {
              a.apply(b, arguments);
            };
          },
          init: function(c) {
            var d,
              e,
              h,
              i,
              f = ".select2-results";
            (this.opts = c = this.prepareOpts(c)),
              (this.id = c.id),
              c.element.data("select2") !== b &&
                null !== c.element.data("select2") &&
                c.element.data("select2").destroy(),
              (this.container = this.createContainer()),
              (this.containerId =
                "s2id_" + (c.element.attr("id") || "autogen" + g())),
              (this.containerSelector =
                "#" +
                this.containerId.replace(
                  /([;&,\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g,
                  "\\$1"
                )),
              this.container.attr("id", this.containerId),
              (this.body = w(function() {
                return c.element.closest("body");
              })),
              D(
                this.container,
                this.opts.element,
                this.opts.adaptContainerCssClass
              ),
              this.container.attr("style", c.element.attr("style")),
              this.container.css(K(c.containerCss)),
              this.container.addClass(K(c.containerCssClass)),
              (this.elementTabIndex = this.opts.element.attr("tabindex")),
              this.opts.element
                .data("select2", this)
                .attr("tabindex", "-1")
                .before(this.container)
                .on("click.select2", A),
              this.container.data("select2", this),
              (this.dropdown = this.container.find(".select2-drop")),
              D(
                this.dropdown,
                this.opts.element,
                this.opts.adaptDropdownCssClass
              ),
              this.dropdown.addClass(K(c.dropdownCssClass)),
              this.dropdown.data("select2", this),
              this.dropdown.on("click", A),
              (this.results = d = this.container.find(f)),
              (this.search = e = this.container.find("input.select2-input")),
              (this.queryCount = 0),
              (this.resultsPage = 0),
              (this.context = null),
              this.initContainer(),
              this.container.on("click", A),
              u(this.results),
              this.dropdown.on(
                "mousemove-filtered touchstart touchmove touchend",
                f,
                this.bind(this.highlightUnderEvent)
              ),
              x(80, this.results),
              this.dropdown.on(
                "scroll-debounced",
                f,
                this.bind(this.loadMoreIfNeeded)
              ),
              a(this.container).on("change", ".select2-input", function(a) {
                a.stopPropagation();
              }),
              a(this.dropdown).on("change", ".select2-input", function(a) {
                a.stopPropagation();
              }),
              a.fn.mousewheel &&
                d.mousewheel(function(a, b, c, e) {
                  var f = d.scrollTop();
                  e > 0 && 0 >= f - e
                    ? (d.scrollTop(0), A(a))
                    : 0 > e &&
                      d.get(0).scrollHeight - d.scrollTop() + e <= d.height() &&
                      (d.scrollTop(d.get(0).scrollHeight - d.height()), A(a));
                }),
              t(e),
              e.on("keyup-change input paste", this.bind(this.updateResults)),
              e.on("focus", function() {
                e.addClass("select2-focused");
              }),
              e.on("blur", function() {
                e.removeClass("select2-focused");
              }),
              this.dropdown.on(
                "mouseup",
                f,
                this.bind(function(b) {
                  a(b.target).closest(".select2-result-selectable").length >
                    0 &&
                    (this.highlightUnderEvent(b), this.selectHighlighted(b));
                })
              ),
              this.dropdown.on("click mouseup mousedown", function(a) {
                a.stopPropagation();
              }),
              a.isFunction(this.opts.initSelection) &&
                (this.initSelection(), this.monitorSource()),
              null !== c.maximumInputLength &&
                this.search.attr("maxlength", c.maximumInputLength);
            var h = c.element.prop("disabled");
            h === b && (h = !1), this.enable(!h);
            var i = c.element.prop("readonly");
            i === b && (i = !1),
              this.readonly(i),
              (k = k || p()),
              (this.autofocus = c.element.prop("autofocus")),
              c.element.prop("autofocus", !1),
              this.autofocus && this.focus(),
              (this.nextSearchTerm = b);
          },
          destroy: function() {
            var a = this.opts.element,
              c = a.data("select2");
            this.close(),
              this.propertyObserver &&
                (delete this.propertyObserver, (this.propertyObserver = null)),
              c !== b &&
                (c.container.remove(),
                c.dropdown.remove(),
                a
                  .removeClass("select2-offscreen")
                  .removeData("select2")
                  .off(".select2")
                  .prop("autofocus", this.autofocus || !1),
                this.elementTabIndex
                  ? a.attr({ tabindex: this.elementTabIndex })
                  : a.removeAttr("tabindex"),
                a.show());
          },
          optionToData: function(a) {
            return a.is("option")
              ? {
                  id: a.prop("value"),
                  text: a.text(),
                  element: a.get(),
                  css: a.attr("class"),
                  disabled: a.prop("disabled"),
                  locked:
                    q(a.attr("locked"), "locked") || q(a.data("locked"), !0)
                }
              : a.is("optgroup")
              ? {
                  text: a.attr("label"),
                  children: [],
                  element: a.get(),
                  css: a.attr("class")
                }
              : void 0;
          },
          prepareOpts: function(c) {
            var d,
              e,
              f,
              g,
              h = this;
            if (
              ((d = c.element),
              "select" === d.get(0).tagName.toLowerCase() &&
                (this.select = e = c.element),
              e &&
                a.each(
                  [
                    "id",
                    "multiple",
                    "ajax",
                    "query",
                    "createSearchChoice",
                    "initSelection",
                    "data",
                    "tags"
                  ],
                  function() {
                    if (this in c)
                      throw new Error(
                        "Option '" +
                          this +
                          "' is not allowed for Select2 when attached to a <select> element."
                      );
                  }
                ),
              (c = a.extend(
                {},
                {
                  populateResults: function(d, e, f) {
                    var g,
                      l = this.opts.id;
                    (g = function(d, e, i) {
                      var j, k, m, n, o, p, q, r, s, t;
                      for (
                        d = c.sortResults(d, e, f), j = 0, k = d.length;
                        k > j;
                        j += 1
                      )
                        (m = d[j]),
                          (o = m.disabled === !0),
                          (n = !o && l(m) !== b),
                          (p = m.children && m.children.length > 0),
                          (q = a("<li></li>")),
                          q.addClass("select2-results-dept-" + i),
                          q.addClass("select2-result"),
                          q.addClass(
                            n
                              ? "select2-result-selectable"
                              : "select2-result-unselectable"
                          ),
                          o && q.addClass("select2-disabled"),
                          p && q.addClass("select2-result-with-children"),
                          q.addClass(h.opts.formatResultCssClass(m)),
                          (r = a(document.createElement("div"))),
                          r.addClass("select2-result-label"),
                          (t = c.formatResult(m, r, f, h.opts.escapeMarkup)),
                          t !== b && r.html(t),
                          q.append(r),
                          p &&
                            ((s = a("<ul></ul>")),
                            s.addClass("select2-result-sub"),
                            g(m.children, s, i + 1),
                            q.append(s)),
                          q.data("select2-data", m),
                          e.append(q);
                    }),
                      g(e, d, 0);
                  }
                },
                a.fn.select2.defaults,
                c
              )),
              "function" != typeof c.id &&
                ((f = c.id),
                (c.id = function(a) {
                  return a[f];
                })),
              a.isArray(c.element.data("select2Tags")))
            ) {
              if ("tags" in c)
                throw "tags specified as both an attribute 'data-select2-tags' and in options of Select2 " +
                  c.element.attr("id");
              c.tags = c.element.data("select2Tags");
            }
            if (
              (e
                ? ((c.query = this.bind(function(a) {
                    var f,
                      g,
                      i,
                      c = { results: [], more: !1 },
                      e = a.term;
                    (i = function(b, c) {
                      var d;
                      b.is("option")
                        ? a.matcher(e, b.text(), b) && c.push(h.optionToData(b))
                        : b.is("optgroup") &&
                          ((d = h.optionToData(b)),
                          b.children().each2(function(a, b) {
                            i(b, d.children);
                          }),
                          d.children.length > 0 && c.push(d));
                    }),
                      (f = d.children()),
                      this.getPlaceholder() !== b &&
                        f.length > 0 &&
                        ((g = this.getPlaceholderOption()),
                        g && (f = f.not(g))),
                      f.each2(function(a, b) {
                        i(b, c.results);
                      }),
                      a.callback(c);
                  })),
                  (c.id = function(a) {
                    return a.id;
                  }),
                  (c.formatResultCssClass = function(a) {
                    return a.css;
                  }))
                : "query" in c ||
                  ("ajax" in c
                    ? ((g = c.element.data("ajax-url")),
                      g && g.length > 0 && (c.ajax.url = g),
                      (c.query = G.call(c.element, c.ajax)))
                    : "data" in c
                    ? (c.query = H(c.data))
                    : "tags" in c &&
                      ((c.query = I(c.tags)),
                      c.createSearchChoice === b &&
                        (c.createSearchChoice = function(b) {
                          return { id: a.trim(b), text: a.trim(b) };
                        }),
                      c.initSelection === b &&
                        (c.initSelection = function(b, d) {
                          var e = [];
                          a(r(b.val(), c.separator)).each(function() {
                            var b = { id: this, text: this },
                              d = c.tags;
                            a.isFunction(d) && (d = d()),
                              a(d).each(function() {
                                return q(this.id, b.id)
                                  ? ((b = this), !1)
                                  : void 0;
                              }),
                              e.push(b);
                          }),
                            d(e);
                        }))),
              "function" != typeof c.query)
            )
              throw "query function not defined for Select2 " +
                c.element.attr("id");
            return c;
          },
          monitorSource: function() {
            var c,
              a = this.opts.element;
            a.on(
              "change.select2",
              this.bind(function() {
                this.opts.element.data("select2-change-triggered") !== !0 &&
                  this.initSelection();
              })
            ),
              (c = this.bind(function() {
                var d,
                  f = a.prop("disabled");
                f === b && (f = !1), this.enable(!f);
                var d = a.prop("readonly");
                d === b && (d = !1),
                  this.readonly(d),
                  D(
                    this.container,
                    this.opts.element,
                    this.opts.adaptContainerCssClass
                  ),
                  this.container.addClass(K(this.opts.containerCssClass)),
                  D(
                    this.dropdown,
                    this.opts.element,
                    this.opts.adaptDropdownCssClass
                  ),
                  this.dropdown.addClass(K(this.opts.dropdownCssClass));
              })),
              a.on("propertychange.select2 DOMAttrModified.select2", c),
              this.mutationCallback === b &&
                (this.mutationCallback = function(a) {
                  a.forEach(c);
                }),
              "undefined" != typeof WebKitMutationObserver &&
                (this.propertyObserver &&
                  (delete this.propertyObserver,
                  (this.propertyObserver = null)),
                (this.propertyObserver = new WebKitMutationObserver(
                  this.mutationCallback
                )),
                this.propertyObserver.observe(a.get(0), {
                  attributes: !0,
                  subtree: !1
                }));
          },
          triggerSelect: function(b) {
            var c = a.Event("select2-selecting", {
              val: this.id(b),
              object: b
            });
            return this.opts.element.trigger(c), !c.isDefaultPrevented();
          },
          triggerChange: function(b) {
            (b = b || {}),
              (b = a.extend({}, b, { type: "change", val: this.val() })),
              this.opts.element.data("select2-change-triggered", !0),
              this.opts.element.trigger(b),
              this.opts.element.data("select2-change-triggered", !1),
              this.opts.element.click(),
              this.opts.blurOnChange && this.opts.element.blur();
          },
          isInterfaceEnabled: function() {
            return this.enabledInterface === !0;
          },
          enableInterface: function() {
            var a = this._enabled && !this._readonly,
              b = !a;
            return a === this.enabledInterface
              ? !1
              : (this.container.toggleClass("select2-container-disabled", b),
                this.close(),
                (this.enabledInterface = a),
                !0);
          },
          enable: function(a) {
            a === b && (a = !0),
              this._enabled !== a &&
                ((this._enabled = a),
                this.opts.element.prop("disabled", !a),
                this.enableInterface());
          },
          disable: function() {
            this.enable(!1);
          },
          readonly: function(a) {
            return (
              a === b && (a = !1),
              this._readonly === a
                ? !1
                : ((this._readonly = a),
                  this.opts.element.prop("readonly", a),
                  this.enableInterface(),
                  !0)
            );
          },
          opened: function() {
            return this.container.hasClass("select2-dropdown-open");
          },
          positionDropdown: function() {
            var q,
              r,
              s,
              t,
              b = this.dropdown,
              c = this.container.offset(),
              d = this.container.outerHeight(!1),
              e = this.container.outerWidth(!1),
              f = b.outerHeight(!1),
              g = a(window).scrollLeft() + a(window).width(),
              h = a(window).scrollTop() + a(window).height(),
              i = c.top + d,
              j = c.left,
              l = h >= i + f,
              m = c.top - f >= this.body().scrollTop(),
              n = b.outerWidth(!1),
              o = g >= j + n,
              p = b.hasClass("select2-drop-above");
            this.opts.dropdownAutoWidth
              ? ((t = a(".select2-results", b)[0]),
                b.addClass("select2-drop-auto-width"),
                b.css("width", ""),
                (n =
                  b.outerWidth(!1) +
                  (t.scrollHeight === t.clientHeight ? 0 : k.width)),
                n > e ? (e = n) : (n = e),
                (o = g >= j + n))
              : this.container.removeClass("select2-drop-auto-width"),
              "static" !== this.body().css("position") &&
                ((q = this.body().offset()), (i -= q.top), (j -= q.left)),
              p
                ? ((r = !0), !m && l && (r = !1))
                : ((r = !1), !l && m && (r = !0)),
              o || (j = c.left + e - n),
              r
                ? ((i = c.top - f),
                  this.container.addClass("select2-drop-above"),
                  b.addClass("select2-drop-above"))
                : (this.container.removeClass("select2-drop-above"),
                  b.removeClass("select2-drop-above")),
              (s = a.extend(
                { top: i, left: j, width: e },
                K(this.opts.dropdownCss)
              )),
              b.css(s);
          },
          shouldOpen: function() {
            var b;
            return this.opened()
              ? !1
              : this._enabled === !1 || this._readonly === !0
              ? !1
              : ((b = a.Event("select2-opening")),
                this.opts.element.trigger(b),
                !b.isDefaultPrevented());
          },
          clearDropdownAlignmentPreference: function() {
            this.container.removeClass("select2-drop-above"),
              this.dropdown.removeClass("select2-drop-above");
          },
          open: function() {
            return this.shouldOpen() ? (this.opening(), !0) : !1;
          },
          opening: function() {
            var f,
              b = this.containerId,
              c = "scroll." + b,
              d = "resize." + b,
              e = "orientationchange." + b;
            this.container
              .addClass("select2-dropdown-open")
              .addClass("select2-container-active"),
              this.clearDropdownAlignmentPreference(),
              this.dropdown[0] !==
                this.body()
                  .children()
                  .last()[0] && this.dropdown.detach().appendTo(this.body()),
              (f = a("#select2-drop-mask")),
              0 == f.length &&
                ((f = a(document.createElement("div"))),
                f
                  .attr("id", "select2-drop-mask")
                  .attr("class", "select2-drop-mask"),
                f.hide(),
                f.appendTo(this.body()),
                f.on("mousedown touchstart click", function(b) {
                  var d,
                    c = a("#select2-drop");
                  c.length > 0 &&
                    ((d = c.data("select2")),
                    d.opts.selectOnBlur && d.selectHighlighted({ noFocus: !0 }),
                    d.close({ focus: !1 }),
                    b.preventDefault(),
                    b.stopPropagation());
                })),
              this.dropdown.prev()[0] !== f[0] && this.dropdown.before(f),
              a("#select2-drop").removeAttr("id"),
              this.dropdown.attr("id", "select2-drop"),
              f.show(),
              this.positionDropdown(),
              this.dropdown.show(),
              this.positionDropdown(),
              this.dropdown.addClass("select2-drop-active");
            var h = this;
            this.container
              .parents()
              .add(window)
              .each(function() {
                a(this).on(d + " " + c + " " + e, function() {
                  h.positionDropdown();
                });
              });
          },
          close: function() {
            if (this.opened()) {
              var b = this.containerId,
                c = "scroll." + b,
                d = "resize." + b,
                e = "orientationchange." + b;
              this.container
                .parents()
                .add(window)
                .each(function() {
                  a(this)
                    .off(c)
                    .off(d)
                    .off(e);
                }),
                this.clearDropdownAlignmentPreference(),
                a("#select2-drop-mask").hide(),
                this.dropdown.removeAttr("id"),
                this.dropdown.hide(),
                this.container
                  .removeClass("select2-dropdown-open")
                  .removeClass("select2-container-active"),
                this.results.empty(),
                this.clearSearch(),
                this.search.removeClass("select2-active"),
                this.opts.element.trigger(a.Event("select2-close"));
            }
          },
          externalSearch: function(a) {
            this.open(), this.search.val(a), this.updateResults(!1);
          },
          clearSearch: function() {},
          getMaximumSelectionSize: function() {
            return K(this.opts.maximumSelectionSize);
          },
          ensureHighlightVisible: function() {
            var c,
              d,
              e,
              f,
              g,
              h,
              i,
              b = this.results;
            if (((d = this.highlight()), !(0 > d))) {
              if (0 == d) return b.scrollTop(0), void 0;
              (c = this.findHighlightableChoices().find(
                ".select2-result-label"
              )),
                (e = a(c[d])),
                (f = e.offset().top + e.outerHeight(!0)),
                d === c.length - 1 &&
                  ((i = b.find("li.select2-more-results")),
                  i.length > 0 && (f = i.offset().top + i.outerHeight(!0))),
                (g = b.offset().top + b.outerHeight(!0)),
                f > g && b.scrollTop(b.scrollTop() + (f - g)),
                (h = e.offset().top - b.offset().top),
                0 > h &&
                  "none" != e.css("display") &&
                  b.scrollTop(b.scrollTop() + h);
            }
          },
          findHighlightableChoices: function() {
            return this.results.find(
              ".select2-result-selectable:not(.select2-disabled)"
            );
          },
          moveHighlight: function(b) {
            for (
              var c = this.findHighlightableChoices(), d = this.highlight();
              d > -1 && d < c.length;

            ) {
              d += b;
              var e = a(c[d]);
              if (
                e.hasClass("select2-result-selectable") &&
                !e.hasClass("select2-disabled") &&
                !e.hasClass("select2-selected")
              ) {
                this.highlight(d);
                break;
              }
            }
          },
          highlight: function(b) {
            var d,
              e,
              c = this.findHighlightableChoices();
            return 0 === arguments.length
              ? o(c.filter(".select2-highlighted")[0], c.get())
              : (b >= c.length && (b = c.length - 1),
                0 > b && (b = 0),
                this.removeHighlight(),
                (d = a(c[b])),
                d.addClass("select2-highlighted"),
                this.ensureHighlightVisible(),
                (e = d.data("select2-data")),
                e &&
                  this.opts.element.trigger({
                    type: "select2-highlight",
                    val: this.id(e),
                    choice: e
                  }),
                void 0);
          },
          removeHighlight: function() {
            this.results
              .find(".select2-highlighted")
              .removeClass("select2-highlighted");
          },
          countSelectableResults: function() {
            return this.findHighlightableChoices().length;
          },
          highlightUnderEvent: function(b) {
            var c = a(b.target).closest(".select2-result-selectable");
            if (c.length > 0 && !c.is(".select2-highlighted")) {
              var d = this.findHighlightableChoices();
              this.highlight(d.index(c));
            } else 0 == c.length && this.removeHighlight();
          },
          loadMoreIfNeeded: function() {
            var c,
              a = this.results,
              b = a.find("li.select2-more-results"),
              e = this.resultsPage + 1,
              f = this,
              g = this.search.val(),
              h = this.context;
            0 !== b.length &&
              ((c = b.offset().top - a.offset().top - a.height()),
              c <= this.opts.loadMorePadding &&
                (b.addClass("select2-active"),
                this.opts.query({
                  element: this.opts.element,
                  term: g,
                  page: e,
                  context: h,
                  matcher: this.opts.matcher,
                  callback: this.bind(function(c) {
                    f.opened() &&
                      (f.opts.populateResults.call(this, a, c.results, {
                        term: g,
                        page: e,
                        context: h
                      }),
                      f.postprocessResults(c, !1, !1),
                      c.more === !0
                        ? (b
                            .detach()
                            .appendTo(a)
                            .text(f.opts.formatLoadMore(e + 1)),
                          window.setTimeout(function() {
                            f.loadMoreIfNeeded();
                          }, 10))
                        : b.remove(),
                      f.positionDropdown(),
                      (f.resultsPage = e),
                      (f.context = c.context),
                      this.opts.element.trigger({
                        type: "select2-loaded",
                        items: c
                      }));
                  })
                })));
          },
          tokenize: function() {},
          updateResults: function(c) {
            function m() {
              d.removeClass("select2-active"), h.positionDropdown();
            }
            function n(a) {
              e.html(a), m();
            }
            var g,
              i,
              l,
              d = this.search,
              e = this.results,
              f = this.opts,
              h = this,
              j = d.val(),
              k = a.data(this.container, "select2-last-term");
            if (
              (c === !0 || !k || !q(j, k)) &&
              (a.data(this.container, "select2-last-term", j),
              c === !0 || (this.showSearchInput !== !1 && this.opened()))
            ) {
              l = ++this.queryCount;
              var o = this.getMaximumSelectionSize();
              if (
                o >= 1 &&
                ((g = this.data()),
                a.isArray(g) &&
                  g.length >= o &&
                  J(f.formatSelectionTooBig, "formatSelectionTooBig"))
              )
                return (
                  n(
                    "<li class='select2-selection-limit'>" +
                      f.formatSelectionTooBig(o) +
                      "</li>"
                  ),
                  void 0
                );
              if (d.val().length < f.minimumInputLength)
                return (
                  J(f.formatInputTooShort, "formatInputTooShort")
                    ? n(
                        "<li class='select2-no-results'>" +
                          f.formatInputTooShort(d.val(), f.minimumInputLength) +
                          "</li>"
                      )
                    : n(""),
                  c && this.showSearch && this.showSearch(!0),
                  void 0
                );
              if (f.maximumInputLength && d.val().length > f.maximumInputLength)
                return (
                  J(f.formatInputTooLong, "formatInputTooLong")
                    ? n(
                        "<li class='select2-no-results'>" +
                          f.formatInputTooLong(d.val(), f.maximumInputLength) +
                          "</li>"
                      )
                    : n(""),
                  void 0
                );
              f.formatSearching &&
                0 === this.findHighlightableChoices().length &&
                n(
                  "<li class='select2-searching'>" +
                    f.formatSearching() +
                    "</li>"
                ),
                d.addClass("select2-active"),
                this.removeHighlight(),
                (i = this.tokenize()),
                i != b && null != i && d.val(i),
                (this.resultsPage = 1),
                f.query({
                  element: f.element,
                  term: d.val(),
                  page: this.resultsPage,
                  context: null,
                  matcher: f.matcher,
                  callback: this.bind(function(g) {
                    var i;
                    if (l == this.queryCount) {
                      if (!this.opened())
                        return (
                          this.search.removeClass("select2-active"), void 0
                        );
                      if (
                        ((this.context = g.context === b ? null : g.context),
                        this.opts.createSearchChoice &&
                          "" !== d.val() &&
                          ((i = this.opts.createSearchChoice.call(
                            h,
                            d.val(),
                            g.results
                          )),
                          i !== b &&
                            null !== i &&
                            h.id(i) !== b &&
                            null !== h.id(i) &&
                            0 ===
                              a(g.results).filter(function() {
                                return q(h.id(this), h.id(i));
                              }).length &&
                            g.results.unshift(i)),
                        0 === g.results.length &&
                          J(f.formatNoMatches, "formatNoMatches"))
                      )
                        return (
                          n(
                            "<li class='select2-no-results'>" +
                              f.formatNoMatches(d.val()) +
                              "</li>"
                          ),
                          void 0
                        );
                      e.empty(),
                        h.opts.populateResults.call(this, e, g.results, {
                          term: d.val(),
                          page: this.resultsPage,
                          context: null
                        }),
                        g.more === !0 &&
                          J(f.formatLoadMore, "formatLoadMore") &&
                          (e.append(
                            "<li class='select2-more-results'>" +
                              h.opts.escapeMarkup(
                                f.formatLoadMore(this.resultsPage)
                              ) +
                              "</li>"
                          ),
                          window.setTimeout(function() {
                            h.loadMoreIfNeeded();
                          }, 10)),
                        this.postprocessResults(g, c),
                        m(),
                        this.opts.element.trigger({
                          type: "select2-loaded",
                          items: g
                        });
                    }
                  })
                });
            }
          },
          cancel: function() {
            this.close();
          },
          blur: function() {
            this.opts.selectOnBlur && this.selectHighlighted({ noFocus: !0 }),
              this.close(),
              this.container.removeClass("select2-container-active"),
              this.search[0] === document.activeElement && this.search.blur(),
              this.clearSearch(),
              this.selection
                .find(".select2-search-choice-focus")
                .removeClass("select2-search-choice-focus");
          },
          focusSearch: function() {
            y(this.search);
          },
          selectHighlighted: function(a) {
            var b = this.highlight(),
              c = this.results.find(".select2-highlighted"),
              d = c.closest(".select2-result").data("select2-data");
            d
              ? (this.highlight(b), this.onSelect(d, a))
              : a && a.noFocus && this.close();
          },
          getPlaceholder: function() {
            var a;
            return (
              this.opts.element.attr("placeholder") ||
              this.opts.element.attr("data-placeholder") ||
              this.opts.element.data("placeholder") ||
              this.opts.placeholder ||
              ((a = this.getPlaceholderOption()) !== b ? a.text() : b)
            );
          },
          getPlaceholderOption: function() {
            if (this.select) {
              var a = this.select.children().first();
              if (this.opts.placeholderOption !== b)
                return (
                  ("first" === this.opts.placeholderOption && a) ||
                  ("function" == typeof this.opts.placeholderOption &&
                    this.opts.placeholderOption(this.select))
                );
              if ("" === a.text() && "" === a.val()) return a;
            }
          },
          initContainerWidth: function() {
            function c() {
              var c, d, e, f, g;
              if ("off" === this.opts.width) return null;
              if ("element" === this.opts.width)
                return 0 === this.opts.element.outerWidth(!1)
                  ? "auto"
                  : this.opts.element.outerWidth(!1) + "px";
              if ("copy" === this.opts.width || "resolve" === this.opts.width) {
                if (((c = this.opts.element.attr("style")), c !== b))
                  for (d = c.split(";"), f = 0, g = d.length; g > f; f += 1)
                    if (
                      ((e = d[f]
                        .replace(/\s/g, "")
                        .match(
                          /[^-]width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i
                        )),
                      null !== e && e.length >= 1)
                    )
                      return e[1];
                return "resolve" === this.opts.width
                  ? ((c = this.opts.element.css("width")),
                    c.indexOf("%") > 0
                      ? c
                      : 0 === this.opts.element.outerWidth(!1)
                      ? "auto"
                      : this.opts.element.outerWidth(!1) + "px")
                  : null;
              }
              return a.isFunction(this.opts.width)
                ? this.opts.width()
                : this.opts.width;
            }
            var d = c.call(this);
            null !== d && this.container.css("width", d);
          }
        })),
        (e = N(d, {
          createContainer: function() {
            var b = a(document.createElement("div"))
              .attr({ class: "select2-container" })
              .html(
                [
                  "<a href='javascript:void(0)' onclick='return false;' class='select2-choice' tabindex='-1'>",
                  "   <span class='select2-chosen'>&nbsp;</span><abbr class='select2-search-choice-close'></abbr>",
                  "   <span class='select2-arrow'><b></b></span>",
                  "</a>",
                  "<input class='select2-focusser select2-offscreen' type='text'/>",
                  "<div class='select2-drop select2-display-none'>",
                  "   <div class='select2-search'>",
                  "       <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'/>",
                  "   </div>",
                  "   <ul class='select2-results'>",
                  "   </ul>",
                  "</div>"
                ].join("")
              );
            return b;
          },
          enableInterface: function() {
            this.parent.enableInterface.apply(this, arguments) &&
              this.focusser.prop("disabled", !this.isInterfaceEnabled());
          },
          opening: function() {
            var c, d, e;
            this.opts.minimumResultsForSearch >= 0 && this.showSearch(!0),
              this.parent.opening.apply(this, arguments),
              this.showSearchInput !== !1 &&
                this.search.val(this.focusser.val()),
              this.search.focus(),
              (c = this.search.get(0)),
              c.createTextRange
                ? ((d = c.createTextRange()), d.collapse(!1), d.select())
                : c.setSelectionRange &&
                  ((e = this.search.val().length), c.setSelectionRange(e, e)),
              "" === this.search.val() &&
                this.nextSearchTerm != b &&
                (this.search.val(this.nextSearchTerm), this.search.select()),
              this.focusser.prop("disabled", !0).val(""),
              this.updateResults(!0),
              this.opts.element.trigger(a.Event("select2-open"));
          },
          close: function(a) {
            this.opened() &&
              (this.parent.close.apply(this, arguments),
              (a = a || { focus: !0 }),
              this.focusser.removeAttr("disabled"),
              a.focus && this.focusser.focus());
          },
          focus: function() {
            this.opened()
              ? this.close()
              : (this.focusser.removeAttr("disabled"), this.focusser.focus());
          },
          isFocused: function() {
            return this.container.hasClass("select2-container-active");
          },
          cancel: function() {
            this.parent.cancel.apply(this, arguments),
              this.focusser.removeAttr("disabled"),
              this.focusser.focus();
          },
          destroy: function() {
            a("label[for='" + this.focusser.attr("id") + "']").attr(
              "for",
              this.opts.element.attr("id")
            ),
              this.parent.destroy.apply(this, arguments);
          },
          initContainer: function() {
            var b,
              d = this.container,
              e = this.dropdown;
            this.opts.minimumResultsForSearch < 0
              ? this.showSearch(!1)
              : this.showSearch(!0),
              (this.selection = b = d.find(".select2-choice")),
              (this.focusser = d.find(".select2-focusser")),
              this.focusser.attr("id", "s2id_autogen" + g()),
              a("label[for='" + this.opts.element.attr("id") + "']").attr(
                "for",
                this.focusser.attr("id")
              ),
              this.focusser.attr("tabindex", this.elementTabIndex),
              this.search.on(
                "keydown",
                this.bind(function(a) {
                  if (this.isInterfaceEnabled()) {
                    if (a.which === c.PAGE_UP || a.which === c.PAGE_DOWN)
                      return A(a), void 0;
                    switch (a.which) {
                      case c.UP:
                      case c.DOWN:
                        return (
                          this.moveHighlight(a.which === c.UP ? -1 : 1),
                          A(a),
                          void 0
                        );
                      case c.ENTER:
                        return this.selectHighlighted(), A(a), void 0;
                      case c.TAB:
                        return this.selectHighlighted({ noFocus: !0 }), void 0;
                      case c.ESC:
                        return this.cancel(a), A(a), void 0;
                    }
                  }
                })
              ),
              this.search.on(
                "blur",
                this.bind(function() {
                  document.activeElement === this.body().get(0) &&
                    window.setTimeout(
                      this.bind(function() {
                        this.search.focus();
                      }),
                      0
                    );
                })
              ),
              this.focusser.on(
                "keydown",
                this.bind(function(a) {
                  if (
                    this.isInterfaceEnabled() &&
                    a.which !== c.TAB &&
                    !c.isControl(a) &&
                    !c.isFunctionKey(a) &&
                    a.which !== c.ESC
                  ) {
                    if (this.opts.openOnEnter === !1 && a.which === c.ENTER)
                      return A(a), void 0;
                    if (
                      a.which == c.DOWN ||
                      a.which == c.UP ||
                      (a.which == c.ENTER && this.opts.openOnEnter)
                    ) {
                      if (a.altKey || a.ctrlKey || a.shiftKey || a.metaKey)
                        return;
                      return this.open(), A(a), void 0;
                    }
                    return a.which == c.DELETE || a.which == c.BACKSPACE
                      ? (this.opts.allowClear && this.clear(), A(a), void 0)
                      : void 0;
                  }
                })
              ),
              t(this.focusser),
              this.focusser.on(
                "keyup-change input",
                this.bind(function(a) {
                  if (this.opts.minimumResultsForSearch >= 0) {
                    if ((a.stopPropagation(), this.opened())) return;
                    this.open();
                  }
                })
              ),
              b.on(
                "mousedown",
                "abbr",
                this.bind(function(a) {
                  this.isInterfaceEnabled() &&
                    (this.clear(), B(a), this.close(), this.selection.focus());
                })
              ),
              b.on(
                "mousedown",
                this.bind(function(b) {
                  this.container.hasClass("select2-container-active") ||
                    this.opts.element.trigger(a.Event("select2-focus")),
                    this.opened()
                      ? this.close()
                      : this.isInterfaceEnabled() && this.open(),
                    A(b);
                })
              ),
              e.on(
                "mousedown",
                this.bind(function() {
                  this.search.focus();
                })
              ),
              b.on(
                "focus",
                this.bind(function(a) {
                  A(a);
                })
              ),
              this.focusser
                .on(
                  "focus",
                  this.bind(function() {
                    this.container.hasClass("select2-container-active") ||
                      this.opts.element.trigger(a.Event("select2-focus")),
                      this.container.addClass("select2-container-active");
                  })
                )
                .on(
                  "blur",
                  this.bind(function() {
                    this.opened() ||
                      (this.container.removeClass("select2-container-active"),
                      this.opts.element.trigger(a.Event("select2-blur")));
                  })
                ),
              this.search.on(
                "focus",
                this.bind(function() {
                  this.container.hasClass("select2-container-active") ||
                    this.opts.element.trigger(a.Event("select2-focus")),
                    this.container.addClass("select2-container-active");
                })
              ),
              this.initContainerWidth(),
              this.opts.element.addClass("select2-offscreen"),
              this.setPlaceholder();
          },
          clear: function(b) {
            var c = this.selection.data("select2-data");
            if (c) {
              var d = a.Event("select2-clearing");
              if ((this.opts.element.trigger(d), d.isDefaultPrevented()))
                return;
              var e = this.getPlaceholderOption();
              this.opts.element.val(e ? e.val() : ""),
                this.selection.find(".select2-chosen").empty(),
                this.selection.removeData("select2-data"),
                this.setPlaceholder(),
                b !== !1 &&
                  (this.opts.element.trigger({
                    type: "select2-removed",
                    val: this.id(c),
                    choice: c
                  }),
                  this.triggerChange({ removed: c }));
            }
          },
          initSelection: function() {
            if (this.isPlaceholderOptionSelected())
              this.updateSelection(null), this.close(), this.setPlaceholder();
            else {
              var c = this;
              this.opts.initSelection.call(null, this.opts.element, function(
                a
              ) {
                a !== b &&
                  null !== a &&
                  (c.updateSelection(a), c.close(), c.setPlaceholder());
              });
            }
          },
          isPlaceholderOptionSelected: function() {
            var a;
            return this.getPlaceholder()
              ? ((a = this.getPlaceholderOption()) !== b &&
                  a.is(":selected")) ||
                  "" === this.opts.element.val() ||
                  this.opts.element.val() === b ||
                  null === this.opts.element.val()
              : !1;
          },
          prepareOpts: function() {
            var b = this.parent.prepareOpts.apply(this, arguments),
              c = this;
            return (
              "select" === b.element.get(0).tagName.toLowerCase()
                ? (b.initSelection = function(a, b) {
                    var d = a.find(":selected");
                    b(c.optionToData(d));
                  })
                : "data" in b &&
                  (b.initSelection =
                    b.initSelection ||
                    function(c, d) {
                      var e = c.val(),
                        f = null;
                      b.query({
                        matcher: function(a, c, d) {
                          var g = q(e, b.id(d));
                          return g && (f = d), g;
                        },
                        callback: a.isFunction(d)
                          ? function() {
                              d(f);
                            }
                          : a.noop
                      });
                    }),
              b
            );
          },
          getPlaceholder: function() {
            return this.select && this.getPlaceholderOption() === b
              ? b
              : this.parent.getPlaceholder.apply(this, arguments);
          },
          setPlaceholder: function() {
            var a = this.getPlaceholder();
            if (this.isPlaceholderOptionSelected() && a !== b) {
              if (this.select && this.getPlaceholderOption() === b) return;
              this.selection
                .find(".select2-chosen")
                .html(this.opts.escapeMarkup(a)),
                this.selection.addClass("select2-default"),
                this.container.removeClass("select2-allowclear");
            }
          },
          postprocessResults: function(a, b, c) {
            var d = 0,
              e = this;
            if (
              (this.findHighlightableChoices().each2(function(a, b) {
                return q(e.id(b.data("select2-data")), e.opts.element.val())
                  ? ((d = a), !1)
                  : void 0;
              }),
              c !== !1 &&
                (b === !0 && d >= 0 ? this.highlight(d) : this.highlight(0)),
              b === !0)
            ) {
              var g = this.opts.minimumResultsForSearch;
              g >= 0 && this.showSearch(L(a.results) >= g);
            }
          },
          showSearch: function(b) {
            this.showSearchInput !== b &&
              ((this.showSearchInput = b),
              this.dropdown
                .find(".select2-search")
                .toggleClass("select2-search-hidden", !b),
              this.dropdown
                .find(".select2-search")
                .toggleClass("select2-offscreen", !b),
              a(this.dropdown, this.container).toggleClass(
                "select2-with-searchbox",
                b
              ));
          },
          onSelect: function(a, b) {
            if (this.triggerSelect(a)) {
              var c = this.opts.element.val(),
                d = this.data();
              this.opts.element.val(this.id(a)),
                this.updateSelection(a),
                this.opts.element.trigger({
                  type: "select2-selected",
                  val: this.id(a),
                  choice: a
                }),
                (this.nextSearchTerm = this.opts.nextSearchTerm(
                  a,
                  this.search.val()
                )),
                this.close(),
                (b && b.noFocus) || this.focusser.focus(),
                q(c, this.id(a)) ||
                  this.triggerChange({ added: a, removed: d });
            }
          },
          updateSelection: function(a) {
            var d,
              e,
              c = this.selection.find(".select2-chosen");
            this.selection.data("select2-data", a),
              c.empty(),
              null !== a &&
                (d = this.opts.formatSelection(a, c, this.opts.escapeMarkup)),
              d !== b && c.append(d),
              (e = this.opts.formatSelectionCssClass(a, c)),
              e !== b && c.addClass(e),
              this.selection.removeClass("select2-default"),
              this.opts.allowClear &&
                this.getPlaceholder() !== b &&
                this.container.addClass("select2-allowclear");
          },
          val: function() {
            var a,
              c = !1,
              d = null,
              e = this,
              f = this.data();
            if (0 === arguments.length) return this.opts.element.val();
            if (
              ((a = arguments[0]),
              arguments.length > 1 && (c = arguments[1]),
              this.select)
            )
              this.select
                .val(a)
                .find(":selected")
                .each2(function(a, b) {
                  return (d = e.optionToData(b)), !1;
                }),
                this.updateSelection(d),
                this.setPlaceholder(),
                c && this.triggerChange({ added: d, removed: f });
            else {
              if (!a && 0 !== a) return this.clear(c), void 0;
              if (this.opts.initSelection === b)
                throw new Error(
                  "cannot call val() if initSelection() is not defined"
                );
              this.opts.element.val(a),
                this.opts.initSelection(this.opts.element, function(a) {
                  e.opts.element.val(a ? e.id(a) : ""),
                    e.updateSelection(a),
                    e.setPlaceholder(),
                    c && e.triggerChange({ added: a, removed: f });
                });
            }
          },
          clearSearch: function() {
            this.search.val(""), this.focusser.val("");
          },
          data: function(a) {
            var c,
              d = !1;
            return 0 === arguments.length
              ? ((c = this.selection.data("select2-data")),
                c == b && (c = null),
                c)
              : (arguments.length > 1 && (d = arguments[1]),
                a
                  ? ((c = this.data()),
                    this.opts.element.val(a ? this.id(a) : ""),
                    this.updateSelection(a),
                    d && this.triggerChange({ added: a, removed: c }))
                  : this.clear(d),
                void 0);
          }
        })),
        (f = N(d, {
          createContainer: function() {
            var b = a(document.createElement("div"))
              .attr({ class: "select2-container select2-container-multi" })
              .html(
                [
                  "<ul class='select2-choices'>",
                  "  <li class='select2-search-field'>",
                  "    <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'>",
                  "  </li>",
                  "</ul>",
                  "<div class='select2-drop select2-drop-multi select2-display-none'>",
                  "   <ul class='select2-results'>",
                  "   </ul>",
                  "</div>"
                ].join("")
              );
            return b;
          },
          prepareOpts: function() {
            var b = this.parent.prepareOpts.apply(this, arguments),
              c = this;
            return (
              "select" === b.element.get(0).tagName.toLowerCase()
                ? (b.initSelection = function(a, b) {
                    var d = [];
                    a.find(":selected").each2(function(a, b) {
                      d.push(c.optionToData(b));
                    }),
                      b(d);
                  })
                : "data" in b &&
                  (b.initSelection =
                    b.initSelection ||
                    function(c, d) {
                      var e = r(c.val(), b.separator),
                        f = [];
                      b.query({
                        matcher: function(c, d, g) {
                          var h = a.grep(e, function(a) {
                            return q(a, b.id(g));
                          }).length;
                          return h && f.push(g), h;
                        },
                        callback: a.isFunction(d)
                          ? function() {
                              for (var a = [], c = 0; c < e.length; c++)
                                for (var g = e[c], h = 0; h < f.length; h++) {
                                  var i = f[h];
                                  if (q(g, b.id(i))) {
                                    a.push(i), f.splice(h, 1);
                                    break;
                                  }
                                }
                              d(a);
                            }
                          : a.noop
                      });
                    }),
              b
            );
          },
          selectChoice: function(a) {
            var b = this.container.find(".select2-search-choice-focus");
            (b.length && a && a[0] == b[0]) ||
              (b.length && this.opts.element.trigger("choice-deselected", b),
              b.removeClass("select2-search-choice-focus"),
              a &&
                a.length &&
                (this.close(),
                a.addClass("select2-search-choice-focus"),
                this.opts.element.trigger("choice-selected", a)));
          },
          destroy: function() {
            a("label[for='" + this.search.attr("id") + "']").attr(
              "for",
              this.opts.element.attr("id")
            ),
              this.parent.destroy.apply(this, arguments);
          },
          initContainer: function() {
            var d,
              b = ".select2-choices";
            (this.searchContainer = this.container.find(
              ".select2-search-field"
            )),
              (this.selection = d = this.container.find(b));
            var e = this;
            this.selection.on(
              "click",
              ".select2-search-choice:not(.select2-locked)",
              function() {
                e.search[0].focus(), e.selectChoice(a(this));
              }
            ),
              this.search.attr("id", "s2id_autogen" + g()),
              a("label[for='" + this.opts.element.attr("id") + "']").attr(
                "for",
                this.search.attr("id")
              ),
              this.search.on(
                "input paste",
                this.bind(function() {
                  this.isInterfaceEnabled() && (this.opened() || this.open());
                })
              ),
              this.search.attr("tabindex", this.elementTabIndex),
              (this.keydowns = 0),
              this.search.on(
                "keydown",
                this.bind(function(a) {
                  if (this.isInterfaceEnabled()) {
                    ++this.keydowns;
                    var b = d.find(".select2-search-choice-focus"),
                      e = b.prev(".select2-search-choice:not(.select2-locked)"),
                      f = b.next(".select2-search-choice:not(.select2-locked)"),
                      g = z(this.search);
                    if (
                      b.length &&
                      (a.which == c.LEFT ||
                        a.which == c.RIGHT ||
                        a.which == c.BACKSPACE ||
                        a.which == c.DELETE ||
                        a.which == c.ENTER)
                    ) {
                      var h = b;
                      return (
                        a.which == c.LEFT && e.length
                          ? (h = e)
                          : a.which == c.RIGHT
                          ? (h = f.length ? f : null)
                          : a.which === c.BACKSPACE
                          ? (this.unselect(b.first()),
                            this.search.width(10),
                            (h = e.length ? e : f))
                          : a.which == c.DELETE
                          ? (this.unselect(b.first()),
                            this.search.width(10),
                            (h = f.length ? f : null))
                          : a.which == c.ENTER && (h = null),
                        this.selectChoice(h),
                        A(a),
                        (h && h.length) || this.open(),
                        void 0
                      );
                    }
                    if (
                      ((a.which === c.BACKSPACE && 1 == this.keydowns) ||
                        a.which == c.LEFT) &&
                      0 == g.offset &&
                      !g.length
                    )
                      return (
                        this.selectChoice(
                          d
                            .find(".select2-search-choice:not(.select2-locked)")
                            .last()
                        ),
                        A(a),
                        void 0
                      );
                    if ((this.selectChoice(null), this.opened()))
                      switch (a.which) {
                        case c.UP:
                        case c.DOWN:
                          return (
                            this.moveHighlight(a.which === c.UP ? -1 : 1),
                            A(a),
                            void 0
                          );
                        case c.ENTER:
                          return this.selectHighlighted(), A(a), void 0;
                        case c.TAB:
                          return (
                            this.selectHighlighted({ noFocus: !0 }),
                            this.close(),
                            void 0
                          );
                        case c.ESC:
                          return this.cancel(a), A(a), void 0;
                      }
                    if (
                      a.which !== c.TAB &&
                      !c.isControl(a) &&
                      !c.isFunctionKey(a) &&
                      a.which !== c.BACKSPACE &&
                      a.which !== c.ESC
                    ) {
                      if (a.which === c.ENTER) {
                        if (this.opts.openOnEnter === !1) return;
                        if (a.altKey || a.ctrlKey || a.shiftKey || a.metaKey)
                          return;
                      }
                      this.open(),
                        (a.which === c.PAGE_UP || a.which === c.PAGE_DOWN) &&
                          A(a),
                        a.which === c.ENTER && A(a);
                    }
                  }
                })
              ),
              this.search.on(
                "keyup",
                this.bind(function() {
                  (this.keydowns = 0), this.resizeSearch();
                })
              ),
              this.search.on(
                "blur",
                this.bind(function(b) {
                  this.container.removeClass("select2-container-active"),
                    this.search.removeClass("select2-focused"),
                    this.selectChoice(null),
                    this.opened() || this.clearSearch(),
                    b.stopImmediatePropagation(),
                    this.opts.element.trigger(a.Event("select2-blur"));
                })
              ),
              this.container.on(
                "click",
                b,
                this.bind(function(b) {
                  this.isInterfaceEnabled() &&
                    (a(b.target).closest(".select2-search-choice").length > 0 ||
                      (this.selectChoice(null),
                      this.clearPlaceholder(),
                      this.container.hasClass("select2-container-active") ||
                        this.opts.element.trigger(a.Event("select2-focus")),
                      this.open(),
                      this.focusSearch(),
                      b.preventDefault()));
                })
              ),
              this.container.on(
                "focus",
                b,
                this.bind(function() {
                  this.isInterfaceEnabled() &&
                    (this.container.hasClass("select2-container-active") ||
                      this.opts.element.trigger(a.Event("select2-focus")),
                    this.container.addClass("select2-container-active"),
                    this.dropdown.addClass("select2-drop-active"),
                    this.clearPlaceholder());
                })
              ),
              this.initContainerWidth(),
              this.opts.element.addClass("select2-offscreen"),
              this.clearSearch();
          },
          enableInterface: function() {
            this.parent.enableInterface.apply(this, arguments) &&
              this.search.prop("disabled", !this.isInterfaceEnabled());
          },
          initSelection: function() {
            if (
              ("" === this.opts.element.val() &&
                "" === this.opts.element.text() &&
                (this.updateSelection([]), this.close(), this.clearSearch()),
              this.select || "" !== this.opts.element.val())
            ) {
              var c = this;
              this.opts.initSelection.call(null, this.opts.element, function(
                a
              ) {
                a !== b &&
                  null !== a &&
                  (c.updateSelection(a), c.close(), c.clearSearch());
              });
            }
          },
          clearSearch: function() {
            var a = this.getPlaceholder(),
              c = this.getMaxSearchWidth();
            a !== b &&
            0 === this.getVal().length &&
            this.search.hasClass("select2-focused") === !1
              ? (this.search.val(a).addClass("select2-default"),
                this.search.width(c > 0 ? c : this.container.css("width")))
              : this.search.val("").width(10);
          },
          clearPlaceholder: function() {
            this.search.hasClass("select2-default") &&
              this.search.val("").removeClass("select2-default");
          },
          opening: function() {
            this.clearPlaceholder(),
              this.resizeSearch(),
              this.parent.opening.apply(this, arguments),
              this.focusSearch(),
              this.updateResults(!0),
              this.search.focus(),
              this.opts.element.trigger(a.Event("select2-open"));
          },
          close: function() {
            this.opened() && this.parent.close.apply(this, arguments);
          },
          focus: function() {
            this.close(), this.search.focus();
          },
          isFocused: function() {
            return this.search.hasClass("select2-focused");
          },
          updateSelection: function(b) {
            var c = [],
              d = [],
              e = this;
            a(b).each(function() {
              o(e.id(this), c) < 0 && (c.push(e.id(this)), d.push(this));
            }),
              (b = d),
              this.selection.find(".select2-search-choice").remove(),
              a(b).each(function() {
                e.addSelectedChoice(this);
              }),
              e.postprocessResults();
          },
          tokenize: function() {
            var a = this.search.val();
            (a = this.opts.tokenizer.call(
              this,
              a,
              this.data(),
              this.bind(this.onSelect),
              this.opts
            )),
              null != a &&
                a != b &&
                (this.search.val(a), a.length > 0 && this.open());
          },
          onSelect: function(a, b) {
            this.triggerSelect(a) &&
              (this.addSelectedChoice(a),
              this.opts.element.trigger({
                type: "selected",
                val: this.id(a),
                choice: a
              }),
              (this.select || !this.opts.closeOnSelect) &&
                this.postprocessResults(a, !1, this.opts.closeOnSelect === !0),
              this.opts.closeOnSelect
                ? (this.close(), this.search.width(10))
                : this.countSelectableResults() > 0
                ? (this.search.width(10),
                  this.resizeSearch(),
                  this.getMaximumSelectionSize() > 0 &&
                    this.val().length >= this.getMaximumSelectionSize() &&
                    this.updateResults(!0),
                  this.positionDropdown())
                : (this.close(), this.search.width(10)),
              this.triggerChange({ added: a }),
              (b && b.noFocus) || this.focusSearch());
          },
          cancel: function() {
            this.close(), this.focusSearch();
          },
          addSelectedChoice: function(c) {
            var j,
              k,
              d = !c.locked,
              e = a(
                "<li class='select2-search-choice'>    <div></div>    <a href='#' onclick='return false;' class='select2-search-choice-close' tabindex='-1'></a></li>"
              ),
              f = a(
                "<li class='select2-search-choice select2-locked'><div></div></li>"
              ),
              g = d ? e : f,
              h = this.id(c),
              i = this.getVal();
            (j = this.opts.formatSelection(
              c,
              g.find("div"),
              this.opts.escapeMarkup
            )),
              j != b && g.find("div").replaceWith("<div>" + j + "</div>"),
              (k = this.opts.formatSelectionCssClass(c, g.find("div"))),
              k != b && g.addClass(k),
              d &&
                g
                  .find(".select2-search-choice-close")
                  .on("mousedown", A)
                  .on(
                    "click dblclick",
                    this.bind(function(b) {
                      this.isInterfaceEnabled() &&
                        (a(b.target)
                          .closest(".select2-search-choice")
                          .fadeOut(
                            "fast",
                            this.bind(function() {
                              this.unselect(a(b.target)),
                                this.selection
                                  .find(".select2-search-choice-focus")
                                  .removeClass("select2-search-choice-focus"),
                                this.close(),
                                this.focusSearch();
                            })
                          )
                          .dequeue(),
                        A(b));
                    })
                  )
                  .on(
                    "focus",
                    this.bind(function() {
                      this.isInterfaceEnabled() &&
                        (this.container.addClass("select2-container-active"),
                        this.dropdown.addClass("select2-drop-active"));
                    })
                  ),
              g.data("select2-data", c),
              g.insertBefore(this.searchContainer),
              i.push(h),
              this.setVal(i);
          },
          unselect: function(a) {
            var c,
              d,
              b = this.getVal();
            if (((a = a.closest(".select2-search-choice")), 0 === a.length))
              throw "Invalid argument: " +
                a +
                ". Must be .select2-search-choice";
            if ((c = a.data("select2-data"))) {
              for (; (d = o(this.id(c), b)) >= 0; )
                b.splice(d, 1),
                  this.setVal(b),
                  this.select && this.postprocessResults();
              a.remove(),
                this.opts.element.trigger({
                  type: "removed",
                  val: this.id(c),
                  choice: c
                }),
                this.triggerChange({ removed: c });
            }
          },
          postprocessResults: function(a, b, c) {
            var d = this.getVal(),
              e = this.results.find(".select2-result"),
              f = this.results.find(".select2-result-with-children"),
              g = this;
            e.each2(function(a, b) {
              var c = g.id(b.data("select2-data"));
              o(c, d) >= 0 &&
                (b.addClass("select2-selected"),
                b
                  .find(".select2-result-selectable")
                  .addClass("select2-selected"));
            }),
              f.each2(function(a, b) {
                b.is(".select2-result-selectable") ||
                  0 !==
                    b.find(".select2-result-selectable:not(.select2-selected)")
                      .length ||
                  b.addClass("select2-selected");
              }),
              -1 == this.highlight() && c !== !1 && g.highlight(0),
              !this.opts.createSearchChoice &&
                !e.filter(".select2-result:not(.select2-selected)").length >
                  0 &&
                (!a ||
                  (a &&
                    !a.more &&
                    0 === this.results.find(".select2-no-results").length)) &&
                J(g.opts.formatNoMatches, "formatNoMatches") &&
                this.results.append(
                  "<li class='select2-no-results'>" +
                    g.opts.formatNoMatches(g.search.val()) +
                    "</li>"
                );
          },
          getMaxSearchWidth: function() {
            return this.selection.width() - s(this.search);
          },
          resizeSearch: function() {
            var a,
              b,
              c,
              d,
              e,
              f = s(this.search);
            (a = C(this.search) + 10),
              (b = this.search.offset().left),
              (c = this.selection.width()),
              (d = this.selection.offset().left),
              (e = c - (b - d) - f),
              a > e && (e = c - f),
              40 > e && (e = c - f),
              0 >= e && (e = a),
              this.search.width(Math.floor(e));
          },
          getVal: function() {
            var a;
            return this.select
              ? ((a = this.select.val()), null === a ? [] : a)
              : ((a = this.opts.element.val()), r(a, this.opts.separator));
          },
          setVal: function(b) {
            var c;
            this.select
              ? this.select.val(b)
              : ((c = []),
                a(b).each(function() {
                  o(this, c) < 0 && c.push(this);
                }),
                this.opts.element.val(
                  0 === c.length ? "" : c.join(this.opts.separator)
                ));
          },
          buildChangeDetails: function(a, b) {
            for (var b = b.slice(0), a = a.slice(0), c = 0; c < b.length; c++)
              for (var d = 0; d < a.length; d++)
                q(this.opts.id(b[c]), this.opts.id(a[d])) &&
                  (b.splice(c, 1), c--, a.splice(d, 1), d--);
            return { added: b, removed: a };
          },
          val: function(c, d) {
            var e,
              f = this;
            if (0 === arguments.length) return this.getVal();
            if (((e = this.data()), e.length || (e = []), !c && 0 !== c))
              return (
                this.opts.element.val(""),
                this.updateSelection([]),
                this.clearSearch(),
                d && this.triggerChange({ added: this.data(), removed: e }),
                void 0
              );
            if ((this.setVal(c), this.select))
              this.opts.initSelection(
                this.select,
                this.bind(this.updateSelection)
              ),
                d &&
                  this.triggerChange(this.buildChangeDetails(e, this.data()));
            else {
              if (this.opts.initSelection === b)
                throw new Error(
                  "val() cannot be called if initSelection() is not defined"
                );
              this.opts.initSelection(this.opts.element, function(b) {
                var c = a.map(b, f.id);
                f.setVal(c),
                  f.updateSelection(b),
                  f.clearSearch(),
                  d && f.triggerChange(f.buildChangeDetails(e, this.data()));
              });
            }
            this.clearSearch();
          },
          onSortStart: function() {
            if (this.select)
              throw new Error(
                "Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead."
              );
            this.search.width(0), this.searchContainer.hide();
          },
          onSortEnd: function() {
            var b = [],
              c = this;
            this.searchContainer.show(),
              this.searchContainer.appendTo(this.searchContainer.parent()),
              this.resizeSearch(),
              this.selection.find(".select2-search-choice").each(function() {
                b.push(c.opts.id(a(this).data("select2-data")));
              }),
              this.setVal(b),
              this.triggerChange();
          },
          data: function(b, c) {
            var e,
              f,
              d = this;
            return 0 === arguments.length
              ? this.selection
                  .find(".select2-search-choice")
                  .map(function() {
                    return a(this).data("select2-data");
                  })
                  .get()
              : ((f = this.data()),
                b || (b = []),
                (e = a.map(b, function(a) {
                  return d.opts.id(a);
                })),
                this.setVal(e),
                this.updateSelection(b),
                this.clearSearch(),
                c &&
                  this.triggerChange(this.buildChangeDetails(f, this.data())),
                void 0);
          }
        })),
        (a.fn.select2 = function() {
          var d,
            g,
            h,
            i,
            j,
            c = Array.prototype.slice.call(arguments, 0),
            k = [
              "val",
              "destroy",
              "opened",
              "open",
              "close",
              "focus",
              "isFocused",
              "container",
              "dropdown",
              "onSortStart",
              "onSortEnd",
              "enable",
              "disable",
              "readonly",
              "positionDropdown",
              "data",
              "search"
            ],
            l = ["opened", "isFocused", "container", "dropdown"],
            m = ["val", "data"],
            n = { search: "externalSearch" };
          return (
            this.each(function() {
              if (0 === c.length || "object" == typeof c[0])
                (d = 0 === c.length ? {} : a.extend({}, c[0])),
                  (d.element = a(this)),
                  "select" === d.element.get(0).tagName.toLowerCase()
                    ? (j = d.element.prop("multiple"))
                    : ((j = d.multiple || !1),
                      "tags" in d && (d.multiple = j = !0)),
                  (g = j ? new f() : new e()),
                  g.init(d);
              else {
                if ("string" != typeof c[0])
                  throw "Invalid arguments to select2 plugin: " + c;
                if (o(c[0], k) < 0) throw "Unknown method: " + c[0];
                if (((i = b), (g = a(this).data("select2")), g === b)) return;
                if (
                  ((h = c[0]),
                  "container" === h
                    ? (i = g.container)
                    : "dropdown" === h
                    ? (i = g.dropdown)
                    : (n[h] && (h = n[h]), (i = g[h].apply(g, c.slice(1)))),
                  o(c[0], l) >= 0 || (o(c[0], m) && 1 == c.length))
                )
                  return !1;
              }
            }),
            i === b ? this : i
          );
        }),
        (a.fn.select2.defaults = {
          width: "copy",
          loadMorePadding: 0,
          closeOnSelect: !0,
          openOnEnter: !0,
          containerCss: {},
          dropdownCss: {},
          containerCssClass: "",
          dropdownCssClass: "",
          formatResult: function(a, b, c, d) {
            var e = [];
            return E(a.text, c.term, e, d), e.join("");
          },
          formatSelection: function(a, c, d) {
            return a ? d(a.text) : b;
          },
          sortResults: function(a) {
            return a;
          },
          formatResultCssClass: function() {
            return b;
          },
          formatSelectionCssClass: function() {
            return b;
          },
          formatNoMatches: function() {
            return "No matches found";
          },
          formatInputTooShort: function(a, b) {
            var c = b - a.length;
            return (
              "Please enter " + c + " more character" + (1 == c ? "" : "s")
            );
          },
          formatInputTooLong: function(a, b) {
            var c = a.length - b;
            return "Please delete " + c + " character" + (1 == c ? "" : "s");
          },
          formatSelectionTooBig: function(a) {
            return "You can only select " + a + " item" + (1 == a ? "" : "s");
          },
          formatLoadMore: function() {
            return "Loading more results...";
          },
          formatSearching: function() {
            return "Searching...";
          },
          minimumResultsForSearch: 0,
          minimumInputLength: 0,
          maximumInputLength: null,
          maximumSelectionSize: 0,
          id: function(a) {
            return a.id;
          },
          matcher: function(a, b) {
            return (
              n("" + b)
                .toUpperCase()
                .indexOf(n("" + a).toUpperCase()) >= 0
            );
          },
          separator: ",",
          tokenSeparators: [],
          tokenizer: M,
          escapeMarkup: F,
          blurOnChange: !1,
          selectOnBlur: !1,
          adaptContainerCssClass: function(a) {
            return a;
          },
          adaptDropdownCssClass: function() {
            return null;
          },
          nextSearchTerm: function() {
            return b;
          }
        }),
        (a.fn.select2.ajaxDefaults = {
          transport: a.ajax,
          params: { type: "GET", cache: !1, dataType: "json" }
        }),
        (window.Select2 = {
          query: { ajax: G, local: H, tags: I },
          util: {
            debounce: v,
            markMatch: E,
            escapeMarkup: F,
            stripDiacritics: n
          },
          class: { abstract: d, single: e, multi: f }
        });
    }
  })(jQuery);
/* =========================================================
 * bootstrap-datepicker.js
 * http://www.eyecon.ro/bootstrap-datepicker
 * =========================================================
 * Copyright 2012 Stefan Petre
 * Improvements by Andrew Rowls
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================= */

(function($) {
  var $window = $(window);

  function UTCDate() {
    return new Date(Date.UTC.apply(Date, arguments));
  }
  function UTCToday() {
    var today = new Date();
    return UTCDate(
      today.getUTCFullYear(),
      today.getUTCMonth(),
      today.getUTCDate()
    );
  }

  // Picker object

  var Datepicker = function(element, options) {
    var that = this;

    this._process_options(options);

    this.element = $(element);
    this.isInline = false;
    this.isInput = this.element.is("input");
    this.component = this.element.is(".date")
      ? this.element.find(".add-on, .btn")
      : false;
    this.hasInput = this.component && this.element.find("input").length;
    if (this.component && this.component.length === 0) this.component = false;

    this.picker = $(DPGlobal.template);
    this._buildEvents();
    this._attachEvents();

    if (this.isInline) {
      this.picker.addClass("datepicker-inline").appendTo(this.element);
    } else {
      this.picker.addClass("datepicker-dropdown dropdown-menu");
    }

    if (this.o.rtl) {
      this.picker.addClass("datepicker-rtl");
      this.picker
        .find(".prev i, .next i")
        .toggleClass("icon-arrow-left icon-arrow-right");
    }

    this.viewMode = this.o.startView;

    if (this.o.calendarWeeks)
      this.picker.find("tfoot th.today").attr("colspan", function(i, val) {
        return parseInt(val) + 1;
      });

    this._allow_update = false;

    this.setStartDate(this._o.startDate);
    this.setEndDate(this._o.endDate);
    this.setDaysOfWeekDisabled(this.o.daysOfWeekDisabled);

    this.fillDow();
    this.fillMonths();

    this._allow_update = true;

    this.update();
    this.showMode();

    if (this.isInline) {
      this.show();
    }
  };

  Datepicker.prototype = {
    constructor: Datepicker,

    _process_options: function(opts) {
      // Store raw options for reference
      this._o = $.extend({}, this._o, opts);
      // Processed options
      var o = (this.o = $.extend({}, this._o));

      // Check if "de-DE" style date is available, if not language should
      // fallback to 2 letter code eg "de"
      var lang = o.language;
      if (!dates[lang]) {
        lang = lang.split("-")[0];
        if (!dates[lang]) lang = defaults.language;
      }
      o.language = lang;

      switch (o.startView) {
        case 2:
        case "decade":
          o.startView = 2;
          break;
        case 1:
        case "year":
          o.startView = 1;
          break;
        default:
          o.startView = 0;
      }

      switch (o.minViewMode) {
        case 1:
        case "months":
          o.minViewMode = 1;
          break;
        case 2:
        case "years":
          o.minViewMode = 2;
          break;
        default:
          o.minViewMode = 0;
      }

      o.startView = Math.max(o.startView, o.minViewMode);

      o.weekStart %= 7;
      o.weekEnd = (o.weekStart + 6) % 7;

      var format = DPGlobal.parseFormat(o.format);
      if (o.startDate !== -Infinity) {
        if (!!o.startDate) {
          if (o.startDate instanceof Date)
            o.startDate = this._local_to_utc(this._zero_time(o.startDate));
          else
            o.startDate = DPGlobal.parseDate(o.startDate, format, o.language);
        } else {
          o.startDate = -Infinity;
        }
      }
      if (o.endDate !== Infinity) {
        if (!!o.endDate) {
          if (o.endDate instanceof Date)
            o.endDate = this._local_to_utc(this._zero_time(o.endDate));
          else o.endDate = DPGlobal.parseDate(o.endDate, format, o.language);
        } else {
          o.endDate = Infinity;
        }
      }

      o.daysOfWeekDisabled = o.daysOfWeekDisabled || [];
      if (!$.isArray(o.daysOfWeekDisabled))
        o.daysOfWeekDisabled = o.daysOfWeekDisabled.split(/[,\s]*/);
      o.daysOfWeekDisabled = $.map(o.daysOfWeekDisabled, function(d) {
        return parseInt(d, 10);
      });

      var plc = String(o.orientation)
          .toLowerCase()
          .split(/\s+/g),
        _plc = o.orientation.toLowerCase();
      plc = $.grep(plc, function(word) {
        return /^auto|left|right|top|bottom$/.test(word);
      });
      o.orientation = { x: "auto", y: "auto" };
      if (!_plc || _plc === "auto");
      else if (plc.length === 1) {
        // no action
        switch (plc[0]) {
          case "top":
          case "bottom":
            o.orientation.y = plc[0];
            break;
          case "left":
          case "right":
            o.orientation.x = plc[0];
            break;
        }
      } else {
        _plc = $.grep(plc, function(word) {
          return /^left|right$/.test(word);
        });
        o.orientation.x = _plc[0] || "auto";

        _plc = $.grep(plc, function(word) {
          return /^top|bottom$/.test(word);
        });
        o.orientation.y = _plc[0] || "auto";
      }
    },
    _events: [],
    _secondaryEvents: [],
    _applyEvents: function(evs) {
      for (var i = 0, el, ev; i < evs.length; i++) {
        el = evs[i][0];
        ev = evs[i][1];
        el.on(ev);
      }
    },
    _unapplyEvents: function(evs) {
      for (var i = 0, el, ev; i < evs.length; i++) {
        el = evs[i][0];
        ev = evs[i][1];
        el.off(ev);
      }
    },
    _buildEvents: function() {
      if (this.isInput) {
        // single input
        this._events = [
          [
            this.element,
            {
              focus: $.proxy(this.show, this),
              keyup: $.proxy(this.update, this),
              keydown: $.proxy(this.keydown, this)
            }
          ]
        ];
      } else if (this.component && this.hasInput) {
        // component: input + button
        this._events = [
          // For components that are not readonly, allow keyboard nav
          [
            this.element.find("input"),
            {
              focus: $.proxy(this.show, this),
              keyup: $.proxy(this.update, this),
              keydown: $.proxy(this.keydown, this)
            }
          ],
          [
            this.component,
            {
              click: $.proxy(this.show, this)
            }
          ]
        ];
      } else if (this.element.is("div")) {
        // inline datepicker
        this.isInline = true;
      } else {
        this._events = [
          [
            this.element,
            {
              click: $.proxy(this.show, this)
            }
          ]
        ];
      }

      this._secondaryEvents = [
        [
          this.picker,
          {
            click: $.proxy(this.click, this)
          }
        ],
        [
          $(window),
          {
            resize: $.proxy(this.place, this)
          }
        ],
        [
          $(document),
          {
            mousedown: $.proxy(function(e) {
              // Clicked outside the datepicker, hide it
              if (
                !(
                  this.element.is(e.target) ||
                  this.element.find(e.target).length ||
                  this.picker.is(e.target) ||
                  this.picker.find(e.target).length
                )
              ) {
                this.hide();
              }
            }, this)
          }
        ]
      ];
    },
    _attachEvents: function() {
      this._detachEvents();
      this._applyEvents(this._events);
    },
    _detachEvents: function() {
      this._unapplyEvents(this._events);
    },
    _attachSecondaryEvents: function() {
      this._detachSecondaryEvents();
      this._applyEvents(this._secondaryEvents);
    },
    _detachSecondaryEvents: function() {
      this._unapplyEvents(this._secondaryEvents);
    },
    _trigger: function(event, altdate) {
      var date = altdate || this.date,
        local_date = this._utc_to_local(date);

      this.element.trigger({
        type: event,
        date: local_date,
        format: $.proxy(function(altformat) {
          var format = altformat || this.o.format;
          return DPGlobal.formatDate(date, format, this.o.language);
        }, this)
      });
    },

    show: function(e) {
      if (!this.isInline) this.picker.appendTo("body");
      this.picker.show();
      this.height = this.component
        ? this.component.outerHeight()
        : this.element.outerHeight();
      this.place();
      this._attachSecondaryEvents();
      if (e) {
        e.preventDefault();
      }
      this._trigger("show");
    },

    hide: function(e) {
      if (this.isInline) return;
      if (!this.picker.is(":visible")) return;
      this.picker.hide().detach();
      this._detachSecondaryEvents();
      this.viewMode = this.o.startView;
      this.showMode();

      if (
        this.o.forceParse &&
        ((this.isInput && this.element.val()) ||
          (this.hasInput && this.element.find("input").val()))
      )
        this.setValue();
      this._trigger("hide");
    },

    remove: function() {
      this.hide();
      this._detachEvents();
      this._detachSecondaryEvents();
      this.picker.remove();
      delete this.element.data().datepicker;
      if (!this.isInput) {
        delete this.element.data().date;
      }
    },

    _utc_to_local: function(utc) {
      return new Date(utc.getTime() + utc.getTimezoneOffset() * 60000);
    },
    _local_to_utc: function(local) {
      return new Date(local.getTime() - local.getTimezoneOffset() * 60000);
    },
    _zero_time: function(local) {
      return new Date(local.getFullYear(), local.getMonth(), local.getDate());
    },
    _zero_utc_time: function(utc) {
      return new Date(
        Date.UTC(utc.getUTCFullYear(), utc.getUTCMonth(), utc.getUTCDate())
      );
    },

    getDate: function() {
      return this._utc_to_local(this.getUTCDate());
    },

    getUTCDate: function() {
      return this.date;
    },

    setDate: function(d) {
      this.setUTCDate(this._local_to_utc(d));
    },

    setUTCDate: function(d) {
      this.date = d;
      this.setValue();
    },

    setValue: function() {
      var formatted = this.getFormattedDate();
      if (!this.isInput) {
        if (this.component) {
          this.element
            .find("input")
            .val(formatted)
            .change();
        }
      } else {
        this.element.val(formatted).change();
      }
    },

    getFormattedDate: function(format) {
      if (format === undefined) format = this.o.format;
      return DPGlobal.formatDate(this.date, format, this.o.language);
    },

    setStartDate: function(startDate) {
      this._process_options({ startDate: startDate });
      this.update();
      this.updateNavArrows();
    },

    setEndDate: function(endDate) {
      this._process_options({ endDate: endDate });
      this.update();
      this.updateNavArrows();
    },

    setDaysOfWeekDisabled: function(daysOfWeekDisabled) {
      this._process_options({ daysOfWeekDisabled: daysOfWeekDisabled });
      this.update();
      this.updateNavArrows();
    },

    place: function() {
      if (this.isInline) return;
      var calendarWidth = this.picker.outerWidth(),
        calendarHeight = this.picker.outerHeight(),
        visualPadding = 10,
        windowWidth = $window.width(),
        windowHeight = $window.height(),
        scrollTop = $window.scrollTop();

      var zIndex =
        parseInt(
          this.element
            .parents()
            .filter(function() {
              return $(this).css("z-index") != "auto";
            })
            .first()
            .css("z-index")
        ) + 10;
      var offset = this.component
        ? this.component.parent().offset()
        : this.element.offset();
      var height = this.component
        ? this.component.outerHeight(true)
        : this.element.outerHeight(false);
      var width = this.component
        ? this.component.outerWidth(true)
        : this.element.outerWidth(false);
      var left = offset.left,
        top = offset.top;

      this.picker.removeClass(
        "datepicker-orient-top datepicker-orient-bottom " +
          "datepicker-orient-right datepicker-orient-left"
      );

      if (this.o.orientation.x !== "auto") {
        this.picker.addClass("datepicker-orient-" + this.o.orientation.x);
        if (this.o.orientation.x === "right") left -= calendarWidth - width;
      }
      // auto x orientation is best-placement: if it crosses a window
      // edge, fudge it sideways
      else {
        // Default to left
        this.picker.addClass("datepicker-orient-left");
        if (offset.left < 0) left -= offset.left - visualPadding;
        else if (offset.left + calendarWidth > windowWidth)
          left = windowWidth - calendarWidth - visualPadding;
      }

      // auto y orientation is best-situation: top or bottom, no fudging,
      // decision based on which shows more of the calendar
      var yorient = this.o.orientation.y,
        top_overflow,
        bottom_overflow;
      if (yorient === "auto") {
        top_overflow = -scrollTop + offset.top - calendarHeight;
        bottom_overflow =
          scrollTop + windowHeight - (offset.top + height + calendarHeight);
        if (Math.max(top_overflow, bottom_overflow) === bottom_overflow)
          yorient = "top";
        else yorient = "bottom";
      }
      this.picker.addClass("datepicker-orient-" + yorient);
      if (yorient === "top") top += height;
      else top -= calendarHeight + parseInt(this.picker.css("padding-top"));

      this.picker.css({
        top: top,
        left: left,
        zIndex: zIndex
      });
    },

    _allow_update: true,
    update: function() {
      if (!this._allow_update) return;

      var oldDate = new Date(this.date),
        date,
        fromArgs = false;
      if (
        arguments &&
        arguments.length &&
        (typeof arguments[0] === "string" || arguments[0] instanceof Date)
      ) {
        date = arguments[0];
        if (date instanceof Date) date = this._local_to_utc(date);
        fromArgs = true;
      } else {
        date = this.isInput
          ? this.element.val()
          : this.element.data("date") || this.element.find("input").val();
        delete this.element.data().date;
      }

      this.date = DPGlobal.parseDate(date, this.o.format, this.o.language);

      if (fromArgs) {
        // setting date by clicking
        this.setValue();
      } else if (date) {
        // setting date by typing
        if (oldDate.getTime() !== this.date.getTime())
          this._trigger("changeDate");
      } else {
        // clearing date
        this._trigger("clearDate");
      }

      if (this.date < this.o.startDate) {
        this.viewDate = new Date(this.o.startDate);
        this.date = new Date(this.o.startDate);
      } else if (this.date > this.o.endDate) {
        this.viewDate = new Date(this.o.endDate);
        this.date = new Date(this.o.endDate);
      } else {
        this.viewDate = new Date(this.date);
        this.date = new Date(this.date);
      }
      this.fill();
    },

    fillDow: function() {
      var dowCnt = this.o.weekStart,
        html = "<tr>";
      if (this.o.calendarWeeks) {
        var cell = '<th class="cw">&nbsp;</th>';
        html += cell;
        this.picker.find(".datepicker-days thead tr:first-child").prepend(cell);
      }
      while (dowCnt < this.o.weekStart + 7) {
        html +=
          '<th class="dow">' +
          dates[this.o.language].daysMin[dowCnt++ % 7] +
          "</th>";
      }
      html += "</tr>";
      this.picker.find(".datepicker-days thead").append(html);
    },

    fillMonths: function() {
      var html = "",
        i = 0;
      while (i < 12) {
        html +=
          '<span class="month">' +
          dates[this.o.language].monthsShort[i++] +
          "</span>";
      }
      this.picker.find(".datepicker-months td").html(html);
    },

    setRange: function(range) {
      if (!range || !range.length) delete this.range;
      else
        this.range = $.map(range, function(d) {
          return d.valueOf();
        });
      this.fill();
    },

    getClassNames: function(date) {
      var cls = [],
        year = this.viewDate.getUTCFullYear(),
        month = this.viewDate.getUTCMonth(),
        currentDate = this.date.valueOf(),
        today = new Date();
      if (
        date.getUTCFullYear() < year ||
        (date.getUTCFullYear() == year && date.getUTCMonth() < month)
      ) {
        cls.push("old");
      } else if (
        date.getUTCFullYear() > year ||
        (date.getUTCFullYear() == year && date.getUTCMonth() > month)
      ) {
        cls.push("new");
      }
      // Compare internal UTC date with local today, not UTC today
      if (
        this.o.todayHighlight &&
        date.getUTCFullYear() == today.getFullYear() &&
        date.getUTCMonth() == today.getMonth() &&
        date.getUTCDate() == today.getDate()
      ) {
        cls.push("today");
      }
      if (currentDate && date.valueOf() == currentDate) {
        cls.push("active");
      }
      if (
        date.valueOf() < this.o.startDate ||
        date.valueOf() > this.o.endDate ||
        $.inArray(date.getUTCDay(), this.o.daysOfWeekDisabled) !== -1
      ) {
        cls.push("disabled");
      }
      if (this.range) {
        if (date > this.range[0] && date < this.range[this.range.length - 1]) {
          cls.push("range");
        }
        if ($.inArray(date.valueOf(), this.range) != -1) {
          cls.push("selected");
        }
      }
      return cls;
    },

    fill: function() {
      var d = new Date(this.viewDate),
        year = d.getUTCFullYear(),
        month = d.getUTCMonth(),
        startYear =
          this.o.startDate !== -Infinity
            ? this.o.startDate.getUTCFullYear()
            : -Infinity,
        startMonth =
          this.o.startDate !== -Infinity
            ? this.o.startDate.getUTCMonth()
            : -Infinity,
        endYear =
          this.o.endDate !== Infinity
            ? this.o.endDate.getUTCFullYear()
            : Infinity,
        endMonth =
          this.o.endDate !== Infinity ? this.o.endDate.getUTCMonth() : Infinity,
        currentDate = this.date && this.date.valueOf(),
        tooltip;
      this.picker
        .find(".datepicker-days thead th.datepicker-switch")
        .text(dates[this.o.language].months[month] + " " + year);
      this.picker
        .find("tfoot th.today")
        .text(dates[this.o.language].today)
        .toggle(this.o.todayBtn !== false);
      this.picker
        .find("tfoot th.clear")
        .text(dates[this.o.language].clear)
        .toggle(this.o.clearBtn !== false);
      this.updateNavArrows();
      this.fillMonths();
      var prevMonth = UTCDate(year, month - 1, 28, 0, 0, 0, 0),
        day = DPGlobal.getDaysInMonth(
          prevMonth.getUTCFullYear(),
          prevMonth.getUTCMonth()
        );
      prevMonth.setUTCDate(day);
      prevMonth.setUTCDate(
        day - ((prevMonth.getUTCDay() - this.o.weekStart + 7) % 7)
      );
      var nextMonth = new Date(prevMonth);
      nextMonth.setUTCDate(nextMonth.getUTCDate() + 42);
      nextMonth = nextMonth.valueOf();
      var html = [];
      var clsName;
      while (prevMonth.valueOf() < nextMonth) {
        if (prevMonth.getUTCDay() == this.o.weekStart) {
          html.push("<tr>");
          if (this.o.calendarWeeks) {
            // ISO 8601: First week contains first thursday.
            // ISO also states week starts on Monday, but we can be more abstract here.
            var // Start of current week: based on weekstart/current date
              ws = new Date(
                +prevMonth +
                  ((this.o.weekStart - prevMonth.getUTCDay() - 7) % 7) * 864e5
              ),
              // Thursday of this week
              th = new Date(+ws + ((7 + 4 - ws.getUTCDay()) % 7) * 864e5),
              // First Thursday of year, year from thursday
              yth = new Date(
                +(yth = UTCDate(th.getUTCFullYear(), 0, 1)) +
                  ((7 + 4 - yth.getUTCDay()) % 7) * 864e5
              ),
              // Calendar week: ms between thursdays, div ms per day, div 7 days
              calWeek = (th - yth) / 864e5 / 7 + 1;
            html.push('<td class="cw">' + calWeek + "</td>");
          }
        }
        clsName = this.getClassNames(prevMonth);
        clsName.push("day");

        if (this.o.beforeShowDay !== $.noop) {
          var before = this.o.beforeShowDay(this._utc_to_local(prevMonth));
          if (before === undefined) before = {};
          else if (typeof before === "boolean") before = { enabled: before };
          else if (typeof before === "string") before = { classes: before };
          if (before.enabled === false) clsName.push("disabled");
          if (before.classes)
            clsName = clsName.concat(before.classes.split(/\s+/));
          if (before.tooltip) tooltip = before.tooltip;
        }

        clsName = $.unique(clsName);
        html.push(
          '<td class="' +
            clsName.join(" ") +
            '"' +
            (tooltip ? ' title="' + tooltip + '"' : "") +
            ">" +
            prevMonth.getUTCDate() +
            "</td>"
        );
        if (prevMonth.getUTCDay() == this.o.weekEnd) {
          html.push("</tr>");
        }
        prevMonth.setUTCDate(prevMonth.getUTCDate() + 1);
      }
      this.picker
        .find(".datepicker-days tbody")
        .empty()
        .append(html.join(""));
      var currentYear = this.date && this.date.getUTCFullYear();

      var months = this.picker
        .find(".datepicker-months")
        .find("th:eq(1)")
        .text(year)
        .end()
        .find("span")
        .removeClass("active");
      if (currentYear && currentYear == year) {
        months.eq(this.date.getUTCMonth()).addClass("active");
      }
      if (year < startYear || year > endYear) {
        months.addClass("disabled");
      }
      if (year == startYear) {
        months.slice(0, startMonth).addClass("disabled");
      }
      if (year == endYear) {
        months.slice(endMonth + 1).addClass("disabled");
      }

      html = "";
      year = parseInt(year / 10, 10) * 10;
      var yearCont = this.picker
        .find(".datepicker-years")
        .find("th:eq(1)")
        .text(year + "-" + (year + 9))
        .end()
        .find("td");
      year -= 1;
      for (var i = -1; i < 11; i++) {
        html +=
          '<span class="year' +
          (i == -1 ? " old" : i == 10 ? " new" : "") +
          (currentYear == year ? " active" : "") +
          (year < startYear || year > endYear ? " disabled" : "") +
          '">' +
          year +
          "</span>";
        year += 1;
      }
      yearCont.html(html);
    },

    updateNavArrows: function() {
      if (!this._allow_update) return;

      var d = new Date(this.viewDate),
        year = d.getUTCFullYear(),
        month = d.getUTCMonth();
      switch (this.viewMode) {
        case 0:
          if (
            this.o.startDate !== -Infinity &&
            year <= this.o.startDate.getUTCFullYear() &&
            month <= this.o.startDate.getUTCMonth()
          ) {
            this.picker.find(".prev").css({ visibility: "hidden" });
          } else {
            this.picker.find(".prev").css({ visibility: "visible" });
          }
          if (
            this.o.endDate !== Infinity &&
            year >= this.o.endDate.getUTCFullYear() &&
            month >= this.o.endDate.getUTCMonth()
          ) {
            this.picker.find(".next").css({ visibility: "hidden" });
          } else {
            this.picker.find(".next").css({ visibility: "visible" });
          }
          break;
        case 1:
        case 2:
          if (
            this.o.startDate !== -Infinity &&
            year <= this.o.startDate.getUTCFullYear()
          ) {
            this.picker.find(".prev").css({ visibility: "hidden" });
          } else {
            this.picker.find(".prev").css({ visibility: "visible" });
          }
          if (
            this.o.endDate !== Infinity &&
            year >= this.o.endDate.getUTCFullYear()
          ) {
            this.picker.find(".next").css({ visibility: "hidden" });
          } else {
            this.picker.find(".next").css({ visibility: "visible" });
          }
          break;
      }
    },

    click: function(e) {
      e.preventDefault();
      var target = $(e.target).closest("span, td, th");
      if (target.length == 1) {
        switch (target[0].nodeName.toLowerCase()) {
          case "th":
            switch (target[0].className) {
              case "datepicker-switch":
                this.showMode(1);
                break;
              case "prev":
              case "next":
                var dir =
                  DPGlobal.modes[this.viewMode].navStep *
                  (target[0].className == "prev" ? -1 : 1);
                switch (this.viewMode) {
                  case 0:
                    this.viewDate = this.moveMonth(this.viewDate, dir);
                    this._trigger("changeMonth", this.viewDate);
                    break;
                  case 1:
                  case 2:
                    this.viewDate = this.moveYear(this.viewDate, dir);
                    if (this.viewMode === 1)
                      this._trigger("changeYear", this.viewDate);
                    break;
                }
                this.fill();
                break;
              case "today":
                var date = new Date();
                date = UTCDate(
                  date.getFullYear(),
                  date.getMonth(),
                  date.getDate(),
                  0,
                  0,
                  0
                );

                this.showMode(-2);
                var which = this.o.todayBtn == "linked" ? null : "view";
                this._setDate(date, which);
                break;
              case "clear":
                var element;
                if (this.isInput) element = this.element;
                else if (this.component) element = this.element.find("input");
                if (element) element.val("").change();
                this._trigger("changeDate");
                this.update();
                if (this.o.autoclose) this.hide();
                break;
            }
            break;
          case "span":
            if (!target.is(".disabled")) {
              this.viewDate.setUTCDate(1);
              if (target.is(".month")) {
                var day = 1;
                var month = target
                  .parent()
                  .find("span")
                  .index(target);
                var year = this.viewDate.getUTCFullYear();
                this.viewDate.setUTCMonth(month);
                this._trigger("changeMonth", this.viewDate);
                if (this.o.minViewMode === 1) {
                  this._setDate(UTCDate(year, month, day, 0, 0, 0, 0));
                }
              } else {
                var year = parseInt(target.text(), 10) || 0;
                var day = 1;
                var month = 0;
                this.viewDate.setUTCFullYear(year);
                this._trigger("changeYear", this.viewDate);
                if (this.o.minViewMode === 2) {
                  this._setDate(UTCDate(year, month, day, 0, 0, 0, 0));
                }
              }
              this.showMode(-1);
              this.fill();
            }
            break;
          case "td":
            if (target.is(".day") && !target.is(".disabled")) {
              var day = parseInt(target.text(), 10) || 1;
              var year = this.viewDate.getUTCFullYear(),
                month = this.viewDate.getUTCMonth();
              if (target.is(".old")) {
                if (month === 0) {
                  month = 11;
                  year -= 1;
                } else {
                  month -= 1;
                }
              } else if (target.is(".new")) {
                if (month == 11) {
                  month = 0;
                  year += 1;
                } else {
                  month += 1;
                }
              }
              this._setDate(UTCDate(year, month, day, 0, 0, 0, 0));
            }
            break;
        }
      }
    },

    _setDate: function(date, which) {
      if (!which || which == "date") this.date = new Date(date);
      if (!which || which == "view") this.viewDate = new Date(date);
      this.fill();
      this.setValue();
      this._trigger("changeDate");
      var element;
      if (this.isInput) {
        element = this.element;
      } else if (this.component) {
        element = this.element.find("input");
      }
      if (element) {
        element.change();
      }
      if (this.o.autoclose && (!which || which == "date")) {
        this.hide();
      }
    },

    moveMonth: function(date, dir) {
      if (!dir) return date;
      var new_date = new Date(date.valueOf()),
        day = new_date.getUTCDate(),
        month = new_date.getUTCMonth(),
        mag = Math.abs(dir),
        new_month,
        test;
      dir = dir > 0 ? 1 : -1;
      if (mag == 1) {
        test =
          dir == -1
            ? // If going back one month, make sure month is not current month
              // (eg, Mar 31 -> Feb 31 == Feb 28, not Mar 02)
              function() {
                return new_date.getUTCMonth() == month;
              }
            : // If going forward one month, make sure month is as expected
              // (eg, Jan 31 -> Feb 31 == Feb 28, not Mar 02)
              function() {
                return new_date.getUTCMonth() != new_month;
              };
        new_month = month + dir;
        new_date.setUTCMonth(new_month);
        // Dec -> Jan (12) or Jan -> Dec (-1) -- limit expected date to 0-11
        if (new_month < 0 || new_month > 11) new_month = (new_month + 12) % 12;
      } else {
        // For magnitudes >1, move one month at a time...
        for (var i = 0; i < mag; i++)
          // ...which might decrease the day (eg, Jan 31 to Feb 28, etc)...
          new_date = this.moveMonth(new_date, dir);
        // ...then reset the day, keeping it in the new month
        new_month = new_date.getUTCMonth();
        new_date.setUTCDate(day);
        test = function() {
          return new_month != new_date.getUTCMonth();
        };
      }
      // Common date-resetting loop -- if date is beyond end of month, make it
      // end of month
      while (test()) {
        new_date.setUTCDate(--day);
        new_date.setUTCMonth(new_month);
      }
      return new_date;
    },

    moveYear: function(date, dir) {
      return this.moveMonth(date, dir * 12);
    },

    dateWithinRange: function(date) {
      return date >= this.o.startDate && date <= this.o.endDate;
    },

    keydown: function(e) {
      if (this.picker.is(":not(:visible)")) {
        if (e.keyCode == 27)
          // allow escape to hide and re-show picker
          this.show();
        return;
      }
      var dateChanged = false,
        dir,
        day,
        month,
        newDate,
        newViewDate;
      switch (e.keyCode) {
        case 27: // escape
          this.hide();
          e.preventDefault();
          break;
        case 37: // left
        case 39: // right
          if (!this.o.keyboardNavigation) break;
          dir = e.keyCode == 37 ? -1 : 1;
          if (e.ctrlKey) {
            newDate = this.moveYear(this.date, dir);
            newViewDate = this.moveYear(this.viewDate, dir);
            this._trigger("changeYear", this.viewDate);
          } else if (e.shiftKey) {
            newDate = this.moveMonth(this.date, dir);
            newViewDate = this.moveMonth(this.viewDate, dir);
            this._trigger("changeMonth", this.viewDate);
          } else {
            newDate = new Date(this.date);
            newDate.setUTCDate(this.date.getUTCDate() + dir);
            newViewDate = new Date(this.viewDate);
            newViewDate.setUTCDate(this.viewDate.getUTCDate() + dir);
          }
          if (this.dateWithinRange(newDate)) {
            this.date = newDate;
            this.viewDate = newViewDate;
            this.setValue();
            this.update();
            e.preventDefault();
            dateChanged = true;
          }
          break;
        case 38: // up
        case 40: // down
          if (!this.o.keyboardNavigation) break;
          dir = e.keyCode == 38 ? -1 : 1;
          if (e.ctrlKey) {
            newDate = this.moveYear(this.date, dir);
            newViewDate = this.moveYear(this.viewDate, dir);
            this._trigger("changeYear", this.viewDate);
          } else if (e.shiftKey) {
            newDate = this.moveMonth(this.date, dir);
            newViewDate = this.moveMonth(this.viewDate, dir);
            this._trigger("changeMonth", this.viewDate);
          } else {
            newDate = new Date(this.date);
            newDate.setUTCDate(this.date.getUTCDate() + dir * 7);
            newViewDate = new Date(this.viewDate);
            newViewDate.setUTCDate(this.viewDate.getUTCDate() + dir * 7);
          }
          if (this.dateWithinRange(newDate)) {
            this.date = newDate;
            this.viewDate = newViewDate;
            this.setValue();
            this.update();
            e.preventDefault();
            dateChanged = true;
          }
          break;
        case 13: // enter
          this.hide();
          e.preventDefault();
          break;
        case 9: // tab
          this.hide();
          break;
      }
      if (dateChanged) {
        this._trigger("changeDate");
        var element;
        if (this.isInput) {
          element = this.element;
        } else if (this.component) {
          element = this.element.find("input");
        }
        if (element) {
          element.change();
        }
      }
    },

    showMode: function(dir) {
      if (dir) {
        this.viewMode = Math.max(
          this.o.minViewMode,
          Math.min(2, this.viewMode + dir)
        );
      }
      /*
				vitalets: fixing bug of very special conditions:
				jquery 1.7.1 + webkit + show inline datepicker in bootstrap popover.
				Method show() does not set display css correctly and datepicker is not shown.
				Changed to .css('display', 'block') solve the problem.
				See https://github.com/vitalets/x-editable/issues/37

				In jquery 1.7.2+ everything works fine.
			*/
      //this.picker.find('>div').hide().filter('.datepicker-'+DPGlobal.modes[this.viewMode].clsName).show();
      this.picker
        .find(">div")
        .hide()
        .filter(".datepicker-" + DPGlobal.modes[this.viewMode].clsName)
        .css("display", "block");
      this.updateNavArrows();
    }
  };

  var DateRangePicker = function(element, options) {
    this.element = $(element);
    this.inputs = $.map(options.inputs, function(i) {
      return i.jquery ? i[0] : i;
    });
    delete options.inputs;

    $(this.inputs)
      .datepicker(options)
      .bind("changeDate", $.proxy(this.dateUpdated, this));

    this.pickers = $.map(this.inputs, function(i) {
      return $(i).data("datepicker");
    });
    this.updateDates();
  };
  DateRangePicker.prototype = {
    updateDates: function() {
      this.dates = $.map(this.pickers, function(i) {
        return i.date;
      });
      this.updateRanges();
    },
    updateRanges: function() {
      var range = $.map(this.dates, function(d) {
        return d.valueOf();
      });
      $.each(this.pickers, function(i, p) {
        p.setRange(range);
      });
    },
    dateUpdated: function(e) {
      var dp = $(e.target).data("datepicker"),
        new_date = dp.getUTCDate(),
        i = $.inArray(e.target, this.inputs),
        l = this.inputs.length;
      if (i == -1) return;

      if (new_date < this.dates[i]) {
        // Date being moved earlier/left
        while (i >= 0 && new_date < this.dates[i]) {
          this.pickers[i--].setUTCDate(new_date);
        }
      } else if (new_date > this.dates[i]) {
        // Date being moved later/right
        while (i < l && new_date > this.dates[i]) {
          this.pickers[i++].setUTCDate(new_date);
        }
      }
      this.updateDates();
    },
    remove: function() {
      $.map(this.pickers, function(p) {
        p.remove();
      });
      delete this.element.data().datepicker;
    }
  };

  function opts_from_el(el, prefix) {
    // Derive options from element data-attrs
    var data = $(el).data(),
      out = {},
      inkey,
      replace = new RegExp("^" + prefix.toLowerCase() + "([A-Z])"),
      prefix = new RegExp("^" + prefix.toLowerCase());
    for (var key in data)
      if (prefix.test(key)) {
        inkey = key.replace(replace, function(_, a) {
          return a.toLowerCase();
        });
        out[inkey] = data[key];
      }
    return out;
  }

  function opts_from_locale(lang) {
    // Derive options from locale plugins
    var out = {};
    // Check if "de-DE" style date is available, if not language should
    // fallback to 2 letter code eg "de"
    if (!dates[lang]) {
      lang = lang.split("-")[0];
      if (!dates[lang]) return;
    }
    var d = dates[lang];
    $.each(locale_opts, function(i, k) {
      if (k in d) out[k] = d[k];
    });
    return out;
  }

  var old = $.fn.datepicker;
  $.fn.datepicker = function(option) {
    var args = Array.apply(null, arguments);
    args.shift();
    var internal_return, this_return;
    this.each(function() {
      var $this = $(this),
        data = $this.data("datepicker"),
        options = typeof option == "object" && option;
      if (!data) {
        var elopts = opts_from_el(this, "date"),
          // Preliminary otions
          xopts = $.extend({}, defaults, elopts, options),
          locopts = opts_from_locale(xopts.language),
          // Options priority: js args, data-attrs, locales, defaults
          opts = $.extend({}, defaults, locopts, elopts, options);
        if ($this.is(".input-daterange") || opts.inputs) {
          var ropts = {
            inputs: opts.inputs || $this.find("input").toArray()
          };
          $this.data(
            "datepicker",
            (data = new DateRangePicker(this, $.extend(opts, ropts)))
          );
        } else {
          $this.data("datepicker", (data = new Datepicker(this, opts)));
        }
      }
      if (typeof option == "string" && typeof data[option] == "function") {
        internal_return = data[option].apply(data, args);
        if (internal_return !== undefined) return false;
      }
    });
    if (internal_return !== undefined) return internal_return;
    else return this;
  };

  var defaults = ($.fn.datepicker.defaults = {
    autoclose: false,
    beforeShowDay: $.noop,
    calendarWeeks: false,
    clearBtn: false,
    daysOfWeekDisabled: [],
    endDate: Infinity,
    forceParse: true,
    format: "mm/dd/yyyy",
    keyboardNavigation: true,
    language: "en",
    minViewMode: 0,
    orientation: "auto",
    rtl: false,
    startDate: -Infinity,
    startView: 0,
    todayBtn: false,
    todayHighlight: false,
    weekStart: 0
  });
  var locale_opts = ($.fn.datepicker.locale_opts = [
    "format",
    "rtl",
    "weekStart"
  ]);
  $.fn.datepicker.Constructor = Datepicker;
  var dates = ($.fn.datepicker.dates = {
    en: {
      days: [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ],
      daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
      daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
      months: [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      monthsShort: [
        "Jan",
        "Feb",
        "Mar",
        "Apr",
        "May",
        "Jun",
        "Jul",
        "Aug",
        "Sep",
        "Oct",
        "Nov",
        "Dec"
      ],
      today: "Today",
      clear: "Clear"
    }
  });

  var DPGlobal = {
    modes: [
      {
        clsName: "days",
        navFnc: "Month",
        navStep: 1
      },
      {
        clsName: "months",
        navFnc: "FullYear",
        navStep: 1
      },
      {
        clsName: "years",
        navFnc: "FullYear",
        navStep: 10
      }
    ],
    isLeapYear: function(year) {
      return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    },
    getDaysInMonth: function(year, month) {
      return [
        31,
        DPGlobal.isLeapYear(year) ? 29 : 28,
        31,
        30,
        31,
        30,
        31,
        31,
        30,
        31,
        30,
        31
      ][month];
    },
    validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,
    nonpunctuation: /[^ -\/:-@\[\u3400-\u9fff-`{-~\t\n\r]+/g,
    parseFormat: function(format) {
      // IE treats \0 as a string end in inputs (truncating the value),
      // so it's a bad format delimiter, anyway
      var separators = format.replace(this.validParts, "\0").split("\0"),
        parts = format.match(this.validParts);
      if (!separators || !separators.length || !parts || parts.length === 0) {
        throw new Error("Invalid date format.");
      }
      return { separators: separators, parts: parts };
    },
    parseDate: function(date, format, language) {
      if (date instanceof Date) return date;
      if (typeof format === "string") format = DPGlobal.parseFormat(format);
      if (/^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/.test(date)) {
        var part_re = /([\-+]\d+)([dmwy])/,
          parts = date.match(/([\-+]\d+)([dmwy])/g),
          part,
          dir;
        date = new Date();
        for (var i = 0; i < parts.length; i++) {
          part = part_re.exec(parts[i]);
          dir = parseInt(part[1]);
          switch (part[2]) {
            case "d":
              date.setUTCDate(date.getUTCDate() + dir);
              break;
            case "m":
              date = Datepicker.prototype.moveMonth.call(
                Datepicker.prototype,
                date,
                dir
              );
              break;
            case "w":
              date.setUTCDate(date.getUTCDate() + dir * 7);
              break;
            case "y":
              date = Datepicker.prototype.moveYear.call(
                Datepicker.prototype,
                date,
                dir
              );
              break;
          }
        }
        return UTCDate(
          date.getUTCFullYear(),
          date.getUTCMonth(),
          date.getUTCDate(),
          0,
          0,
          0
        );
      }
      var parts = (date && date.match(this.nonpunctuation)) || [],
        date = new Date(),
        parsed = {},
        setters_order = ["yyyy", "yy", "M", "MM", "m", "mm", "d", "dd"],
        setters_map = {
          yyyy: function(d, v) {
            return d.setUTCFullYear(v);
          },
          yy: function(d, v) {
            return d.setUTCFullYear(2000 + v);
          },
          m: function(d, v) {
            if (isNaN(d)) return d;
            v -= 1;
            while (v < 0) v += 12;
            v %= 12;
            d.setUTCMonth(v);
            while (d.getUTCMonth() != v) d.setUTCDate(d.getUTCDate() - 1);
            return d;
          },
          d: function(d, v) {
            return d.setUTCDate(v);
          }
        },
        val,
        filtered,
        part;
      setters_map["M"] = setters_map["MM"] = setters_map["mm"] =
        setters_map["m"];
      setters_map["dd"] = setters_map["d"];
      date = UTCDate(
        date.getFullYear(),
        date.getMonth(),
        date.getDate(),
        0,
        0,
        0
      );
      var fparts = format.parts.slice();
      // Remove noop parts
      if (parts.length != fparts.length) {
        fparts = $(fparts)
          .filter(function(i, p) {
            return $.inArray(p, setters_order) !== -1;
          })
          .toArray();
      }
      // Process remainder
      if (parts.length == fparts.length) {
        for (var i = 0, cnt = fparts.length; i < cnt; i++) {
          val = parseInt(parts[i], 10);
          part = fparts[i];
          if (isNaN(val)) {
            switch (part) {
              case "MM":
                filtered = $(dates[language].months).filter(function() {
                  var m = this.slice(0, parts[i].length),
                    p = parts[i].slice(0, m.length);
                  return m == p;
                });
                val = $.inArray(filtered[0], dates[language].months) + 1;
                break;
              case "M":
                filtered = $(dates[language].monthsShort).filter(function() {
                  var m = this.slice(0, parts[i].length),
                    p = parts[i].slice(0, m.length);
                  return m == p;
                });
                val = $.inArray(filtered[0], dates[language].monthsShort) + 1;
                break;
            }
          }
          parsed[part] = val;
        }
        for (var i = 0, _date, s; i < setters_order.length; i++) {
          s = setters_order[i];
          if (s in parsed && !isNaN(parsed[s])) {
            _date = new Date(date);
            setters_map[s](_date, parsed[s]);
            if (!isNaN(_date)) date = _date;
          }
        }
      }
      return date;
    },
    formatDate: function(date, format, language) {
      if (typeof format === "string") format = DPGlobal.parseFormat(format);
      var val = {
        d: date.getUTCDate(),
        D: dates[language].daysShort[date.getUTCDay()],
        DD: dates[language].days[date.getUTCDay()],
        m: date.getUTCMonth() + 1,
        M: dates[language].monthsShort[date.getUTCMonth()],
        MM: dates[language].months[date.getUTCMonth()],
        yy: date
          .getUTCFullYear()
          .toString()
          .substring(2),
        yyyy: date.getUTCFullYear()
      };
      val.dd = (val.d < 10 ? "0" : "") + val.d;
      val.mm = (val.m < 10 ? "0" : "") + val.m;
      var date = [],
        seps = $.extend([], format.separators);
      for (var i = 0, cnt = format.parts.length; i <= cnt; i++) {
        if (seps.length) date.push(seps.shift());
        date.push(val[format.parts[i]]);
      }
      return date.join("");
    },
    headTemplate:
      "<thead>" +
      "<tr>" +
      '<th class="prev">&laquo;</th>' +
      '<th colspan="5" class="datepicker-switch"></th>' +
      '<th class="next">&raquo;</th>' +
      "</tr>" +
      "</thead>",
    contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>',
    footTemplate:
      '<tfoot><tr><th colspan="7" class="today"></th></tr><tr><th colspan="7" class="clear"></th></tr></tfoot>'
  };
  DPGlobal.template =
    '<div class="datepicker">' +
    '<div class="datepicker-days">' +
    '<table class=" table-condensed">' +
    DPGlobal.headTemplate +
    "<tbody></tbody>" +
    DPGlobal.footTemplate +
    "</table>" +
    "</div>" +
    '<div class="datepicker-months">' +
    '<table class="table-condensed">' +
    DPGlobal.headTemplate +
    DPGlobal.contTemplate +
    DPGlobal.footTemplate +
    "</table>" +
    "</div>" +
    '<div class="datepicker-years">' +
    '<table class="table-condensed">' +
    DPGlobal.headTemplate +
    DPGlobal.contTemplate +
    DPGlobal.footTemplate +
    "</table>" +
    "</div>" +
    "</div>";

  $.fn.datepicker.DPGlobal = DPGlobal;

  /* DATEPICKER NO CONFLICT
   * =================== */

  $.fn.datepicker.noConflict = function() {
    $.fn.datepicker = old;
    return this;
  };

  /* DATEPICKER DATA-API
   * ================== */

  $(document).on(
    "focus.datepicker.data-api click.datepicker.data-api",
    '[data-provide="datepicker"]',
    function(e) {
      var $this = $(this);
      if ($this.data("datepicker")) return;
      e.preventDefault();
      // component click requires us to explicitly show it
      $this.datepicker("show");
    }
  );
  $(function() {
    $('[data-provide="datepicker-inline"]').datepicker();
  });
})(window.jQuery);

/* =========================================================
 * bootstrap-slider.js v3.0.0
 * =========================================================
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================= */

(function($) {
  var ErrorMsgs = {
    formatInvalidInputErrorMsg: function(input) {
      return "Invalid input value '" + input + "' passed in";
    },
    callingContextNotSliderInstance:
      "Calling context element does not have instance of Slider bound to it. Check your code to make sure the JQuery object returned from the call to the slider() initializer is calling the method"
  };

  var Slider = function(element, options) {
    var el = (this.element = $(element).hide());
    var origWidth = $(element)[0].style.width;

    var updateSlider = false;
    var parent = this.element.parent();

    if (parent.hasClass("slider") === true) {
      updateSlider = true;
      this.picker = parent;
    } else {
      this.picker = $(
        '<div class="slider">' +
          '<div class="slider-track">' +
          '<div class="slider-selection"></div>' +
          '<div class="slider-handle"></div>' +
          '<div class="slider-handle"></div>' +
          "</div>" +
          '<div id="tooltip" class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>' +
          '<div id="tooltip_min" class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>' +
          '<div id="tooltip_max" class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>' +
          "</div>"
      )
        .insertBefore(this.element)
        .append(this.element);
    }

    this.id = this.element.data("slider-id") || options.id;
    if (this.id) {
      this.picker[0].id = this.id;
    }

    if (
      "ontouchstart" in window ||
      (window.DocumentTouch && document instanceof window.DocumentTouch)
    ) {
      this.touchCapable = true;
    }

    var tooltip = this.element.data("slider-tooltip") || options.tooltip;

    this.tooltip = this.picker.find("#tooltip");
    this.tooltipInner = this.tooltip.find("div.tooltip-inner");

    this.tooltip_min = this.picker.find("#tooltip_min");
    this.tooltipInner_min = this.tooltip_min.find("div.tooltip-inner");

    this.tooltip_max = this.picker.find("#tooltip_max");
    this.tooltipInner_max = this.tooltip_max.find("div.tooltip-inner");

    if (updateSlider === true) {
      // Reset classes
      this.picker.removeClass("slider-horizontal");
      this.picker.removeClass("slider-vertical");
      this.tooltip.removeClass("hide");
      this.tooltip_min.removeClass("hide");
      this.tooltip_max.removeClass("hide");
    }

    this.orientation =
      this.element.data("slider-orientation") || options.orientation;
    switch (this.orientation) {
      case "vertical":
        this.picker.addClass("slider-vertical");
        this.stylePos = "top";
        this.mousePos = "pageY";
        this.sizePos = "offsetHeight";
        this.tooltip.addClass("right")[0].style.left = "100%";
        this.tooltip_min.addClass("right")[0].style.left = "100%";
        this.tooltip_max.addClass("right")[0].style.left = "100%";
        break;
      default:
        this.picker.addClass("slider-horizontal").css("width", origWidth);
        this.orientation = "horizontal";
        this.stylePos = "left";
        this.mousePos = "pageX";
        this.sizePos = "offsetWidth";
        this.tooltip.addClass("top")[0].style.top =
          -this.tooltip.outerHeight() - 14 + "px";
        this.tooltip_min.addClass("top")[0].style.top =
          -this.tooltip_min.outerHeight() - 14 + "px";
        this.tooltip_max.addClass("top")[0].style.top =
          -this.tooltip_max.outerHeight() - 14 + "px";
        break;
    }

    var self = this;
    $.each(
      ["min", "max", "step", "precision", "value", "reversed", "handle"],
      function(i, attr) {
        if (typeof el.data("slider-" + attr) !== "undefined") {
          self[attr] = el.data("slider-" + attr);
        } else if (typeof options[attr] !== "undefined") {
          self[attr] = options[attr];
        } else if (typeof el.prop(attr) !== "undefined") {
          self[attr] = el.prop(attr);
        } else {
          self[attr] = 0; // to prevent empty string issues in calculations in IE
        }
      }
    );

    if (this.value instanceof Array) {
      if (updateSlider && !this.range) {
        this.value = this.value[0];
      } else {
        this.range = true;
      }
    } else if (this.range) {
      // User wants a range, but value is not an array
      this.value = [this.value, this.max];
    }

    this.selection = this.element.data("slider-selection") || options.selection;
    this.selectionEl = this.picker.find(".slider-selection");
    if (this.selection === "none") {
      this.selectionEl.addClass("hide");
    }

    this.selectionElStyle = this.selectionEl[0].style;

    this.handle1 = this.picker.find(".slider-handle:first");
    this.handle1Stype = this.handle1[0].style;

    this.handle2 = this.picker.find(".slider-handle:last");
    this.handle2Stype = this.handle2[0].style;

    if (updateSlider === true) {
      // Reset classes
      this.handle1.removeClass("round triangle");
      this.handle2.removeClass("round triangle hide");
    }

    switch (this.handle) {
      case "round":
        this.handle1.addClass("round");
        this.handle2.addClass("round");
        break;
      case "triangle":
        this.handle1.addClass("triangle");
        this.handle2.addClass("triangle");
        break;
    }

    this.offset = this.picker.offset();
    this.size = this.picker[0][this.sizePos];
    this.formater = options.formater;

    this.tooltip_separator = options.tooltip_separator;
    this.tooltip_split = options.tooltip_split;

    this.setValue(this.value);

    this.handle1.on({
      keydown: $.proxy(this.keydown, this, 0)
    });
    this.handle2.on({
      keydown: $.proxy(this.keydown, this, 1)
    });

    if (this.touchCapable) {
      // Touch: Bind touch events:
      this.picker.on({
        touchstart: $.proxy(this.mousedown, this)
      });
    }
    // Bind mouse events:
    this.picker.on({
      mousedown: $.proxy(this.mousedown, this)
    });

    if (tooltip === "hide") {
      this.tooltip.addClass("hide");
      this.tooltip_min.addClass("hide");
      this.tooltip_max.addClass("hide");
    } else if (tooltip === "always") {
      this.showTooltip();
      this.alwaysShowTooltip = true;
    } else {
      this.picker.on({
        mouseenter: $.proxy(this.showTooltip, this),
        mouseleave: $.proxy(this.hideTooltip, this)
      });
      this.handle1.on({
        focus: $.proxy(this.showTooltip, this),
        blur: $.proxy(this.hideTooltip, this)
      });
      this.handle2.on({
        focus: $.proxy(this.showTooltip, this),
        blur: $.proxy(this.hideTooltip, this)
      });
    }

    this.enabled =
      options.enabled &&
      (this.element.data("slider-enabled") === undefined ||
        this.element.data("slider-enabled") === true);
    if (this.enabled) {
      this.enable();
    } else {
      this.disable();
    }
    this.natural_arrow_keys =
      this.element.data("slider-natural_arrow_keys") ||
      options.natural_arrow_keys;
  };

  Slider.prototype = {
    constructor: Slider,

    over: false,
    inDrag: false,

    showTooltip: function() {
      if (this.tooltip_split === false) {
        this.tooltip.addClass("in");
      } else {
        this.tooltip_min.addClass("in");
        this.tooltip_max.addClass("in");
      }

      this.over = true;
    },

    hideTooltip: function() {
      if (this.inDrag === false && this.alwaysShowTooltip !== true) {
        this.tooltip.removeClass("in");
        this.tooltip_min.removeClass("in");
        this.tooltip_max.removeClass("in");
      }
      this.over = false;
    },

    layout: function() {
      var positionPercentages;

      if (this.reversed) {
        positionPercentages = [100 - this.percentage[0], this.percentage[1]];
      } else {
        positionPercentages = [this.percentage[0], this.percentage[1]];
      }

      this.handle1Stype[this.stylePos] = positionPercentages[0] + "%";
      this.handle2Stype[this.stylePos] = positionPercentages[1] + "%";

      if (this.orientation === "vertical") {
        this.selectionElStyle.top =
          Math.min(positionPercentages[0], positionPercentages[1]) + "%";
        this.selectionElStyle.height =
          Math.abs(positionPercentages[0] - positionPercentages[1]) + "%";
      } else {
        this.selectionElStyle.left =
          Math.min(positionPercentages[0], positionPercentages[1]) + "%";
        this.selectionElStyle.width =
          Math.abs(positionPercentages[0] - positionPercentages[1]) + "%";

        var offset_min = this.tooltip_min[0].getBoundingClientRect();
        var offset_max = this.tooltip_max[0].getBoundingClientRect();

        if (offset_min.right > offset_max.left) {
          this.tooltip_max.removeClass("top");
          this.tooltip_max.addClass("bottom")[0].style.top = 18 + "px";
        } else {
          this.tooltip_max.removeClass("bottom");
          this.tooltip_max.addClass("top")[0].style.top = -30 + "px";
        }
      }

      if (this.range) {
        this.tooltipInner.text(
          this.formater(this.value[0]) +
            this.tooltip_separator +
            this.formater(this.value[1])
        );
        this.tooltip[0].style[this.stylePos] =
          (this.size *
            (positionPercentages[0] +
              (positionPercentages[1] - positionPercentages[0]) / 2)) /
            100 -
          (this.orientation === "vertical"
            ? this.tooltip.outerHeight() / 2
            : this.tooltip.outerWidth() / 2) +
          "px";

        this.tooltipInner_min.text(this.formater(this.value[0]));
        this.tooltipInner_max.text(this.formater(this.value[1]));

        this.tooltip_min[0].style[this.stylePos] =
          this.size * (positionPercentages[0] / 100) -
          (this.orientation === "vertical"
            ? this.tooltip_min.outerHeight() / 2
            : this.tooltip_min.outerWidth() / 2) +
          "px";
        this.tooltip_max[0].style[this.stylePos] =
          this.size * (positionPercentages[1] / 100) -
          (this.orientation === "vertical"
            ? this.tooltip_max.outerHeight() / 2
            : this.tooltip_max.outerWidth() / 2) +
          "px";
      } else {
        this.tooltipInner.text(this.formater(this.value[0]));
        this.tooltip[0].style[this.stylePos] =
          (this.size * positionPercentages[0]) / 100 -
          (this.orientation === "vertical"
            ? this.tooltip.outerHeight() / 2
            : this.tooltip.outerWidth() / 2) +
          "px";
      }
    },

    mousedown: function(ev) {
      if (!this.isEnabled()) {
        return false;
      }
      // Touch: Get the original event:
      if (this.touchCapable && ev.type === "touchstart") {
        ev = ev.originalEvent;
      }

      this.triggerFocusOnHandle();

      this.offset = this.picker.offset();
      this.size = this.picker[0][this.sizePos];

      var percentage = this.getPercentage(ev);

      if (this.range) {
        var diff1 = Math.abs(this.percentage[0] - percentage);
        var diff2 = Math.abs(this.percentage[1] - percentage);
        this.dragged = diff1 < diff2 ? 0 : 1;
      } else {
        this.dragged = 0;
      }

      this.percentage[this.dragged] = this.reversed
        ? 100 - percentage
        : percentage;
      this.layout();

      if (this.touchCapable) {
        // Touch: Bind touch events:
        $(document).on({
          touchmove: $.proxy(this.mousemove, this),
          touchend: $.proxy(this.mouseup, this)
        });
      }
      // Bind mouse events:
      $(document).on({
        mousemove: $.proxy(this.mousemove, this),
        mouseup: $.proxy(this.mouseup, this)
      });

      this.inDrag = true;
      var val = this.calculateValue();
      this.element
        .trigger({
          type: "slideStart",
          value: val
        })
        .data("value", val)
        .prop("value", val);
      this.setValue(val);
      return true;
    },

    triggerFocusOnHandle: function(handleIdx) {
      if (handleIdx === 0) {
        this.handle1.focus();
      }
      if (handleIdx === 1) {
        this.handle2.focus();
      }
    },

    keydown: function(handleIdx, ev) {
      if (!this.isEnabled()) {
        return false;
      }

      var dir;
      switch (ev.which) {
        case 37: // left
        case 40: // down
          dir = -1;
          break;
        case 39: // right
        case 38: // up
          dir = 1;
          break;
      }
      if (!dir) {
        return;
      }

      // use natural arrow keys instead of from min to max
      if (this.natural_arrow_keys) {
        if (
          (this.orientation === "vertical" && !this.reversed) ||
          (this.orientation === "horizontal" && this.reversed)
        ) {
          dir = dir * -1;
        }
      }

      var oneStepValuePercentageChange = dir * this.percentage[2];
      var percentage =
        this.percentage[handleIdx] + oneStepValuePercentageChange;

      if (percentage > 100) {
        percentage = 100;
      } else if (percentage < 0) {
        percentage = 0;
      }

      this.dragged = handleIdx;
      this.adjustPercentageForRangeSliders(percentage);
      this.percentage[this.dragged] = percentage;
      this.layout();

      var val = this.calculateValue();

      this.element
        .trigger({
          type: "slideStart",
          value: val
        })
        .data("value", val)
        .prop("value", val);

      this.setValue(val, true);

      this.element
        .trigger({
          type: "slideStop",
          value: val
        })
        .data("value", val)
        .prop("value", val);
      return false;
    },

    mousemove: function(ev) {
      if (!this.isEnabled()) {
        return false;
      }
      // Touch: Get the original event:
      if (this.touchCapable && ev.type === "touchmove") {
        ev = ev.originalEvent;
      }

      var percentage = this.getPercentage(ev);
      this.adjustPercentageForRangeSliders(percentage);
      this.percentage[this.dragged] = this.reversed
        ? 100 - percentage
        : percentage;
      this.layout();

      var val = this.calculateValue();
      this.setValue(val, true);

      return false;
    },
    adjustPercentageForRangeSliders: function(percentage) {
      if (this.range) {
        if (this.dragged === 0 && this.percentage[1] < percentage) {
          this.percentage[0] = this.percentage[1];
          this.dragged = 1;
        } else if (this.dragged === 1 && this.percentage[0] > percentage) {
          this.percentage[1] = this.percentage[0];
          this.dragged = 0;
        }
      }
    },

    mouseup: function() {
      if (!this.isEnabled()) {
        return false;
      }
      if (this.touchCapable) {
        // Touch: Unbind touch event handlers:
        $(document).off({
          touchmove: this.mousemove,
          touchend: this.mouseup
        });
      }
      // Unbind mouse event handlers:
      $(document).off({
        mousemove: this.mousemove,
        mouseup: this.mouseup
      });

      this.inDrag = false;
      if (this.over === false) {
        this.hideTooltip();
      }
      var val = this.calculateValue();
      this.layout();
      this.element
        .data("value", val)
        .prop("value", val)
        .trigger({
          type: "slideStop",
          value: val
        });
      return false;
    },

    calculateValue: function() {
      var val;
      if (this.range) {
        val = [this.min, this.max];
        if (this.percentage[0] !== 0) {
          val[0] = Math.max(
            this.min,
            this.min +
              Math.round((this.diff * this.percentage[0]) / 100 / this.step) *
                this.step
          );
          val[0] = this.applyPrecision(val[0]);
        }
        if (this.percentage[1] !== 100) {
          val[1] = Math.min(
            this.max,
            this.min +
              Math.round((this.diff * this.percentage[1]) / 100 / this.step) *
                this.step
          );
          val[1] = this.applyPrecision(val[1]);
        }
        this.value = val;
      } else {
        val =
          this.min +
          Math.round((this.diff * this.percentage[0]) / 100 / this.step) *
            this.step;
        if (val < this.min) {
          val = this.min;
        } else if (val > this.max) {
          val = this.max;
        }
        val = parseFloat(val);
        val = this.applyPrecision(val);
        this.value = [val, this.value[1]];
      }
      return val;
    },
    applyPrecision: function(val) {
      var precision =
        this.precision || this.getNumDigitsAfterDecimalPlace(this.step);
      return this.applyToFixedAndParseFloat(val, precision);
    },
    /*
			Credits to Mike Samuel for the following method!
			Source: http://stackoverflow.com/questions/10454518/javascript-how-to-retrieve-the-number-of-decimals-of-a-string-number
		*/
    getNumDigitsAfterDecimalPlace: function(num) {
      var match = ("" + num).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
      if (!match) {
        return 0;
      }
      return Math.max(
        0,
        (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0)
      );
    },

    applyToFixedAndParseFloat: function(num, toFixedInput) {
      var truncatedNum = num.toFixed(toFixedInput);
      return parseFloat(truncatedNum);
    },

    getPercentage: function(ev) {
      if (
        this.touchCapable &&
        (ev.type === "touchstart" || ev.type === "touchmove")
      ) {
        ev = ev.touches[0];
      }
      var percentage =
        ((ev[this.mousePos] - this.offset[this.stylePos]) * 100) / this.size;
      percentage =
        Math.round(percentage / this.percentage[2]) * this.percentage[2];
      return Math.max(0, Math.min(100, percentage));
    },

    getValue: function() {
      if (this.range) {
        return this.value;
      }
      return this.value[0];
    },

    setValue: function(val, triggerSlideEvent) {
      if (!val) {
        val = 0;
      }
      this.value = this.validateInputValue(val);

      if (this.range) {
        this.value[0] = this.applyPrecision(this.value[0]);
        this.value[1] = this.applyPrecision(this.value[1]);

        this.value[0] = Math.max(this.min, Math.min(this.max, this.value[0]));
        this.value[1] = Math.max(this.min, Math.min(this.max, this.value[1]));
      } else {
        this.value = this.applyPrecision(this.value);
        this.value = [Math.max(this.min, Math.min(this.max, this.value))];
        this.handle2.addClass("hide");
        if (this.selection === "after") {
          this.value[1] = this.max;
        } else {
          this.value[1] = this.min;
        }
      }

      this.diff = this.max - this.min;
      if (this.diff > 0) {
        this.percentage = [
          ((this.value[0] - this.min) * 100) / this.diff,
          ((this.value[1] - this.min) * 100) / this.diff,
          (this.step * 100) / this.diff
        ];
      } else {
        this.percentage = [0, 0, 100];
      }

      this.layout();

      if (triggerSlideEvent === true) {
        var slideEventValue = this.range ? this.value : this.value[0];
        this.element
          .trigger({
            type: "slide",
            value: slideEventValue
          })
          .data("value", slideEventValue)
          .prop("value", slideEventValue);
      }
    },

    validateInputValue: function(val) {
      if (typeof val === "number") {
        return val;
      } else if (val instanceof Array) {
        $.each(val, function(i, input) {
          if (typeof input !== "number") {
            throw new Error(ErrorMsgs.formatInvalidInputErrorMsg(input));
          }
        });
        return val;
      } else {
        throw new Error(ErrorMsgs.formatInvalidInputErrorMsg(val));
      }
    },

    destroy: function() {
      this.handle1.off();
      this.handle2.off();
      this.element
        .off()
        .show()
        .insertBefore(this.picker);
      this.picker.off().remove();
      $(this.element).removeData("slider");
    },

    disable: function() {
      this.enabled = false;
      this.handle1.removeAttr("tabindex");
      this.handle2.removeAttr("tabindex");
      this.picker.addClass("slider-disabled");
      this.element.trigger("slideDisabled");
    },

    enable: function() {
      this.enabled = true;
      this.handle1.attr("tabindex", 0);
      this.handle2.attr("tabindex", 0);
      this.picker.removeClass("slider-disabled");
      this.element.trigger("slideEnabled");
    },

    toggle: function() {
      if (this.enabled) {
        this.disable();
      } else {
        this.enable();
      }
    },

    isEnabled: function() {
      return this.enabled;
    },

    setAttribute: function(attribute, value) {
      this[attribute] = value;
    },

    getAttribute: function(attribute) {
      return this[attribute];
    }
  };

  var publicMethods = {
    getValue: Slider.prototype.getValue,
    setValue: Slider.prototype.setValue,
    setAttribute: Slider.prototype.setAttribute,
    getAttribute: Slider.prototype.getAttribute,
    destroy: Slider.prototype.destroy,
    disable: Slider.prototype.disable,
    enable: Slider.prototype.enable,
    toggle: Slider.prototype.toggle,
    isEnabled: Slider.prototype.isEnabled
  };

  $.fn.slider = function(option) {
    if (typeof option === "string" && option !== "refresh") {
      var args = Array.prototype.slice.call(arguments, 1);
      return invokePublicMethod.call(this, option, args);
    } else {
      return createNewSliderInstance.call(this, option);
    }
  };

  function invokePublicMethod(methodName, args) {
    if (publicMethods[methodName]) {
      var sliderObject = retrieveSliderObjectFromElement(this);
      var result = publicMethods[methodName].apply(sliderObject, args);

      if (typeof result === "undefined") {
        return $(this);
      } else {
        return result;
      }
    } else {
      throw new Error(
        "method '" + methodName + "()' does not exist for slider."
      );
    }
  }

  function retrieveSliderObjectFromElement(element) {
    var sliderObject = $(element).data("slider");
    if (sliderObject && sliderObject instanceof Slider) {
      return sliderObject;
    } else {
      throw new Error(ErrorMsgs.callingContextNotSliderInstance);
    }
  }

  function createNewSliderInstance(opts) {
    var $this = $(this);
    $this.each(function() {
      var $this = $(this),
        slider = $this.data("slider"),
        options = typeof opts === "object" && opts;

      // If slider already exists, use its attributes
      // as options so slider refreshes properly
      if (slider && !options) {
        options = {};

        $.each($.fn.slider.defaults, function(key) {
          options[key] = slider[key];
        });
      }

      $this.data(
        "slider",
        new Slider(this, $.extend({}, $.fn.slider.defaults, options))
      );
    });
    return $this;
  }

  $.fn.slider.defaults = {
    min: 0,
    max: 10,
    step: 1,
    precision: 0,
    orientation: "horizontal",
    value: 5,
    range: false,
    selection: "before",
    tooltip: "show",
    tooltip_separator: ":",
    tooltip_split: false,
    natural_arrow_keys: false,
    handle: "round",
    reversed: false,
    enabled: true,
    formater: function(value) {
      return value;
    }
  };

  $.fn.slider.Constructor = Slider;
})(window.jQuery);

/* vim: set noexpandtab tabstop=4 shiftwidth=4 autoindent: */
/*!
 * jQuery Raty - A Star Rating Plugin
 *
 * Licensed under The MIT License
 *
 * @version        2.5.2
 * @author         Washington Botelho
 * @documentation  wbotelhos.com/raty
 *
 */

(function(b) {
  var a = {
    init: function(c) {
      return this.each(function() {
        a.destroy.call(this);
        this.opt = b.extend(true, {}, b.fn.raty.defaults, c);
        var e = b(this),
          g = ["number", "readOnly", "score", "scoreName"];
        a._callback.call(this, g);
        if (this.opt.precision) {
          a._adjustPrecision.call(this);
        }
        this.opt.number = a._between(this.opt.number, 0, this.opt.numberMax);
        this.opt.path = this.opt.path || "";
        if (
          this.opt.path &&
          this.opt.path.slice(
            this.opt.path.length - 1,
            this.opt.path.length
          ) !== "/"
        ) {
          this.opt.path += "/";
        }
        this.stars = a._createStars.call(this);
        this.score = a._createScore.call(this);
        a._apply.call(this, this.opt.score);
        var f = this.opt.space ? 4 : 0,
          d =
            this.opt.width ||
            this.opt.number * this.opt.size + this.opt.number * f;
        if (this.opt.cancel) {
          this.cancel = a._createCancel.call(this);
          d += this.opt.size + f;
        }
        if (this.opt.readOnly) {
          a._lock.call(this);
        } else {
          e.css("cursor", "pointer");
          a._binds.call(this);
        }
        if (this.opt.width !== false) {
          e.css("width", d);
        }
        a._target.call(this, this.opt.score);
        e.data({ settings: this.opt, raty: true });
      });
    },
    _adjustPrecision: function() {
      this.opt.targetType = "score";
      this.opt.half = true;
    },
    _apply: function(c) {
      if (c && c > 0) {
        c = a._between(c, 0, this.opt.number);
        this.score.val(c);
      }
      a._fill.call(this, c);
      if (c) {
        a._roundStars.call(this, c);
      }
    },
    _between: function(e, d, c) {
      return Math.min(Math.max(parseFloat(e), d), c);
    },
    _binds: function() {
      if (this.cancel) {
        a._bindCancel.call(this);
      }
      a._bindClick.call(this);
      a._bindOut.call(this);
      a._bindOver.call(this);
    },
    _bindCancel: function() {
      a._bindClickCancel.call(this);
      a._bindOutCancel.call(this);
      a._bindOverCancel.call(this);
    },
    _bindClick: function() {
      var c = this,
        d = b(c);
      c.stars.on("click.raty", function(e) {
        c.score.val(c.opt.half || c.opt.precision ? d.data("score") : this.alt);
        if (c.opt.click) {
          c.opt.click.call(c, parseFloat(c.score.val()), e);
        }
      });
    },
    _bindClickCancel: function() {
      var c = this;
      c.cancel.on("click.raty", function(d) {
        c.score.removeAttr("value");
        if (c.opt.click) {
          c.opt.click.call(c, null, d);
        }
      });
    },
    _bindOut: function() {
      var c = this;
      b(this).on("mouseleave.raty", function(d) {
        var e = parseFloat(c.score.val()) || undefined;
        a._apply.call(c, e);
        a._target.call(c, e, d);
        if (c.opt.mouseout) {
          c.opt.mouseout.call(c, e, d);
        }
      });
    },
    _bindOutCancel: function() {
      var c = this;
      c.cancel.on("mouseleave.raty", function(d) {
        b(this).attr("src", c.opt.path + c.opt.cancelOff);
        if (c.opt.mouseout) {
          c.opt.mouseout.call(c, c.score.val() || null, d);
        }
      });
    },
    _bindOverCancel: function() {
      var c = this;
      c.cancel.on("mouseover.raty", function(d) {
        b(this).attr("src", c.opt.path + c.opt.cancelOn);
        c.stars.attr("src", c.opt.path + c.opt.starOff);
        a._target.call(c, null, d);
        if (c.opt.mouseover) {
          c.opt.mouseover.call(c, null);
        }
      });
    },
    _bindOver: function() {
      var c = this,
        d = b(c),
        e = c.opt.half ? "mousemove.raty" : "mouseover.raty";
      c.stars.on(e, function(g) {
        var h = parseInt(this.alt, 10);
        if (c.opt.half) {
          var f = parseFloat((g.pageX - b(this).offset().left) / c.opt.size),
            j = f > 0.5 ? 1 : 0.5;
          h = h - 1 + j;
          a._fill.call(c, h);
          if (c.opt.precision) {
            h = h - j + f;
          }
          a._roundStars.call(c, h);
          d.data("score", h);
        } else {
          a._fill.call(c, h);
        }
        a._target.call(c, h, g);
        if (c.opt.mouseover) {
          c.opt.mouseover.call(c, h, g);
        }
      });
    },
    _callback: function(c) {
      for (i in c) {
        if (typeof this.opt[c[i]] === "function") {
          this.opt[c[i]] = this.opt[c[i]].call(this);
        }
      }
    },
    _createCancel: function() {
      var e = b(this),
        c = this.opt.path + this.opt.cancelOff,
        d = b("<img />", {
          src: c,
          alt: "x",
          title: this.opt.cancelHint,
          class: "raty-cancel"
        });
      if (this.opt.cancelPlace == "left") {
        e.prepend("&#160;").prepend(d);
      } else {
        e.append("&#160;").append(d);
      }
      return d;
    },
    _createScore: function() {
      return b("<input />", {
        type: "hidden",
        name: this.opt.scoreName
      }).appendTo(this);
    },
    _createStars: function() {
      var e = b(this);
      for (var c = 1; c <= this.opt.number; c++) {
        var f = a._getHint.call(this, c),
          d = this.opt.score && this.opt.score >= c ? "starOn" : "starOff";
        d = this.opt.path + this.opt[d];
        b("<img />", { src: d, alt: c, title: f }).appendTo(this);
        if (this.opt.space) {
          e.append(c < this.opt.number ? "&#160;" : "");
        }
      }
      return e.children("img");
    },
    _error: function(c) {
      b(this).html(c);
      b.error(c);
    },
    _fill: function(d) {
      var m = this,
        e = 0;
      for (var f = 1; f <= m.stars.length; f++) {
        var g = m.stars.eq(f - 1),
          l = m.opt.single ? f == d : f <= d;
        if (m.opt.iconRange && m.opt.iconRange.length > e) {
          var j = m.opt.iconRange[e],
            h = j.on || m.opt.starOn,
            c = j.off || m.opt.starOff,
            k = l ? h : c;
          if (f <= j.range) {
            g.attr("src", m.opt.path + k);
          }
          if (f == j.range) {
            e++;
          }
        } else {
          var k = l ? "starOn" : "starOff";
          g.attr("src", this.opt.path + this.opt[k]);
        }
      }
    },
    _getHint: function(d) {
      var c = this.opt.hints[d - 1];
      return c === "" ? "" : c || d;
    },
    _lock: function() {
      var d = parseInt(this.score.val(), 10),
        c = d ? a._getHint.call(this, d) : this.opt.noRatedMsg;
      b(this)
        .data("readonly", true)
        .css("cursor", "")
        .attr("title", c);
      this.score.attr("readonly", "readonly");
      this.stars.attr("title", c);
      if (this.cancel) {
        this.cancel.hide();
      }
    },
    _roundStars: function(e) {
      var d = (e - Math.floor(e)).toFixed(2);
      if (d > this.opt.round.down) {
        var c = "starOn";
        if (this.opt.halfShow && d < this.opt.round.up) {
          c = "starHalf";
        } else {
          if (d < this.opt.round.full) {
            c = "starOff";
          }
        }
        this.stars
          .eq(Math.ceil(e) - 1)
          .attr("src", this.opt.path + this.opt[c]);
      }
    },
    _target: function(f, d) {
      if (this.opt.target) {
        var e = b(this.opt.target);
        if (e.length === 0) {
          a._error.call(this, "Target selector invalid or missing!");
        }
        if (this.opt.targetFormat.indexOf("{score}") < 0) {
          a._error.call(this, 'Template "{score}" missing!');
        }
        var c = d && d.type == "mouseover";
        if (f === undefined) {
          f = this.opt.targetText;
        } else {
          if (f === null) {
            f = c ? this.opt.cancelHint : this.opt.targetText;
          } else {
            if (this.opt.targetType == "hint") {
              f = a._getHint.call(this, Math.ceil(f));
            } else {
              if (this.opt.precision) {
                f = parseFloat(f).toFixed(1);
              }
            }
            if (!c && !this.opt.targetKeep) {
              f = this.opt.targetText;
            }
          }
        }
        if (f) {
          f = this.opt.targetFormat.toString().replace("{score}", f);
        }
        if (e.is(":input")) {
          e.val(f);
        } else {
          e.html(f);
        }
      }
    },
    _unlock: function() {
      b(this)
        .data("readonly", false)
        .css("cursor", "pointer")
        .removeAttr("title");
      this.score.removeAttr("readonly", "readonly");
      for (var c = 0; c < this.opt.number; c++) {
        this.stars.eq(c).attr("title", a._getHint.call(this, c + 1));
      }
      if (this.cancel) {
        this.cancel.css("display", "");
      }
    },
    cancel: function(c) {
      return this.each(function() {
        if (b(this).data("readonly") !== true) {
          a[c ? "click" : "score"].call(this, null);
          this.score.removeAttr("value");
        }
      });
    },
    click: function(c) {
      return b(this).each(function() {
        if (b(this).data("readonly") !== true) {
          a._apply.call(this, c);
          if (!this.opt.click) {
            a._error.call(
              this,
              'You must add the "click: function(score, evt) { }" callback.'
            );
          }
          this.opt.click.call(this, c, { type: "click" });
          a._target.call(this, c);
        }
      });
    },
    destroy: function() {
      return b(this).each(function() {
        var d = b(this),
          c = d.data("raw");
        if (c) {
          d.off(".raty")
            .empty()
            .css({ cursor: c.style.cursor, width: c.style.width })
            .removeData("readonly");
        } else {
          d.data("raw", d.clone()[0]);
        }
      });
    },
    getScore: function() {
      var d = [],
        c;
      b(this).each(function() {
        c = this.score.val();
        d.push(c ? parseFloat(c) : undefined);
      });
      return d.length > 1 ? d : d[0];
    },
    readOnly: function(c) {
      return this.each(function() {
        var d = b(this);
        if (d.data("readonly") !== c) {
          if (c) {
            d.off(".raty")
              .children("img")
              .off(".raty");
            a._lock.call(this);
          } else {
            a._binds.call(this);
            a._unlock.call(this);
          }
          d.data("readonly", c);
        }
      });
    },
    reload: function() {
      return a.set.call(this, {});
    },
    score: function() {
      return arguments.length
        ? a.setScore.apply(this, arguments)
        : a.getScore.call(this);
    },
    set: function(c) {
      return this.each(function() {
        var e = b(this),
          f = e.data("settings"),
          d = b.extend({}, f, c);
        e.raty(d);
      });
    },
    setScore: function(c) {
      return b(this).each(function() {
        if (b(this).data("readonly") !== true) {
          a._apply.call(this, c);
          a._target.call(this, c);
        }
      });
    }
  };
  b.fn.raty = function(c) {
    if (a[c]) {
      return a[c].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      if (typeof c === "object" || !c) {
        return a.init.apply(this, arguments);
      } else {
        b.error("Method " + c + " does not exist!");
      }
    }
  };
  b.fn.raty.defaults = {
    cancel: false,
    cancelHint: "Cancel this rating!",
    cancelOff: "cancel-off.png",
    cancelOn: "cancel-on.png",
    cancelPlace: "left",
    click: undefined,
    half: false,
    halfShow: true,
    hints: ["bad", "poor", "regular", "good", "gorgeous"],
    iconRange: undefined,
    mouseout: undefined,
    mouseover: undefined,
    noRatedMsg: "Not rated yet!",
    number: 5,
    numberMax: 20,
    path: "",
    precision: false,
    readOnly: false,
    round: { down: 0.25, full: 0.6, up: 0.76 },
    score: undefined,
    scoreName: "score",
    single: false,
    size: 16,
    space: true,
    starHalf: "star-half.png",
    starOff: "star-off.png",
    starOn: "star-on.png",
    target: undefined,
    targetFormat: "{score}",
    targetKeep: false,
    targetText: "",
    targetType: "hint",
    width: undefined
  };
})(jQuery);

/*!
 * iCheck v0.9.1 jQuery plugin, http://git.io/uhUPMA
 */
(function(f) {
  function C(a, c, d) {
    var b = a[0],
      e = /er/.test(d) ? k : /bl/.test(d) ? u : j;
    active =
      d == E
        ? {
            checked: b[j],
            disabled: b[u],
            indeterminate: "true" == a.attr(k) || "false" == a.attr(v)
          }
        : b[e];
    if (/^(ch|di|in)/.test(d) && !active) p(a, e);
    else if (/^(un|en|de)/.test(d) && active) w(a, e);
    else if (d == E)
      for (var e in active) active[e] ? p(a, e, !0) : w(a, e, !0);
    else if (!c || "toggle" == d) {
      if (!c) a[r]("ifClicked");
      active ? b[l] !== x && w(a, e) : p(a, e);
    }
  }
  function p(a, c, d) {
    var b = a[0],
      e = a.parent(),
      g = c == j,
      H = c == k,
      m = H ? v : g ? I : "enabled",
      r = h(b, m + y(b[l])),
      L = h(b, c + y(b[l]));
    if (!0 !== b[c]) {
      if (!d && c == j && b[l] == x && b.name) {
        var p = a.closest("form"),
          s = 'input[name="' + b.name + '"]',
          s = p.length ? p.find(s) : f(s);
        s.each(function() {
          this !== b && f.data(this, n) && w(f(this), c);
        });
      }
      H
        ? ((b[c] = !0), b[j] && w(a, j, "force"))
        : (d || (b[c] = !0), g && b[k] && w(a, k, !1));
      J(a, g, c, d);
    }
    b[u] && h(b, z, !0) && e.find("." + F).css(z, "default");
    e[t](L || h(b, c));
    e[A](r || h(b, m) || "");
  }
  function w(a, c, d) {
    var b = a[0],
      e = a.parent(),
      g = c == j,
      f = c == k,
      m = f ? v : g ? I : "enabled",
      n = h(b, m + y(b[l])),
      p = h(b, c + y(b[l]));
    if (!1 !== b[c]) {
      if (f || !d || "force" == d) b[c] = !1;
      J(a, g, m, d);
    }
    !b[u] && h(b, z, !0) && e.find("." + F).css(z, "pointer");
    e[A](p || h(b, c) || "");
    e[t](n || h(b, m));
  }
  function K(a, c) {
    if (f.data(a, n)) {
      var d = f(a);
      d.parent().html(d.attr("style", f.data(a, n).s || "")[r](c || ""));
      d.off(".i").unwrap();
      f(D + '[for="' + a.id + '"]')
        .add(d.closest(D))
        .off(".i");
    }
  }
  function h(a, c, d) {
    if (f.data(a, n)) return f.data(a, n).o[c + (d ? "" : "Class")];
  }
  function y(a) {
    return a.charAt(0).toUpperCase() + a.slice(1);
  }
  function J(a, c, d, b) {
    if (!b) {
      if (c) a[r]("ifToggled");
      a[r]("ifChanged")[r]("if" + y(d));
    }
  }
  var n = "iCheck",
    F = n + "-helper",
    x = "radio",
    j = "checked",
    I = "un" + j,
    u = "disabled",
    v = "determinate",
    k = "in" + v,
    E = "update",
    l = "type",
    t = "addClass",
    A = "removeClass",
    r = "trigger",
    D = "label",
    z = "cursor",
    G = /ipad|iphone|ipod|android|blackberry|windows phone|opera mini/i.test(
      navigator.userAgent
    );
  f.fn[n] = function(a, c) {
    var d = ":checkbox, :" + x,
      b = f(),
      e = function(a) {
        a.each(function() {
          var a = f(this);
          b = a.is(d) ? b.add(a) : b.add(a.find(d));
        });
      };
    if (
      /^(check|uncheck|toggle|indeterminate|determinate|disable|enable|update|destroy)$/i.test(
        a
      )
    )
      return (
        (a = a.toLowerCase()),
        e(this),
        b.each(function() {
          "destroy" == a ? K(this, "ifDestroyed") : C(f(this), !0, a);
          f.isFunction(c) && c();
        })
      );
    if ("object" == typeof a || !a) {
      var g = f.extend(
          {
            checkedClass: j,
            disabledClass: u,
            indeterminateClass: k,
            labelHover: !0
          },
          a
        ),
        h = g.handle,
        m = g.hoverClass || "hover",
        y = g.focusClass || "focus",
        v = g.activeClass || "active",
        z = !!g.labelHover,
        s = g.labelHoverClass || "hover",
        B = ("" + g.increaseArea).replace("%", "") | 0;
      if ("checkbox" == h || h == x) d = ":" + h;
      -50 > B && (B = -50);
      e(this);
      return b.each(function() {
        K(this);
        var a = f(this),
          b = this,
          c = b.id,
          d = -B + "%",
          e = 100 + 2 * B + "%",
          e = {
            position: "absolute",
            top: d,
            left: d,
            display: "block",
            width: e,
            height: e,
            margin: 0,
            padding: 0,
            background: "#fff",
            border: 0,
            opacity: 0
          },
          d = G
            ? { position: "absolute", visibility: "hidden" }
            : B
            ? e
            : { position: "absolute", opacity: 0 },
          h =
            "checkbox" == b[l]
              ? g.checkboxClass || "icheckbox"
              : g.radioClass || "i" + x,
          k = f(D + '[for="' + c + '"]').add(a.closest(D)),
          q = a
            .wrap('<div class="' + h + '"/>')
            [r]("ifCreated")
            .parent()
            .append(g.insert),
          e = f('<ins class="' + F + '"/>')
            .css(e)
            .appendTo(q);
        a.data(n, { o: g, s: a.attr("style") }).css(d);
        g.inheritClass && q[t](b.className);
        g.inheritID && c && q.attr("id", n + "-" + c);
        "static" == q.css("position") && q.css("position", "relative");
        C(a, !0, E);
        if (k.length)
          k.on(
            "click.i mouseenter.i mouseleave.i touchbegin.i touchend.i",
            function(c) {
              var d = c[l],
                e = f(this);
              if (!b[u])
                if (
                  ("click" == d
                    ? C(a, !1, !0)
                    : z &&
                      (/ve|nd/.test(d)
                        ? (q[A](m), e[A](s))
                        : (q[t](m), e[t](s))),
                  G)
                )
                  c.stopPropagation();
                else return !1;
            }
          );
        a.on("click.i focus.i blur.i keyup.i keydown.i keypress.i", function(
          c
        ) {
          var d = c[l];
          c = c.keyCode;
          if ("click" == d) return !1;
          if ("keydown" == d && 32 == c)
            return (b[l] == x && b[j]) || (b[j] ? w(a, j) : p(a, j)), !1;
          if ("keyup" == d && b[l] == x) !b[j] && p(a, j);
          else if (/us|ur/.test(d)) q["blur" == d ? A : t](y);
        });
        e.on(
          "click mousedown mouseup mouseover mouseout touchbegin.i touchend.i",
          function(d) {
            var c = d[l],
              e = /wn|up/.test(c) ? v : m;
            if (!b[u]) {
              if ("click" == c) C(a, !1, !0);
              else {
                if (/wn|er|in/.test(c)) q[t](e);
                else q[A](e + " " + v);
                if (k.length && z && e == m) k[/ut|nd/.test(c) ? A : t](s);
              }
              if (G) d.stopPropagation();
              else return !1;
            }
          }
        );
      });
    }
    return this;
  };
})(jQuery);
/* == jquery mousewheel plugin == Version: 3.1.11, License: MIT License (MIT) */
!(function(a) {
  "function" == typeof define && define.amd
    ? define(["jquery"], a)
    : "object" == typeof exports
    ? (module.exports = a)
    : a(jQuery);
})(function(a) {
  function b(b) {
    var g = b || window.event,
      h = i.call(arguments, 1),
      j = 0,
      l = 0,
      m = 0,
      n = 0,
      o = 0,
      p = 0;
    if (
      ((b = a.event.fix(g)),
      (b.type = "mousewheel"),
      "detail" in g && (m = -1 * g.detail),
      "wheelDelta" in g && (m = g.wheelDelta),
      "wheelDeltaY" in g && (m = g.wheelDeltaY),
      "wheelDeltaX" in g && (l = -1 * g.wheelDeltaX),
      "axis" in g && g.axis === g.HORIZONTAL_AXIS && ((l = -1 * m), (m = 0)),
      (j = 0 === m ? l : m),
      "deltaY" in g && ((m = -1 * g.deltaY), (j = m)),
      "deltaX" in g && ((l = g.deltaX), 0 === m && (j = -1 * l)),
      0 !== m || 0 !== l)
    ) {
      if (1 === g.deltaMode) {
        var q = a.data(this, "mousewheel-line-height");
        (j *= q), (m *= q), (l *= q);
      } else if (2 === g.deltaMode) {
        var r = a.data(this, "mousewheel-page-height");
        (j *= r), (m *= r), (l *= r);
      }
      if (
        ((n = Math.max(Math.abs(m), Math.abs(l))),
        (!f || f > n) && ((f = n), d(g, n) && (f /= 40)),
        d(g, n) && ((j /= 40), (l /= 40), (m /= 40)),
        (j = Math[j >= 1 ? "floor" : "ceil"](j / f)),
        (l = Math[l >= 1 ? "floor" : "ceil"](l / f)),
        (m = Math[m >= 1 ? "floor" : "ceil"](m / f)),
        k.settings.normalizeOffset && this.getBoundingClientRect)
      ) {
        var s = this.getBoundingClientRect();
        (o = b.clientX - s.left), (p = b.clientY - s.top);
      }
      return (
        (b.deltaX = l),
        (b.deltaY = m),
        (b.deltaFactor = f),
        (b.offsetX = o),
        (b.offsetY = p),
        (b.deltaMode = 0),
        h.unshift(b, j, l, m),
        e && clearTimeout(e),
        (e = setTimeout(c, 200)),
        (a.event.dispatch || a.event.handle).apply(this, h)
      );
    }
  }
  function c() {
    f = null;
  }
  function d(a, b) {
    return (
      k.settings.adjustOldDeltas && "mousewheel" === a.type && b % 120 === 0
    );
  }
  var e,
    f,
    g = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"],
    h =
      "onwheel" in document || document.documentMode >= 9
        ? ["wheel"]
        : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"],
    i = Array.prototype.slice;
  if (a.event.fixHooks)
    for (var j = g.length; j; ) a.event.fixHooks[g[--j]] = a.event.mouseHooks;
  var k = (a.event.special.mousewheel = {
    version: "3.1.11",
    setup: function() {
      if (this.addEventListener)
        for (var c = h.length; c; ) this.addEventListener(h[--c], b, !1);
      else this.onmousewheel = b;
      a.data(this, "mousewheel-line-height", k.getLineHeight(this)),
        a.data(this, "mousewheel-page-height", k.getPageHeight(this));
    },
    teardown: function() {
      if (this.removeEventListener)
        for (var c = h.length; c; ) this.removeEventListener(h[--c], b, !1);
      else this.onmousewheel = null;
      a.removeData(this, "mousewheel-line-height"),
        a.removeData(this, "mousewheel-page-height");
    },
    getLineHeight: function(b) {
      var c = a(b)["offsetParent" in a.fn ? "offsetParent" : "parent"]();
      return c.length || (c = a("body")), parseInt(c.css("fontSize"), 10);
    },
    getPageHeight: function(b) {
      return a(b).height();
    },
    settings: { adjustOldDeltas: !0, normalizeOffset: !0 }
  });
  a.fn.extend({
    mousewheel: function(a) {
      return a ? this.bind("mousewheel", a) : this.trigger("mousewheel");
    },
    unmousewheel: function(a) {
      return this.unbind("mousewheel", a);
    }
  });
});
/* == malihu jquery custom scrollbar plugin == Version: 3.0.4, License: MIT License (MIT) */
(function(b, a, c) {
  (function(d) {
    d(jQuery);
  })(function(j) {
    var g = "mCustomScrollbar",
      d = "mCS",
      m = ".mCustomScrollbar",
      h = {
        setWidth: false,
        setHeight: false,
        setTop: 0,
        setLeft: 0,
        axis: "y",
        scrollbarPosition: "inside",
        scrollInertia: 950,
        autoDraggerLength: true,
        autoHideScrollbar: false,
        autoExpandScrollbar: false,
        alwaysShowScrollbar: 0,
        snapAmount: null,
        snapOffset: 0,
        mouseWheel: {
          enable: true,
          scrollAmount: "auto",
          axis: "y",
          preventDefault: false,
          deltaFactor: "auto",
          normalizeDelta: false,
          invert: false,
          disableOver: ["select", "option", "keygen", "datalist", "textarea"]
        },
        scrollButtons: {
          enable: false,
          scrollType: "stepless",
          scrollAmount: "auto"
        },
        keyboard: {
          enable: true,
          scrollType: "stepless",
          scrollAmount: "auto"
        },
        contentTouchScroll: 25,
        advanced: {
          autoExpandHorizontalScroll: false,
          autoScrollOnFocus:
            "input,textarea,select,button,datalist,keygen,a[tabindex],area,object,[contenteditable='true']",
          updateOnContentResize: true,
          updateOnImageLoad: true,
          updateOnSelectorChange: false
        },
        theme: "light",
        callbacks: {
          onScrollStart: false,
          onScroll: false,
          onTotalScroll: false,
          onTotalScrollBack: false,
          whileScrolling: false,
          onTotalScrollOffset: 0,
          onTotalScrollBackOffset: 0,
          alwaysTriggerOffsets: true,
          onOverflowY: false,
          onOverflowX: false,
          onOverflowYNone: false,
          onOverflowXNone: false
        },
        live: false,
        liveSelector: null
      },
      l = 0,
      o = {},
      f = function(p) {
        if (o[p]) {
          clearTimeout(o[p]);
          i._delete.call(null, o[p]);
        }
      },
      k = b.attachEvent && !b.addEventListener ? 1 : 0,
      n = false,
      e = {
        init: function(q) {
          var q = j.extend(true, {}, h, q),
            p = i._selector.call(this);
          if (q.live) {
            var s = q.liveSelector || this.selector || m,
              r = j(s);
            if (q.live === "off") {
              f(s);
              return;
            }
            o[s] = setTimeout(function() {
              r.mCustomScrollbar(q);
              if (q.live === "once" && r.length) {
                f(s);
              }
            }, 500);
          } else {
            f(s);
          }
          q.setWidth = q.set_width ? q.set_width : q.setWidth;
          q.setHeight = q.set_height ? q.set_height : q.setHeight;
          q.axis = q.horizontalScroll ? "x" : i._findAxis.call(null, q.axis);
          q.scrollInertia =
            q.scrollInertia > 0 && q.scrollInertia < 17 ? 17 : q.scrollInertia;
          if (typeof q.mouseWheel !== "object" && q.mouseWheel == true) {
            q.mouseWheel = {
              enable: true,
              scrollAmount: "auto",
              axis: "y",
              preventDefault: false,
              deltaFactor: "auto",
              normalizeDelta: false,
              invert: false
            };
          }
          q.mouseWheel.scrollAmount = !q.mouseWheelPixels
            ? q.mouseWheel.scrollAmount
            : q.mouseWheelPixels;
          q.mouseWheel.normalizeDelta = !q.advanced.normalizeMouseWheelDelta
            ? q.mouseWheel.normalizeDelta
            : q.advanced.normalizeMouseWheelDelta;
          q.scrollButtons.scrollType = i._findScrollButtonsType.call(
            null,
            q.scrollButtons.scrollType
          );
          i._theme.call(null, q);
          return j(p).each(function() {
            var u = j(this);
            if (!u.data(d)) {
              u.data(d, {
                idx: ++l,
                opt: q,
                scrollRatio: { y: null, x: null },
                overflowed: null,
                contentReset: { y: null, x: null },
                bindEvents: false,
                tweenRunning: false,
                sequential: {},
                langDir: u.css("direction"),
                cbOffsets: null,
                trigger: null
              });
              var w = u.data(d).opt,
                v = u.data("mcs-axis"),
                t = u.data("mcs-scrollbar-position"),
                x = u.data("mcs-theme");
              if (v) {
                w.axis = v;
              }
              if (t) {
                w.scrollbarPosition = t;
              }
              if (x) {
                w.theme = x;
                i._theme.call(null, w);
              }
              i._pluginMarkup.call(this);
              e.update.call(null, u);
            }
          });
        },
        update: function(q) {
          var p = q || i._selector.call(this);
          return j(p).each(function() {
            var t = j(this);
            if (t.data(d)) {
              var v = t.data(d),
                u = v.opt,
                r = j("#mCSB_" + v.idx + "_container"),
                s = [
                  j("#mCSB_" + v.idx + "_dragger_vertical"),
                  j("#mCSB_" + v.idx + "_dragger_horizontal")
                ];
              if (!r.length) {
                return;
              }
              if (v.tweenRunning) {
                i._stop.call(null, t);
              }
              if (t.hasClass("mCS_disabled")) {
                t.removeClass("mCS_disabled");
              }
              if (t.hasClass("mCS_destroyed")) {
                t.removeClass("mCS_destroyed");
              }
              i._maxHeight.call(this);
              i._expandContentHorizontally.call(this);
              if (u.axis !== "y" && !u.advanced.autoExpandHorizontalScroll) {
                r.css("width", i._contentWidth(r.children()));
              }
              v.overflowed = i._overflowed.call(this);
              i._scrollbarVisibility.call(this);
              if (u.autoDraggerLength) {
                i._setDraggerLength.call(this);
              }
              i._scrollRatio.call(this);
              i._bindEvents.call(this);
              var w = [Math.abs(r[0].offsetTop), Math.abs(r[0].offsetLeft)];
              if (u.axis !== "x") {
                if (!v.overflowed[0]) {
                  i._resetContentPosition.call(this);
                  if (u.axis === "y") {
                    i._unbindEvents.call(this);
                  } else {
                    if (u.axis === "yx" && v.overflowed[1]) {
                      i._scrollTo.call(this, t, w[1].toString(), {
                        dir: "x",
                        dur: 0,
                        overwrite: "none"
                      });
                    }
                  }
                } else {
                  if (s[0].height() > s[0].parent().height()) {
                    i._resetContentPosition.call(this);
                  } else {
                    i._scrollTo.call(this, t, w[0].toString(), {
                      dir: "y",
                      dur: 0,
                      overwrite: "none"
                    });
                    v.contentReset.y = null;
                  }
                }
              }
              if (u.axis !== "y") {
                if (!v.overflowed[1]) {
                  i._resetContentPosition.call(this);
                  if (u.axis === "x") {
                    i._unbindEvents.call(this);
                  } else {
                    if (u.axis === "yx" && v.overflowed[0]) {
                      i._scrollTo.call(this, t, w[0].toString(), {
                        dir: "y",
                        dur: 0,
                        overwrite: "none"
                      });
                    }
                  }
                } else {
                  if (s[1].width() > s[1].parent().width()) {
                    i._resetContentPosition.call(this);
                  } else {
                    i._scrollTo.call(this, t, w[1].toString(), {
                      dir: "x",
                      dur: 0,
                      overwrite: "none"
                    });
                    v.contentReset.x = null;
                  }
                }
              }
              i._autoUpdate.call(this);
            }
          });
        },
        scrollTo: function(r, q) {
          if (typeof r == "undefined" || r == null) {
            return;
          }
          var p = i._selector.call(this);
          return j(p).each(function() {
            var u = j(this);
            if (u.data(d)) {
              var x = u.data(d),
                w = x.opt,
                v = {
                  trigger: "external",
                  scrollInertia: w.scrollInertia,
                  scrollEasing: "mcsEaseInOut",
                  moveDragger: false,
                  timeout: 60,
                  callbacks: true,
                  onStart: true,
                  onUpdate: true,
                  onComplete: true
                },
                s = j.extend(true, {}, v, q),
                y = i._arr.call(this, r),
                t =
                  s.scrollInertia > 0 && s.scrollInertia < 17
                    ? 17
                    : s.scrollInertia;
              y[0] = i._to.call(this, y[0], "y");
              y[1] = i._to.call(this, y[1], "x");
              if (s.moveDragger) {
                y[0] *= x.scrollRatio.y;
                y[1] *= x.scrollRatio.x;
              }
              s.dur = t;
              setTimeout(function() {
                if (
                  y[0] !== null &&
                  typeof y[0] !== "undefined" &&
                  w.axis !== "x" &&
                  x.overflowed[0]
                ) {
                  s.dir = "y";
                  s.overwrite = "all";
                  i._scrollTo.call(this, u, y[0].toString(), s);
                }
                if (
                  y[1] !== null &&
                  typeof y[1] !== "undefined" &&
                  w.axis !== "y" &&
                  x.overflowed[1]
                ) {
                  s.dir = "x";
                  s.overwrite = "none";
                  i._scrollTo.call(this, u, y[1].toString(), s);
                }
              }, s.timeout);
            }
          });
        },
        stop: function() {
          var p = i._selector.call(this);
          return j(p).each(function() {
            var q = j(this);
            if (q.data(d)) {
              i._stop.call(null, q);
            }
          });
        },
        disable: function(q) {
          var p = i._selector.call(this);
          return j(p).each(function() {
            var r = j(this);
            if (r.data(d)) {
              var t = r.data(d),
                s = t.opt;
              i._autoUpdate.call(this, "remove");
              i._unbindEvents.call(this);
              if (q) {
                i._resetContentPosition.call(this);
              }
              i._scrollbarVisibility.call(this, true);
              r.addClass("mCS_disabled");
            }
          });
        },
        destroy: function() {
          var p = i._selector.call(this);
          return j(p).each(function() {
            var s = j(this);
            if (s.data(d)) {
              var u = s.data(d),
                t = u.opt,
                q = j("#mCSB_" + u.idx),
                r = j("#mCSB_" + u.idx + "_container"),
                v = j(".mCSB_" + u.idx + "_scrollbar");
              if (t.live) {
                f(p);
              }
              i._autoUpdate.call(this, "remove");
              i._unbindEvents.call(this);
              i._resetContentPosition.call(this);
              s.removeData(d);
              i._delete.call(null, this.mcs);
              v.remove();
              q.replaceWith(r.contents());
              s.removeClass(
                g +
                  " _" +
                  d +
                  "_" +
                  u.idx +
                  " mCS-autoHide mCS-dir-rtl mCS_no_scrollbar mCS_disabled"
              ).addClass("mCS_destroyed");
            }
          });
        }
      },
      i = {
        _selector: function() {
          return typeof j(this) !== "object" || j(this).length < 1 ? m : this;
        },
        _theme: function(s) {
          var r = [
              "rounded",
              "rounded-dark",
              "rounded-dots",
              "rounded-dots-dark"
            ],
            q = [
              "rounded-dots",
              "rounded-dots-dark",
              "3d",
              "3d-dark",
              "3d-thick",
              "3d-thick-dark",
              "inset",
              "inset-dark",
              "inset-2",
              "inset-2-dark",
              "inset-3",
              "inset-3-dark"
            ],
            p = ["minimal", "minimal-dark"],
            u = ["minimal", "minimal-dark"],
            t = ["minimal", "minimal-dark"];
          s.autoDraggerLength =
            j.inArray(s.theme, r) > -1 ? false : s.autoDraggerLength;
          s.autoExpandScrollbar =
            j.inArray(s.theme, q) > -1 ? false : s.autoExpandScrollbar;
          s.scrollButtons.enable =
            j.inArray(s.theme, p) > -1 ? false : s.scrollButtons.enable;
          s.autoHideScrollbar =
            j.inArray(s.theme, u) > -1 ? true : s.autoHideScrollbar;
          s.scrollbarPosition =
            j.inArray(s.theme, t) > -1 ? "outside" : s.scrollbarPosition;
        },
        _findAxis: function(p) {
          return p === "yx" || p === "xy" || p === "auto"
            ? "yx"
            : p === "x" || p === "horizontal"
            ? "x"
            : "y";
        },
        _findScrollButtonsType: function(p) {
          return p === "stepped" ||
            p === "pixels" ||
            p === "step" ||
            p === "click"
            ? "stepped"
            : "stepless";
        },
        _pluginMarkup: function() {
          var y = j(this),
            x = y.data(d),
            r = x.opt,
            t = r.autoExpandScrollbar ? " mCSB_scrollTools_onDrag_expand" : "",
            B = [
              "<div id='mCSB_" +
                x.idx +
                "_scrollbar_vertical' class='mCSB_scrollTools mCSB_" +
                x.idx +
                "_scrollbar mCS-" +
                r.theme +
                " mCSB_scrollTools_vertical" +
                t +
                "'><div class='mCSB_draggerContainer'><div id='mCSB_" +
                x.idx +
                "_dragger_vertical' class='mCSB_dragger' style='position:absolute;' oncontextmenu='return false;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>",
              "<div id='mCSB_" +
                x.idx +
                "_scrollbar_horizontal' class='mCSB_scrollTools mCSB_" +
                x.idx +
                "_scrollbar mCS-" +
                r.theme +
                " mCSB_scrollTools_horizontal" +
                t +
                "'><div class='mCSB_draggerContainer'><div id='mCSB_" +
                x.idx +
                "_dragger_horizontal' class='mCSB_dragger' style='position:absolute;' oncontextmenu='return false;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>"
            ],
            u =
              r.axis === "yx"
                ? "mCSB_vertical_horizontal"
                : r.axis === "x"
                ? "mCSB_horizontal"
                : "mCSB_vertical",
            w = r.axis === "yx" ? B[0] + B[1] : r.axis === "x" ? B[1] : B[0],
            v =
              r.axis === "yx"
                ? "<div id='mCSB_" +
                  x.idx +
                  "_container_wrapper' class='mCSB_container_wrapper' />"
                : "",
            s = r.autoHideScrollbar ? " mCS-autoHide" : "",
            p = r.axis !== "x" && x.langDir === "rtl" ? " mCS-dir-rtl" : "";
          if (r.setWidth) {
            y.css("width", r.setWidth);
          }
          if (r.setHeight) {
            y.css("height", r.setHeight);
          }
          r.setLeft =
            r.axis !== "y" && x.langDir === "rtl" ? "989999px" : r.setLeft;
          y.addClass(g + " _" + d + "_" + x.idx + s + p).wrapInner(
            "<div id='mCSB_" +
              x.idx +
              "' class='mCustomScrollBox mCS-" +
              r.theme +
              " " +
              u +
              "'><div id='mCSB_" +
              x.idx +
              "_container' class='mCSB_container' style='position:relative; top:" +
              r.setTop +
              "; left:" +
              r.setLeft +
              ";' dir=" +
              x.langDir +
              " /></div>"
          );
          var q = j("#mCSB_" + x.idx),
            z = j("#mCSB_" + x.idx + "_container");
          if (r.axis !== "y" && !r.advanced.autoExpandHorizontalScroll) {
            z.css("width", i._contentWidth(z.children()));
          }
          if (r.scrollbarPosition === "outside") {
            if (y.css("position") === "static") {
              y.css("position", "relative");
            }
            y.css("overflow", "visible");
            q.addClass("mCSB_outside").after(w);
          } else {
            q.addClass("mCSB_inside").append(w);
            z.wrap(v);
          }
          i._scrollButtons.call(this);
          var A = [
            j("#mCSB_" + x.idx + "_dragger_vertical"),
            j("#mCSB_" + x.idx + "_dragger_horizontal")
          ];
          A[0].css("min-height", A[0].height());
          A[1].css("min-width", A[1].width());
        },
        _contentWidth: function(p) {
          return Math.max.apply(
            Math,
            p
              .map(function() {
                return j(this).outerWidth(true);
              })
              .get()
          );
        },
        _expandContentHorizontally: function() {
          var q = j(this),
            s = q.data(d),
            r = s.opt,
            p = j("#mCSB_" + s.idx + "_container");
          if (r.advanced.autoExpandHorizontalScroll && r.axis !== "y") {
            p.css({ position: "absolute", width: "auto" })
              .wrap(
                "<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />"
              )
              .css({
                width:
                  Math.ceil(p[0].getBoundingClientRect().right + 0.4) -
                  Math.floor(p[0].getBoundingClientRect().left),
                position: "relative"
              })
              .unwrap();
          }
        },
        _scrollButtons: function() {
          var s = j(this),
            u = s.data(d),
            t = u.opt,
            q = j(".mCSB_" + u.idx + "_scrollbar:first"),
            r = [
              "<a href='#' class='mCSB_buttonUp' oncontextmenu='return false;' />",
              "<a href='#' class='mCSB_buttonDown' oncontextmenu='return false;' />",
              "<a href='#' class='mCSB_buttonLeft' oncontextmenu='return false;' />",
              "<a href='#' class='mCSB_buttonRight' oncontextmenu='return false;' />"
            ],
            p = [
              t.axis === "x" ? r[2] : r[0],
              t.axis === "x" ? r[3] : r[1],
              r[2],
              r[3]
            ];
          if (t.scrollButtons.enable) {
            q.prepend(p[0])
              .append(p[1])
              .next(".mCSB_scrollTools")
              .prepend(p[2])
              .append(p[3]);
          }
        },
        _maxHeight: function() {
          var t = j(this),
            w = t.data(d),
            v = w.opt,
            r = j("#mCSB_" + w.idx),
            q = t.css("max-height"),
            s = q.indexOf("%") !== -1,
            p = t.css("box-sizing");
          if (q !== "none") {
            var u = s ? (t.parent().height() * parseInt(q)) / 100 : parseInt(q);
            if (p === "border-box") {
              u -=
                t.innerHeight() -
                t.height() +
                (t.outerHeight() - t.innerHeight());
            }
            r.css("max-height", Math.round(u));
          }
        },
        _setDraggerLength: function() {
          var u = j(this),
            s = u.data(d),
            p = j("#mCSB_" + s.idx),
            v = j("#mCSB_" + s.idx + "_container"),
            y = [
              j("#mCSB_" + s.idx + "_dragger_vertical"),
              j("#mCSB_" + s.idx + "_dragger_horizontal")
            ],
            t = [
              p.height() / v.outerHeight(false),
              p.width() / v.outerWidth(false)
            ],
            q = [
              parseInt(y[0].css("min-height")),
              Math.round(t[0] * y[0].parent().height()),
              parseInt(y[1].css("min-width")),
              Math.round(t[1] * y[1].parent().width())
            ],
            r = k && q[1] < q[0] ? q[0] : q[1],
            x = k && q[3] < q[2] ? q[2] : q[3];
          y[0]
            .css({ height: r, "max-height": y[0].parent().height() - 10 })
            .find(".mCSB_dragger_bar")
            .css({ "line-height": q[0] + "px" });
          y[1].css({ width: x, "max-width": y[1].parent().width() - 10 });
        },
        _scrollRatio: function() {
          var t = j(this),
            v = t.data(d),
            q = j("#mCSB_" + v.idx),
            r = j("#mCSB_" + v.idx + "_container"),
            s = [
              j("#mCSB_" + v.idx + "_dragger_vertical"),
              j("#mCSB_" + v.idx + "_dragger_horizontal")
            ],
            u = [
              r.outerHeight(false) - q.height(),
              r.outerWidth(false) - q.width()
            ],
            p = [
              u[0] / (s[0].parent().height() - s[0].height()),
              u[1] / (s[1].parent().width() - s[1].width())
            ];
          v.scrollRatio = { y: p[0], x: p[1] };
        },
        _onDragClasses: function(r, t, q) {
          var s = q ? "mCSB_dragger_onDrag_expanded" : "",
            p = ["mCSB_dragger_onDrag", "mCSB_scrollTools_onDrag"],
            u = r.closest(".mCSB_scrollTools");
          if (t === "active") {
            r.toggleClass(p[0] + " " + s);
            u.toggleClass(p[1]);
            r[0]._draggable = r[0]._draggable ? 0 : 1;
          } else {
            if (!r[0]._draggable) {
              if (t === "hide") {
                r.removeClass(p[0]);
                u.removeClass(p[1]);
              } else {
                r.addClass(p[0]);
                u.addClass(p[1]);
              }
            }
          }
        },
        _overflowed: function() {
          var t = j(this),
            u = t.data(d),
            q = j("#mCSB_" + u.idx),
            s = j("#mCSB_" + u.idx + "_container"),
            r = u.overflowed == null ? s.height() : s.outerHeight(false),
            p = u.overflowed == null ? s.width() : s.outerWidth(false);
          return [r > q.height(), p > q.width()];
        },
        _resetContentPosition: function() {
          var t = j(this),
            v = t.data(d),
            u = v.opt,
            q = j("#mCSB_" + v.idx),
            r = j("#mCSB_" + v.idx + "_container"),
            s = [
              j("#mCSB_" + v.idx + "_dragger_vertical"),
              j("#mCSB_" + v.idx + "_dragger_horizontal")
            ];
          i._stop(t);
          if (
            (u.axis !== "x" && !v.overflowed[0]) ||
            (u.axis === "y" && v.overflowed[0])
          ) {
            s[0].add(r).css("top", 0);
            i._scrollTo(t, "_resetY");
          }
          if (
            (u.axis !== "y" && !v.overflowed[1]) ||
            (u.axis === "x" && v.overflowed[1])
          ) {
            var p = (dx = 0);
            if (v.langDir === "rtl") {
              p = q.width() - r.outerWidth(false);
              dx = Math.abs(p / v.scrollRatio.x);
            }
            r.css("left", p);
            s[1].css("left", dx);
            i._scrollTo(t, "_resetX");
          }
        },
        _bindEvents: function() {
          var r = j(this),
            t = r.data(d),
            s = t.opt;
          if (!t.bindEvents) {
            i._draggable.call(this);
            if (s.contentTouchScroll) {
              i._contentDraggable.call(this);
            }
            if (s.mouseWheel.enable) {
              function q() {
                p = setTimeout(function() {
                  if (!j.event.special.mousewheel) {
                    q();
                  } else {
                    clearTimeout(p);
                    i._mousewheel.call(r[0]);
                  }
                }, 1000);
              }
              var p;
              q();
            }
            i._draggerRail.call(this);
            i._wrapperScroll.call(this);
            if (s.advanced.autoScrollOnFocus) {
              i._focus.call(this);
            }
            if (s.scrollButtons.enable) {
              i._buttons.call(this);
            }
            if (s.keyboard.enable) {
              i._keyboard.call(this);
            }
            t.bindEvents = true;
          }
        },
        _unbindEvents: function() {
          var s = j(this),
            t = s.data(d),
            p = d + "_" + t.idx,
            u = ".mCSB_" + t.idx + "_scrollbar",
            r = j(
              "#mCSB_" +
                t.idx +
                ",#mCSB_" +
                t.idx +
                "_container,#mCSB_" +
                t.idx +
                "_container_wrapper," +
                u +
                " .mCSB_draggerContainer,#mCSB_" +
                t.idx +
                "_dragger_vertical,#mCSB_" +
                t.idx +
                "_dragger_horizontal," +
                u +
                ">a"
            ),
            q = j("#mCSB_" + t.idx + "_container");
          if (t.bindEvents) {
            j(a).unbind("." + p);
            r.each(function() {
              j(this).unbind("." + p);
            });
            clearTimeout(s[0]._focusTimeout);
            i._delete.call(null, s[0]._focusTimeout);
            clearTimeout(t.sequential.step);
            i._delete.call(null, t.sequential.step);
            clearTimeout(q[0].onCompleteTimeout);
            i._delete.call(null, q[0].onCompleteTimeout);
            t.bindEvents = false;
          }
        },
        _scrollbarVisibility: function(q) {
          var t = j(this),
            v = t.data(d),
            u = v.opt,
            p = j("#mCSB_" + v.idx + "_container_wrapper"),
            r = p.length ? p : j("#mCSB_" + v.idx + "_container"),
            w = [
              j("#mCSB_" + v.idx + "_scrollbar_vertical"),
              j("#mCSB_" + v.idx + "_scrollbar_horizontal")
            ],
            s = [w[0].find(".mCSB_dragger"), w[1].find(".mCSB_dragger")];
          if (u.axis !== "x") {
            if (v.overflowed[0] && !q) {
              w[0]
                .add(s[0])
                .add(w[0].children("a"))
                .css("display", "block");
              r.removeClass("mCS_no_scrollbar_y mCS_y_hidden");
            } else {
              if (u.alwaysShowScrollbar) {
                if (u.alwaysShowScrollbar !== 2) {
                  s[0].add(w[0].children("a")).css("display", "none");
                }
                r.removeClass("mCS_y_hidden");
              } else {
                w[0].css("display", "none");
                r.addClass("mCS_y_hidden");
              }
              r.addClass("mCS_no_scrollbar_y");
            }
          }
          if (u.axis !== "y") {
            if (v.overflowed[1] && !q) {
              w[1]
                .add(s[1])
                .add(w[1].children("a"))
                .css("display", "block");
              r.removeClass("mCS_no_scrollbar_x mCS_x_hidden");
            } else {
              if (u.alwaysShowScrollbar) {
                if (u.alwaysShowScrollbar !== 2) {
                  s[1].add(w[1].children("a")).css("display", "none");
                }
                r.removeClass("mCS_x_hidden");
              } else {
                w[1].css("display", "none");
                r.addClass("mCS_x_hidden");
              }
              r.addClass("mCS_no_scrollbar_x");
            }
          }
          if (!v.overflowed[0] && !v.overflowed[1]) {
            t.addClass("mCS_no_scrollbar");
          } else {
            t.removeClass("mCS_no_scrollbar");
          }
        },
        _coordinates: function(q) {
          var p = q.type;
          switch (p) {
            case "pointerdown":
            case "MSPointerDown":
            case "pointermove":
            case "MSPointerMove":
            case "pointerup":
            case "MSPointerUp":
              return [q.originalEvent.pageY, q.originalEvent.pageX];
              break;
            case "touchstart":
            case "touchmove":
            case "touchend":
              var r =
                q.originalEvent.touches[0] || q.originalEvent.changedTouches[0];
              return [r.pageY, r.pageX];
              break;
            default:
              return [q.pageY, q.pageX];
          }
        },
        _draggable: function() {
          var u = j(this),
            s = u.data(d),
            p = s.opt,
            r = d + "_" + s.idx,
            t = [
              "mCSB_" + s.idx + "_dragger_vertical",
              "mCSB_" + s.idx + "_dragger_horizontal"
            ],
            v = j("#mCSB_" + s.idx + "_container"),
            w = j("#" + t[0] + ",#" + t[1]),
            A,
            y,
            z;
          w.bind(
            "mousedown." +
              r +
              " touchstart." +
              r +
              " pointerdown." +
              r +
              " MSPointerDown." +
              r,
            function(E) {
              E.stopImmediatePropagation();
              E.preventDefault();
              if (!i._mouseBtnLeft(E)) {
                return;
              }
              n = true;
              if (k) {
                a.onselectstart = function() {
                  return false;
                };
              }
              x(false);
              i._stop(u);
              A = j(this);
              var F = A.offset(),
                G = i._coordinates(E)[0] - F.top,
                B = i._coordinates(E)[1] - F.left,
                D = A.height() + F.top,
                C = A.width() + F.left;
              if (G < D && G > 0 && B < C && B > 0) {
                y = G;
                z = B;
              }
              i._onDragClasses(A, "active", p.autoExpandScrollbar);
            }
          ).bind("touchmove." + r, function(C) {
            C.stopImmediatePropagation();
            C.preventDefault();
            var D = A.offset(),
              E = i._coordinates(C)[0] - D.top,
              B = i._coordinates(C)[1] - D.left;
            q(y, z, E, B);
          });
          j(a)
            .bind(
              "mousemove." + r + " pointermove." + r + " MSPointerMove." + r,
              function(C) {
                if (A) {
                  var D = A.offset(),
                    E = i._coordinates(C)[0] - D.top,
                    B = i._coordinates(C)[1] - D.left;
                  if (y === E) {
                    return;
                  }
                  q(y, z, E, B);
                }
              }
            )
            .add(w)
            .bind(
              "mouseup." +
                r +
                " touchend." +
                r +
                " pointerup." +
                r +
                " MSPointerUp." +
                r,
              function(B) {
                if (A) {
                  i._onDragClasses(A, "active", p.autoExpandScrollbar);
                  A = null;
                }
                n = false;
                if (k) {
                  a.onselectstart = null;
                }
                x(true);
              }
            );
          function x(B) {
            var C = v.find("iframe");
            if (!C.length) {
              return;
            }
            var D = !B ? "none" : "auto";
            C.css("pointer-events", D);
          }
          function q(D, E, G, B) {
            v[0].idleTimer = p.scrollInertia < 233 ? 250 : 0;
            if (A.attr("id") === t[1]) {
              var C = "x",
                F = (A[0].offsetLeft - E + B) * s.scrollRatio.x;
            } else {
              var C = "y",
                F = (A[0].offsetTop - D + G) * s.scrollRatio.y;
            }
            i._scrollTo(u, F.toString(), { dir: C, drag: true });
          }
        },
        _contentDraggable: function() {
          var y = j(this),
            K = y.data(d),
            I = K.opt,
            F = d + "_" + K.idx,
            v = j("#mCSB_" + K.idx),
            z = j("#mCSB_" + K.idx + "_container"),
            w = [
              j("#mCSB_" + K.idx + "_dragger_vertical"),
              j("#mCSB_" + K.idx + "_dragger_horizontal")
            ],
            E,
            G,
            L,
            M,
            C = [],
            D = [],
            H,
            A,
            u,
            t,
            J,
            x,
            r = 0,
            q,
            s = I.axis === "yx" ? "none" : "all";
          z.bind(
            "touchstart." + F + " pointerdown." + F + " MSPointerDown." + F,
            function(N) {
              if (!i._pointerTouch(N) || n) {
                return;
              }
              var O = z.offset();
              E = i._coordinates(N)[0] - O.top;
              G = i._coordinates(N)[1] - O.left;
            }
          ).bind(
            "touchmove." + F + " pointermove." + F + " MSPointerMove." + F,
            function(Q) {
              if (!i._pointerTouch(Q) || n) {
                return;
              }
              Q.stopImmediatePropagation();
              A = i._getTime();
              var P = v.offset(),
                S = i._coordinates(Q)[0] - P.top,
                U = i._coordinates(Q)[1] - P.left,
                R = "mcsLinearOut";
              C.push(S);
              D.push(U);
              if (K.overflowed[0]) {
                var O = w[0].parent().height() - w[0].height(),
                  T = E - S > 0 && S - E > -(O * K.scrollRatio.y);
              }
              if (K.overflowed[1]) {
                var N = w[1].parent().width() - w[1].width(),
                  V = G - U > 0 && U - G > -(N * K.scrollRatio.x);
              }
              if (T || V) {
                Q.preventDefault();
              }
              x =
                I.axis === "yx"
                  ? [E - S, G - U]
                  : I.axis === "x"
                  ? [null, G - U]
                  : [E - S, null];
              z[0].idleTimer = 250;
              if (K.overflowed[0]) {
                B(x[0], r, R, "y", "all", true);
              }
              if (K.overflowed[1]) {
                B(x[1], r, R, "x", s, true);
              }
            }
          );
          v.bind(
            "touchstart." + F + " pointerdown." + F + " MSPointerDown." + F,
            function(N) {
              if (!i._pointerTouch(N) || n) {
                return;
              }
              N.stopImmediatePropagation();
              i._stop(y);
              H = i._getTime();
              var O = v.offset();
              L = i._coordinates(N)[0] - O.top;
              M = i._coordinates(N)[1] - O.left;
              C = [];
              D = [];
            }
          ).bind(
            "touchend." + F + " pointerup." + F + " MSPointerUp." + F,
            function(P) {
              if (!i._pointerTouch(P) || n) {
                return;
              }
              P.stopImmediatePropagation();
              u = i._getTime();
              var N = v.offset(),
                T = i._coordinates(P)[0] - N.top,
                V = i._coordinates(P)[1] - N.left;
              if (u - A > 30) {
                return;
              }
              J = 1000 / (u - H);
              var Q = "mcsEaseOut",
                R = J < 2.5,
                W = R ? [C[C.length - 2], D[D.length - 2]] : [0, 0];
              t = R ? [T - W[0], V - W[1]] : [T - L, V - M];
              var O = [Math.abs(t[0]), Math.abs(t[1])];
              J = R ? [Math.abs(t[0] / 4), Math.abs(t[1] / 4)] : [J, J];
              var U = [
                Math.abs(z[0].offsetTop) - t[0] * p(O[0] / J[0], J[0]),
                Math.abs(z[0].offsetLeft) - t[1] * p(O[1] / J[1], J[1])
              ];
              x =
                I.axis === "yx"
                  ? [U[0], U[1]]
                  : I.axis === "x"
                  ? [null, U[1]]
                  : [U[0], null];
              q = [O[0] * 4 + I.scrollInertia, O[1] * 4 + I.scrollInertia];
              var S = parseInt(I.contentTouchScroll) || 0;
              x[0] = O[0] > S ? x[0] : 0;
              x[1] = O[1] > S ? x[1] : 0;
              if (K.overflowed[0]) {
                B(x[0], q[0], Q, "y", s, false);
              }
              if (K.overflowed[1]) {
                B(x[1], q[1], Q, "x", s, false);
              }
            }
          );
          function p(P, N) {
            var O = [N * 1.5, N * 2, N / 1.5, N / 2];
            if (P > 90) {
              return N > 4 ? O[0] : O[3];
            } else {
              if (P > 60) {
                return N > 3 ? O[3] : O[2];
              } else {
                if (P > 30) {
                  return N > 8 ? O[1] : N > 6 ? O[0] : N > 4 ? N : O[2];
                } else {
                  return N > 8 ? N : O[3];
                }
              }
            }
          }
          function B(P, R, S, O, N, Q) {
            if (!P) {
              return;
            }
            i._scrollTo(y, P.toString(), {
              dur: R,
              scrollEasing: S,
              dir: O,
              overwrite: N,
              drag: Q
            });
          }
        },
        _mousewheel: function() {
          var w = j(this),
            v = w.data(d);
          if (v) {
            var p = v.opt,
              s = d + "_" + v.idx,
              q = j("#mCSB_" + v.idx),
              x = [
                j("#mCSB_" + v.idx + "_dragger_vertical"),
                j("#mCSB_" + v.idx + "_dragger_horizontal")
              ],
              t = j("#mCSB_" + v.idx + "_container").find("iframe"),
              r = q;
            if (t.length) {
              t.each(function() {
                var y = this;
                if (u(y)) {
                  r = r.add(
                    j(y)
                      .contents()
                      .find("body")
                  );
                }
              });
            }
            r.bind("mousewheel." + s, function(C, G) {
              i._stop(w);
              if (i._disableMousewheel(w, C.target)) {
                return;
              }
              var E =
                p.mouseWheel.deltaFactor !== "auto"
                  ? parseInt(p.mouseWheel.deltaFactor)
                  : k && C.deltaFactor < 100
                  ? 100
                  : C.deltaFactor || 100;
              if (p.axis === "x" || p.mouseWheel.axis === "x") {
                var z = "x",
                  F = [
                    Math.round(E * v.scrollRatio.x),
                    parseInt(p.mouseWheel.scrollAmount)
                  ],
                  B =
                    p.mouseWheel.scrollAmount !== "auto"
                      ? F[1]
                      : F[0] >= q.width()
                      ? q.width() * 0.9
                      : F[0],
                  H = Math.abs(
                    j("#mCSB_" + v.idx + "_container")[0].offsetLeft
                  ),
                  D = x[1][0].offsetLeft,
                  A = x[1].parent().width() - x[1].width(),
                  y = C.deltaX || C.deltaY || G;
              } else {
                var z = "y",
                  F = [
                    Math.round(E * v.scrollRatio.y),
                    parseInt(p.mouseWheel.scrollAmount)
                  ],
                  B =
                    p.mouseWheel.scrollAmount !== "auto"
                      ? F[1]
                      : F[0] >= q.height()
                      ? q.height() * 0.9
                      : F[0],
                  H = Math.abs(j("#mCSB_" + v.idx + "_container")[0].offsetTop),
                  D = x[0][0].offsetTop,
                  A = x[0].parent().height() - x[0].height(),
                  y = C.deltaY || G;
              }
              if (
                (z === "y" && !v.overflowed[0]) ||
                (z === "x" && !v.overflowed[1])
              ) {
                return;
              }
              if (p.mouseWheel.invert) {
                y = -y;
              }
              if (p.mouseWheel.normalizeDelta) {
                y = y < 0 ? -1 : 1;
              }
              if (
                (y > 0 && D !== 0) ||
                (y < 0 && D !== A) ||
                p.mouseWheel.preventDefault
              ) {
                C.stopImmediatePropagation();
                C.preventDefault();
              }
              i._scrollTo(w, (H - y * B).toString(), { dir: z });
            });
          }
          function u(z) {
            var y = null;
            try {
              var B = z.contentDocument || z.contentWindow.document;
              y = B.body.innerHTML;
            } catch (A) {}
            return y !== null;
          }
        },
        _disableMousewheel: function(r, t) {
          var p = t.nodeName.toLowerCase(),
            q = r.data(d).opt.mouseWheel.disableOver,
            s = ["select", "textarea"];
          return (
            j.inArray(p, q) > -1 &&
            !(j.inArray(p, s) > -1 && !j(t).is(":focus"))
          );
        },
        _draggerRail: function() {
          var s = j(this),
            t = s.data(d),
            q = d + "_" + t.idx,
            r = j("#mCSB_" + t.idx + "_container"),
            u = r.parent(),
            p = j(".mCSB_" + t.idx + "_scrollbar .mCSB_draggerContainer");
          p.bind(
            "touchstart." + q + " pointerdown." + q + " MSPointerDown." + q,
            function(v) {
              n = true;
            }
          )
            .bind(
              "touchend." + q + " pointerup." + q + " MSPointerUp." + q,
              function(v) {
                n = false;
              }
            )
            .bind("click." + q, function(z) {
              if (
                j(z.target).hasClass("mCSB_draggerContainer") ||
                j(z.target).hasClass("mCSB_draggerRail")
              ) {
                i._stop(s);
                var w = j(this),
                  y = w.find(".mCSB_dragger");
                if (w.parent(".mCSB_scrollTools_horizontal").length > 0) {
                  if (!t.overflowed[1]) {
                    return;
                  }
                  var v = "x",
                    x = z.pageX > y.offset().left ? -1 : 1,
                    A = Math.abs(r[0].offsetLeft) - x * (u.width() * 0.9);
                } else {
                  if (!t.overflowed[0]) {
                    return;
                  }
                  var v = "y",
                    x = z.pageY > y.offset().top ? -1 : 1,
                    A = Math.abs(r[0].offsetTop) - x * (u.height() * 0.9);
                }
                i._scrollTo(s, A.toString(), {
                  dir: v,
                  scrollEasing: "mcsEaseInOut"
                });
              }
            });
        },
        _focus: function() {
          var r = j(this),
            t = r.data(d),
            s = t.opt,
            p = d + "_" + t.idx,
            q = j("#mCSB_" + t.idx + "_container"),
            u = q.parent();
          q.bind("focusin." + p, function(x) {
            var w = j(a.activeElement),
              y = q.find(".mCustomScrollBox").length,
              v = 0;
            if (!w.is(s.advanced.autoScrollOnFocus)) {
              return;
            }
            i._stop(r);
            clearTimeout(r[0]._focusTimeout);
            r[0]._focusTimer = y ? (v + 17) * y : 0;
            r[0]._focusTimeout = setTimeout(function() {
              var C = [
                  w.offset().top - q.offset().top,
                  w.offset().left - q.offset().left
                ],
                B = [q[0].offsetTop, q[0].offsetLeft],
                z = [
                  B[0] + C[0] >= 0 &&
                    B[0] + C[0] < u.height() - w.outerHeight(false),
                  B[1] + C[1] >= 0 &&
                    B[0] + C[1] < u.width() - w.outerWidth(false)
                ],
                A = s.axis === "yx" && !z[0] && !z[1] ? "none" : "all";
              if (s.axis !== "x" && !z[0]) {
                i._scrollTo(r, C[0].toString(), {
                  dir: "y",
                  scrollEasing: "mcsEaseInOut",
                  overwrite: A,
                  dur: v
                });
              }
              if (s.axis !== "y" && !z[1]) {
                i._scrollTo(r, C[1].toString(), {
                  dir: "x",
                  scrollEasing: "mcsEaseInOut",
                  overwrite: A,
                  dur: v
                });
              }
            }, r[0]._focusTimer);
          });
        },
        _wrapperScroll: function() {
          var q = j(this),
            r = q.data(d),
            p = d + "_" + r.idx,
            s = j("#mCSB_" + r.idx + "_container").parent();
          s.bind("scroll." + p, function(t) {
            s.scrollTop(0).scrollLeft(0);
          });
        },
        _buttons: function() {
          var u = j(this),
            w = u.data(d),
            v = w.opt,
            p = w.sequential,
            r = d + "_" + w.idx,
            t = j("#mCSB_" + w.idx + "_container"),
            s = ".mCSB_" + w.idx + "_scrollbar",
            q = j(s + ">a");
          q.bind(
            "mousedown." +
              r +
              " touchstart." +
              r +
              " pointerdown." +
              r +
              " MSPointerDown." +
              r +
              " mouseup." +
              r +
              " touchend." +
              r +
              " pointerup." +
              r +
              " MSPointerUp." +
              r +
              " mouseout." +
              r +
              " pointerout." +
              r +
              " MSPointerOut." +
              r +
              " click." +
              r,
            function(z) {
              z.preventDefault();
              if (!i._mouseBtnLeft(z)) {
                return;
              }
              var y = j(this).attr("class");
              p.type = v.scrollButtons.scrollType;
              switch (z.type) {
                case "mousedown":
                case "touchstart":
                case "pointerdown":
                case "MSPointerDown":
                  if (p.type === "stepped") {
                    return;
                  }
                  n = true;
                  w.tweenRunning = false;
                  x("on", y);
                  break;
                case "mouseup":
                case "touchend":
                case "pointerup":
                case "MSPointerUp":
                case "mouseout":
                case "pointerout":
                case "MSPointerOut":
                  if (p.type === "stepped") {
                    return;
                  }
                  n = false;
                  if (p.dir) {
                    x("off", y);
                  }
                  break;
                case "click":
                  if (p.type !== "stepped" || w.tweenRunning) {
                    return;
                  }
                  x("on", y);
                  break;
              }
              function x(A, B) {
                p.scrollAmount = v.snapAmount || v.scrollButtons.scrollAmount;
                i._sequentialScroll.call(this, u, A, B);
              }
            }
          );
        },
        _keyboard: function() {
          var u = j(this),
            t = u.data(d),
            q = t.opt,
            x = t.sequential,
            s = d + "_" + t.idx,
            r = j("#mCSB_" + t.idx),
            w = j("#mCSB_" + t.idx + "_container"),
            p = w.parent(),
            v =
              "input,textarea,select,datalist,keygen,[contenteditable='true']";
          r.attr("tabindex", "0").bind(
            "blur." + s + " keydown." + s + " keyup." + s,
            function(D) {
              switch (D.type) {
                case "blur":
                  if (t.tweenRunning && x.dir) {
                    y("off", null);
                  }
                  break;
                case "keydown":
                case "keyup":
                  var A = D.keyCode ? D.keyCode : D.which,
                    B = "on";
                  if (
                    (q.axis !== "x" && (A === 38 || A === 40)) ||
                    (q.axis !== "y" && (A === 37 || A === 39))
                  ) {
                    if (
                      ((A === 38 || A === 40) && !t.overflowed[0]) ||
                      ((A === 37 || A === 39) && !t.overflowed[1])
                    ) {
                      return;
                    }
                    if (D.type === "keyup") {
                      B = "off";
                    }
                    if (!j(a.activeElement).is(v)) {
                      D.preventDefault();
                      D.stopImmediatePropagation();
                      y(B, A);
                    }
                  } else {
                    if (A === 33 || A === 34) {
                      if (t.overflowed[0] || t.overflowed[1]) {
                        D.preventDefault();
                        D.stopImmediatePropagation();
                      }
                      if (D.type === "keyup") {
                        i._stop(u);
                        var C = A === 34 ? -1 : 1;
                        if (
                          q.axis === "x" ||
                          (q.axis === "yx" &&
                            t.overflowed[1] &&
                            !t.overflowed[0])
                        ) {
                          var z = "x",
                            E =
                              Math.abs(w[0].offsetLeft) - C * (p.width() * 0.9);
                        } else {
                          var z = "y",
                            E =
                              Math.abs(w[0].offsetTop) - C * (p.height() * 0.9);
                        }
                        i._scrollTo(u, E.toString(), {
                          dir: z,
                          scrollEasing: "mcsEaseInOut"
                        });
                      }
                    } else {
                      if (A === 35 || A === 36) {
                        if (!j(a.activeElement).is(v)) {
                          if (t.overflowed[0] || t.overflowed[1]) {
                            D.preventDefault();
                            D.stopImmediatePropagation();
                          }
                          if (D.type === "keyup") {
                            if (
                              q.axis === "x" ||
                              (q.axis === "yx" &&
                                t.overflowed[1] &&
                                !t.overflowed[0])
                            ) {
                              var z = "x",
                                E =
                                  A === 35
                                    ? Math.abs(p.width() - w.outerWidth(false))
                                    : 0;
                            } else {
                              var z = "y",
                                E =
                                  A === 35
                                    ? Math.abs(
                                        p.height() - w.outerHeight(false)
                                      )
                                    : 0;
                            }
                            i._scrollTo(u, E.toString(), {
                              dir: z,
                              scrollEasing: "mcsEaseInOut"
                            });
                          }
                        }
                      }
                    }
                  }
                  break;
              }
              function y(F, G) {
                x.type = q.keyboard.scrollType;
                x.scrollAmount = q.snapAmount || q.keyboard.scrollAmount;
                if (x.type === "stepped" && t.tweenRunning) {
                  return;
                }
                i._sequentialScroll.call(this, u, F, G);
              }
            }
          );
        },
        _sequentialScroll: function(r, u, s) {
          var w = r.data(d),
            q = w.opt,
            y = w.sequential,
            x = j("#mCSB_" + w.idx + "_container"),
            p = y.type === "stepped" ? true : false;
          switch (u) {
            case "on":
              y.dir = [
                s === "mCSB_buttonRight" ||
                s === "mCSB_buttonLeft" ||
                s === 39 ||
                s === 37
                  ? "x"
                  : "y",
                s === "mCSB_buttonUp" ||
                s === "mCSB_buttonLeft" ||
                s === 38 ||
                s === 37
                  ? -1
                  : 1
              ];
              i._stop(r);
              if (i._isNumeric(s) && y.type === "stepped") {
                return;
              }
              t(p);
              break;
            case "off":
              v();
              if (p || (w.tweenRunning && y.dir)) {
                t(true);
              }
              break;
          }
          function t(z) {
            var F = y.type !== "stepped",
              J = !z ? 1000 / 60 : F ? q.scrollInertia / 1.5 : q.scrollInertia,
              B = !z ? 2.5 : F ? 7.5 : 40,
              I = [Math.abs(x[0].offsetTop), Math.abs(x[0].offsetLeft)],
              E = [
                w.scrollRatio.y > 10 ? 10 : w.scrollRatio.y,
                w.scrollRatio.x > 10 ? 10 : w.scrollRatio.x
              ],
              C =
                y.dir[0] === "x"
                  ? I[1] + y.dir[1] * (E[1] * B)
                  : I[0] + y.dir[1] * (E[0] * B),
              H =
                y.dir[0] === "x"
                  ? I[1] + y.dir[1] * parseInt(y.scrollAmount)
                  : I[0] + y.dir[1] * parseInt(y.scrollAmount),
              G = y.scrollAmount !== "auto" ? H : C,
              D = !z ? "mcsLinear" : F ? "mcsLinearOut" : "mcsEaseInOut",
              A = !z ? false : true;
            if (z && J < 17) {
              G = y.dir[0] === "x" ? I[1] : I[0];
            }
            i._scrollTo(r, G.toString(), {
              dir: y.dir[0],
              scrollEasing: D,
              dur: J,
              onComplete: A
            });
            if (z) {
              y.dir = false;
              return;
            }
            clearTimeout(y.step);
            y.step = setTimeout(function() {
              t();
            }, J);
          }
          function v() {
            clearTimeout(y.step);
            i._stop(r);
          }
        },
        _arr: function(r) {
          var q = j(this).data(d).opt,
            p = [];
          if (typeof r === "function") {
            r = r();
          }
          if (!(r instanceof Array)) {
            p[0] = r.y ? r.y : r.x || q.axis === "x" ? null : r;
            p[1] = r.x ? r.x : r.y || q.axis === "y" ? null : r;
          } else {
            p =
              r.length > 1
                ? [r[0], r[1]]
                : q.axis === "x"
                ? [null, r[0]]
                : [r[0], null];
          }
          if (typeof p[0] === "function") {
            p[0] = p[0]();
          }
          if (typeof p[1] === "function") {
            p[1] = p[1]();
          }
          return p;
        },
        _to: function(v, w) {
          if (v == null || typeof v == "undefined") {
            return;
          }
          var C = j(this),
            B = C.data(d),
            u = B.opt,
            D = j("#mCSB_" + B.idx + "_container"),
            r = D.parent(),
            F = typeof v;
          if (!w) {
            w = u.axis === "x" ? "x" : "y";
          }
          var q = w === "x" ? D.outerWidth(false) : D.outerHeight(false),
            x = w === "x" ? D.offset().left : D.offset().top,
            E = w === "x" ? D[0].offsetLeft : D[0].offsetTop,
            z = w === "x" ? "left" : "top";
          switch (F) {
            case "function":
              return v();
              break;
            case "object":
              if (v.nodeType) {
                var A = w === "x" ? j(v).offset().left : j(v).offset().top;
              } else {
                if (v.jquery) {
                  if (!v.length) {
                    return;
                  }
                  var A = w === "x" ? v.offset().left : v.offset().top;
                }
              }
              return A - x;
              break;
            case "string":
            case "number":
              if (i._isNumeric.call(null, v)) {
                return Math.abs(v);
              } else {
                if (v.indexOf("%") !== -1) {
                  return Math.abs((q * parseInt(v)) / 100);
                } else {
                  if (v.indexOf("-=") !== -1) {
                    return Math.abs(E - parseInt(v.split("-=")[1]));
                  } else {
                    if (v.indexOf("+=") !== -1) {
                      var s = E + parseInt(v.split("+=")[1]);
                      return s >= 0 ? 0 : Math.abs(s);
                    } else {
                      if (
                        v.indexOf("px") !== -1 &&
                        i._isNumeric.call(null, v.split("px")[0])
                      ) {
                        return Math.abs(v.split("px")[0]);
                      } else {
                        if (v === "top" || v === "left") {
                          return 0;
                        } else {
                          if (v === "bottom") {
                            return Math.abs(r.height() - D.outerHeight(false));
                          } else {
                            if (v === "right") {
                              return Math.abs(r.width() - D.outerWidth(false));
                            } else {
                              if (v === "first" || v === "last") {
                                var y = D.find(":" + v),
                                  A =
                                    w === "x"
                                      ? j(y).offset().left
                                      : j(y).offset().top;
                                return A - x;
                              } else {
                                if (j(v).length) {
                                  var A =
                                    w === "x"
                                      ? j(v).offset().left
                                      : j(v).offset().top;
                                  return A - x;
                                } else {
                                  D.css(z, v);
                                  e.update.call(null, C[0]);
                                  return;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              break;
          }
        },
        _autoUpdate: function(q) {
          var t = j(this),
            F = t.data(d),
            z = F.opt,
            v = j("#mCSB_" + F.idx + "_container");
          if (q) {
            clearTimeout(v[0].autoUpdate);
            i._delete.call(null, v[0].autoUpdate);
            return;
          }
          var s = v.parent(),
            p = [
              j("#mCSB_" + F.idx + "_scrollbar_vertical"),
              j("#mCSB_" + F.idx + "_scrollbar_horizontal")
            ],
            D = function() {
              return [
                p[0].is(":visible") ? p[0].outerHeight(true) : 0,
                p[1].is(":visible") ? p[1].outerWidth(true) : 0
              ];
            },
            E = y(),
            x,
            u = [
              v.outerHeight(false),
              v.outerWidth(false),
              s.height(),
              s.width(),
              D()[0],
              D()[1]
            ],
            H,
            B = G(),
            w;
          C();
          function C() {
            clearTimeout(v[0].autoUpdate);
            v[0].autoUpdate = setTimeout(function() {
              if (z.advanced.updateOnSelectorChange) {
                x = y();
                if (x !== E) {
                  r();
                  E = x;
                  return;
                }
              }
              if (z.advanced.updateOnContentResize) {
                H = [
                  v.outerHeight(false),
                  v.outerWidth(false),
                  s.height(),
                  s.width(),
                  D()[0],
                  D()[1]
                ];
                if (
                  H[0] !== u[0] ||
                  H[1] !== u[1] ||
                  H[2] !== u[2] ||
                  H[3] !== u[3] ||
                  H[4] !== u[4] ||
                  H[5] !== u[5]
                ) {
                  r();
                  u = H;
                }
              }
              if (z.advanced.updateOnImageLoad) {
                w = G();
                if (w !== B) {
                  v.find("img").each(function() {
                    A(this.src);
                  });
                  B = w;
                }
              }
              if (
                z.advanced.updateOnSelectorChange ||
                z.advanced.updateOnContentResize ||
                z.advanced.updateOnImageLoad
              ) {
                C();
              }
            }, 60);
          }
          function G() {
            var I = 0;
            if (z.advanced.updateOnImageLoad) {
              I = v.find("img").length;
            }
            return I;
          }
          function A(L) {
            var I = new Image();
            function K(M, N) {
              return function() {
                return N.apply(M, arguments);
              };
            }
            function J() {
              this.onload = null;
              r();
            }
            I.onload = K(I, J);
            I.src = L;
          }
          function y() {
            if (z.advanced.updateOnSelectorChange === true) {
              z.advanced.updateOnSelectorChange = "*";
            }
            var I = 0,
              J = v.find(z.advanced.updateOnSelectorChange);
            if (z.advanced.updateOnSelectorChange && J.length > 0) {
              J.each(function() {
                I += j(this).height() + j(this).width();
              });
            }
            return I;
          }
          function r() {
            clearTimeout(v[0].autoUpdate);
            e.update.call(null, t[0]);
          }
        },
        _snapAmount: function(r, p, q) {
          return Math.round(r / p) * p - q;
        },
        _stop: function(p) {
          var r = p.data(d),
            q = j(
              "#mCSB_" +
                r.idx +
                "_container,#mCSB_" +
                r.idx +
                "_container_wrapper,#mCSB_" +
                r.idx +
                "_dragger_vertical,#mCSB_" +
                r.idx +
                "_dragger_horizontal"
            );
          q.each(function() {
            i._stopTween.call(this);
          });
        },
        _scrollTo: function(q, s, u) {
          var I = q.data(d),
            E = I.opt,
            D = {
              trigger: "internal",
              dir: "y",
              scrollEasing: "mcsEaseOut",
              drag: false,
              dur: E.scrollInertia,
              overwrite: "all",
              callbacks: true,
              onStart: true,
              onUpdate: true,
              onComplete: true
            },
            u = j.extend(D, u),
            G = [u.dur, u.drag ? 0 : u.dur],
            v = j("#mCSB_" + I.idx),
            B = j("#mCSB_" + I.idx + "_container"),
            K = E.callbacks.onTotalScrollOffset
              ? i._arr.call(q, E.callbacks.onTotalScrollOffset)
              : [0, 0],
            p = E.callbacks.onTotalScrollBackOffset
              ? i._arr.call(q, E.callbacks.onTotalScrollBackOffset)
              : [0, 0];
          I.trigger = u.trigger;
          if (s === "_resetY" && !I.contentReset.y) {
            if (t("onOverflowYNone")) {
              E.callbacks.onOverflowYNone.call(q[0]);
            }
            I.contentReset.y = 1;
          }
          if (s === "_resetX" && !I.contentReset.x) {
            if (t("onOverflowXNone")) {
              E.callbacks.onOverflowXNone.call(q[0]);
            }
            I.contentReset.x = 1;
          }
          if (s === "_resetY" || s === "_resetX") {
            return;
          }
          if ((I.contentReset.y || !q[0].mcs) && I.overflowed[0]) {
            if (t("onOverflowY")) {
              E.callbacks.onOverflowY.call(q[0]);
            }
            I.contentReset.x = null;
          }
          if ((I.contentReset.x || !q[0].mcs) && I.overflowed[1]) {
            if (t("onOverflowX")) {
              E.callbacks.onOverflowX.call(q[0]);
            }
            I.contentReset.x = null;
          }
          if (E.snapAmount) {
            s = i._snapAmount(s, E.snapAmount, E.snapOffset);
          }
          switch (u.dir) {
            case "x":
              var x = j("#mCSB_" + I.idx + "_dragger_horizontal"),
                z = "left",
                C = B[0].offsetLeft,
                H = [
                  v.width() - B.outerWidth(false),
                  x.parent().width() - x.width()
                ],
                r = [s, s === 0 ? 0 : s / I.scrollRatio.x],
                L = K[1],
                J = p[1],
                A = L > 0 ? L / I.scrollRatio.x : 0,
                w = J > 0 ? J / I.scrollRatio.x : 0;
              break;
            case "y":
              var x = j("#mCSB_" + I.idx + "_dragger_vertical"),
                z = "top",
                C = B[0].offsetTop,
                H = [
                  v.height() - B.outerHeight(false),
                  x.parent().height() - x.height()
                ],
                r = [s, s === 0 ? 0 : s / I.scrollRatio.y],
                L = K[0],
                J = p[0],
                A = L > 0 ? L / I.scrollRatio.y : 0,
                w = J > 0 ? J / I.scrollRatio.y : 0;
              break;
          }
          if (r[1] < 0 || (r[0] === 0 && r[1] === 0)) {
            r = [0, 0];
          } else {
            if (r[1] >= H[1]) {
              r = [H[0], H[1]];
            } else {
              r[0] = -r[0];
            }
          }
          if (!q[0].mcs) {
            F();
          }
          clearTimeout(B[0].onCompleteTimeout);
          if (
            !I.tweenRunning &&
            ((C === 0 && r[0] >= 0) || (C === H[0] && r[0] <= H[0]))
          ) {
            return;
          }
          i._tweenTo.call(
            null,
            x[0],
            z,
            Math.round(r[1]),
            G[1],
            u.scrollEasing
          );
          i._tweenTo.call(
            null,
            B[0],
            z,
            Math.round(r[0]),
            G[0],
            u.scrollEasing,
            u.overwrite,
            {
              onStart: function() {
                if (u.callbacks && u.onStart && !I.tweenRunning) {
                  if (t("onScrollStart")) {
                    F();
                    E.callbacks.onScrollStart.call(q[0]);
                  }
                  I.tweenRunning = true;
                  i._onDragClasses(x);
                  I.cbOffsets = y();
                }
              },
              onUpdate: function() {
                if (u.callbacks && u.onUpdate) {
                  if (t("whileScrolling")) {
                    F();
                    E.callbacks.whileScrolling.call(q[0]);
                  }
                }
              },
              onComplete: function() {
                if (u.callbacks && u.onComplete) {
                  if (E.axis === "yx") {
                    clearTimeout(B[0].onCompleteTimeout);
                  }
                  var M = B[0].idleTimer || 0;
                  B[0].onCompleteTimeout = setTimeout(function() {
                    if (t("onScroll")) {
                      F();
                      E.callbacks.onScroll.call(q[0]);
                    }
                    if (
                      t("onTotalScroll") &&
                      r[1] >= H[1] - A &&
                      I.cbOffsets[0]
                    ) {
                      F();
                      E.callbacks.onTotalScroll.call(q[0]);
                    }
                    if (t("onTotalScrollBack") && r[1] <= w && I.cbOffsets[1]) {
                      F();
                      E.callbacks.onTotalScrollBack.call(q[0]);
                    }
                    I.tweenRunning = false;
                    B[0].idleTimer = 0;
                    i._onDragClasses(x, "hide");
                  }, M);
                }
              }
            }
          );
          function t(M) {
            return I && E.callbacks[M] && typeof E.callbacks[M] === "function";
          }
          function y() {
            return [
              E.callbacks.alwaysTriggerOffsets || C >= H[0] + L,
              E.callbacks.alwaysTriggerOffsets || C <= -J
            ];
          }
          function F() {
            var O = [B[0].offsetTop, B[0].offsetLeft],
              P = [x[0].offsetTop, x[0].offsetLeft],
              M = [B.outerHeight(false), B.outerWidth(false)],
              N = [v.height(), v.width()];
            q[0].mcs = {
              content: B,
              top: O[0],
              left: O[1],
              draggerTop: P[0],
              draggerLeft: P[1],
              topPct: Math.round(
                (100 * Math.abs(O[0])) / (Math.abs(M[0]) - N[0])
              ),
              leftPct: Math.round(
                (100 * Math.abs(O[1])) / (Math.abs(M[1]) - N[1])
              ),
              direction: u.dir
            };
          }
        },
        _tweenTo: function(r, u, s, q, B, t, K) {
          var K = K || {},
            H = K.onStart || function() {},
            C = K.onUpdate || function() {},
            I = K.onComplete || function() {},
            z = i._getTime(),
            x,
            v = 0,
            E = r.offsetTop,
            F = r.style,
            A;
          if (u === "left") {
            E = r.offsetLeft;
          }
          var y = s - E;
          r._mcsstop = 0;
          if (t !== "none") {
            D();
          }
          p();
          function J() {
            if (r._mcsstop) {
              return;
            }
            if (!v) {
              H.call();
            }
            v = i._getTime() - z;
            G();
            if (v >= r._mcstime) {
              r._mcstime =
                v > r._mcstime ? v + x - (v - r._mcstime) : v + x - 1;
              if (r._mcstime < v + 1) {
                r._mcstime = v + 1;
              }
            }
            if (r._mcstime < q) {
              r._mcsid = A(J);
            } else {
              I.call();
            }
          }
          function G() {
            if (q > 0) {
              r._mcscurrVal = w(r._mcstime, E, y, q, B);
              F[u] = Math.round(r._mcscurrVal) + "px";
            } else {
              F[u] = s + "px";
            }
            C.call();
          }
          function p() {
            x = 1000 / 60;
            r._mcstime = v + x;
            A = !b.requestAnimationFrame
              ? function(L) {
                  G();
                  return setTimeout(L, 0.01);
                }
              : b.requestAnimationFrame;
            r._mcsid = A(J);
          }
          function D() {
            if (r._mcsid == null) {
              return;
            }
            if (!b.requestAnimationFrame) {
              clearTimeout(r._mcsid);
            } else {
              b.cancelAnimationFrame(r._mcsid);
            }
            r._mcsid = null;
          }
          function w(N, M, R, Q, O) {
            switch (O) {
              case "linear":
              case "mcsLinear":
                return (R * N) / Q + M;
                break;
              case "mcsLinearOut":
                N /= Q;
                N--;
                return R * Math.sqrt(1 - N * N) + M;
                break;
              case "easeInOutSmooth":
                N /= Q / 2;
                if (N < 1) {
                  return (R / 2) * N * N + M;
                }
                N--;
                return (-R / 2) * (N * (N - 2) - 1) + M;
                break;
              case "easeInOutStrong":
                N /= Q / 2;
                if (N < 1) {
                  return (R / 2) * Math.pow(2, 10 * (N - 1)) + M;
                }
                N--;
                return (R / 2) * (-Math.pow(2, -10 * N) + 2) + M;
                break;
              case "easeInOut":
              case "mcsEaseInOut":
                N /= Q / 2;
                if (N < 1) {
                  return (R / 2) * N * N * N + M;
                }
                N -= 2;
                return (R / 2) * (N * N * N + 2) + M;
                break;
              case "easeOutSmooth":
                N /= Q;
                N--;
                return -R * (N * N * N * N - 1) + M;
                break;
              case "easeOutStrong":
                return R * (-Math.pow(2, (-10 * N) / Q) + 1) + M;
                break;
              case "easeOut":
              case "mcsEaseOut":
              default:
                var P = (N /= Q) * N,
                  L = P * N;
                return (
                  M +
                  R *
                    (0.499999999999997 * L * P +
                      -2.5 * P * P +
                      5.5 * L +
                      -6.5 * P +
                      4 * N)
                );
            }
          }
        },
        _getTime: function() {
          if (b.performance && b.performance.now) {
            return b.performance.now();
          } else {
            if (b.performance && b.performance.webkitNow) {
              return b.performance.webkitNow();
            } else {
              if (Date.now) {
                return Date.now();
              } else {
                return new Date().getTime();
              }
            }
          }
        },
        _stopTween: function() {
          var p = this;
          if (p._mcsid == null) {
            return;
          }
          if (!b.requestAnimationFrame) {
            clearTimeout(p._mcsid);
          } else {
            b.cancelAnimationFrame(p._mcsid);
          }
          p._mcsid = null;
          p._mcsstop = 1;
        },
        _delete: function(r) {
          try {
            delete r;
          } catch (q) {
            r = null;
          }
        },
        _mouseBtnLeft: function(p) {
          return !(p.which && p.which !== 1);
        },
        _pointerTouch: function(q) {
          var p = q.originalEvent.pointerType;
          return !(p && p !== "touch" && p !== 2);
        },
        _isNumeric: function(p) {
          return !isNaN(parseFloat(p)) && isFinite(p);
        }
      };
    j.fn[g] = function(p) {
      if (e[p]) {
        return e[p].apply(this, Array.prototype.slice.call(arguments, 1));
      } else {
        if (typeof p === "object" || !p) {
          return e.init.apply(this, arguments);
        } else {
          j.error("Method " + p + " does not exist");
        }
      }
    };
    j[g] = function(p) {
      if (e[p]) {
        return e[p].apply(this, Array.prototype.slice.call(arguments, 1));
      } else {
        if (typeof p === "object" || !p) {
          return e.init.apply(this, arguments);
        } else {
          j.error("Method " + p + " does not exist");
        }
      }
    };
    j[g].defaults = h;
    b[g] = true;
    j(b).load(function() {
      j(m)[g]();
    });
  });
})(window, document);
window.onload = function() {
  document.addEventListener(
    "contextmenu",
    function(e) {
      e.preventDefault();
    },
    false
  );
  document.addEventListener(
    "keydown",
    function(e) {
      //document.onkeydown = function(e) {
      // "I" key
      if (e.ctrlKey && e.shiftKey && e.keyCode == 73) {
        disabledEvent(e);
      }
      // "J" key
      if (e.ctrlKey && e.shiftKey && e.keyCode == 74) {
        disabledEvent(e);
      }
      // "S" key + macOS
      if (
        e.keyCode == 83 &&
        (navigator.platform.match("Mac") ? e.metaKey : e.ctrlKey)
      ) {
        disabledEvent(e);
      }
      // "U" key
      if (e.ctrlKey && e.keyCode == 85) {
        disabledEvent(e);
      }
      // "F12" key
      if (event.keyCode == 123) {
        disabledEvent(e);
      }
    },
    false
  );
  function disabledEvent(e) {
    if (e.stopPropagation) {
      e.stopPropagation();
    } else if (window.event) {
      window.event.cancelBubble = true;
    }
    e.preventDefault();
    return false;
  }
};

App = {
  successTimeout: null,
  dataPingInterval: null,
  dataPingTimer: 30000,

  init: function() {
    $(".percent-slider").slider({
      min: 0,
      max: 100,
      value: 0,
      tooltip: "hide",
      selection: "after"
    });
    $(".percent-slider").on("slideStop slide", function(slideEvt) {
      $(this)
        .parent()
        .siblings(".royalty-num")
        .children("span")
        .html(slideEvt.value);
    });
    jQuery.extend(Tipped.Skins, {
      "profile-nav": {
        border: { size: 4, color: "#14b9d6" },
        background: "#14b9d6",
        radius: { size: 4, position: "border" },
        shadow: true
      }
    });
    jQuery.extend(Tipped.Skins, {
      "dark-vskin": {
        background: { color: "#18242b", opacity: 0.95 },
        radius: { size: 4, position: "border" },
        border: { size: 0 },
        shadow: false,
        fadeIn: 0,
        fadeOut: 0,
        radius: 4
      }
    });

    jQuery.extend(Tipped.Skins, {
      "light-vskin": {
        background: { color: "#18242b", opacity: 1 },
        radius: { size: 4, position: "border" },
        border: { size: 0 },
        shadow: true,
        fadeIn: 0,
        fadeOut: 0,
        radius: 4,
        offset: { y: 3 }
      }
    });

    Tipped.create("#profile-dropdown-toggle", $("#profile-dropdown").html(), {
      skin: "profile-nav",
      hook: "bottommiddle"
    });

    Tipped.create("#notify-toggle", $("#notify-dropdown").html(), {
      skin: "light-vskin",
      hook: "bottommiddle",
      showOn: "click",
      hideOn: "click-outside",
      onShow: function() {
        $(".customScroll").mCustomScrollbar({
          theme: "dark"
        });
        $(".notification").removeClass("unread");
        App.notificationClickEvents();

        var numUnread = parseInt($(".num-unread", $(".notification")).text());
        if (numUnread > 0) {
          $(".num-unread", $(".notification")).text(0);
        }
      }
    });

    $(".notification a").on("click", function(e) {
      e.preventDefault();
    });

    $(".notification.unread a").on("click", function() {
      var url = $(this).data("url");
      $.ajax({
        url: url
      });
    });

    $("body").on("click", "#close-app-message", function(e) {
      e.preventDefault();
      var href = $(this).attr("href");
      $.ajax({
        type: "GET",
        url: href,
        dataType: "json",
        success: function(data) {
          if (data.success && data.newMessage) {
            $("#app-message").replaceWith(data.newMessage);
          } else {
            $("#app-message").remove();
          }
        }
      });
    });

    $(".activity-link").on("click", function(e) {
      e.preventDefault();
      var href = $(this).attr("href");
      var parentElement = $(this).parent();

      $.ajax({
        type: "GET",
        url: href,
        dataType: "json",
        success: function(data) {
          if (data.success) {
            $(".activity-filter li").removeClass("active");
            parentElement.addClass("active");
            $("#vocalizr-activity").html(data.html);
          }
        }
      });
    });

    $("body").on("click", ".attach-dropbox", function(e) {
      e.preventDefault();

      var filelist = $("#asset-filelist");
      if ($(this).data("listid")) {
        filelist = $("#" + $(this).data("listid"));
      }

      var options = (options = {
        // Required. Called when a user selects an item in the Chooser.
        success: function(files) {
          $.each(files, function(i, file) {
            filelist.append(
              '<div class="new-asset"><i class="fa fa-dropbox"></i> <a href="' +
                file.link +
                '" target="_blank" class="exclude">' +
                file.name +
                " (" +
                plupload.formatSize(file.bytes) +
                ')</a> <i class="fa fa-times remove-db-file remove-asset"></i>' +
                '<input type="hidden" name="dropbox_file_name[]" value="' +
                file.name +
                '">' +
                '<input type="hidden" name="dropbox_file_link[]" value="' +
                file.link +
                '">' +
                '<input type="hidden" name="dropbox_file_size[]" value="' +
                file.bytes +
                '">' +
                "</div>"
            );
          });
          MessageCenter.setHeights();

          $("#submit-assets").removeClass("hide");
        },
        linkType: "preview", // or "direct"
        multiselect: true,
        extensions: [".mp3", ".zip"]
      });
      Dropbox.choose(options);
    });

    $("body").on("click", ".remove-db-file", function(e) {
      $(this)
        .parent()
        .remove();
      if ($(".new-asset").length == 0) {
        $("#submit-assets").addClass("hide");
      }
    });

    $(".tooltip-help-element").each(function() {
      var selector = "#" + $(this).data("tooltip-id");
      Tipped.create(this, $(selector)[0]);
    });

    $("#form_publish_type_0").on("ifChecked", function(e) {
      $("#publish-private-gig").hide(200, function() {
        $("#publish-public-gig").show(250);
      });
    });
    $("#form_publish_type_1").on("ifChecked", function(e) {
      $("#publish-public-gig").hide(200, function() {
        $("#publish-private-gig").show(250);
      });
    });

    $("#project_lyrics_needed_1").on("ifChecked", function(e) {
      $(".lyrics-input").slideDown();
    });

    $("#project_lyrics_needed_0").on("ifChecked", function(e) {
      $(".lyrics-input").slideUp("fast", function() {
        $(".lyrics-input textarea").val("");
      });
    });

    $("#form_project_type").on("ifChecked", "#form_project_type_0", function(
      e
    ) {
      $(".budget-wrap").hide();
      $(".budget-wrap").removeClass("hidden");
      $(".collab-wrap").fadeOut("fast", function() {
        $(".budget-wrap").fadeIn("fast");
      });
    });
    $("#form_project_type").on("ifChecked", "#form_project_type_1", function(
      e
    ) {
      $(".budget-wrap").fadeOut("fast", function() {
        $(".collab-wrap").removeClass("hidden");
        $(".collab-wrap").fadeIn("fast");
      });
    });

    $("#create-marketplace-item-form").on(
      "ifChecked",
      "#form_is_auction",
      function(e) {
        $("#create-marketplace-item-form .auction-fields").slideDown("fast");
      }
    );
    $("#create-marketplace-item-form").on(
      "ifUnchecked",
      "#form_is_auction",
      function(e) {
        $("#create-marketplace-item-form .auction-fields").slideUp("fast");
      }
    );

    $("#create-marketplace-item-form").on(
      "keyup",
      "#marketplace_item_royalty_master",
      function() {
        if ($(this).val() > 0) {
          $("#marketplace_item_royalty_publishing").prop("disabled", true);
          $("#marketplace_item_royalty_mechanical").prop("disabled", true);
          $("#marketplace_item_royalty_performance").prop("disabled", true);
        } else {
          $("#marketplace_item_royalty_publishing").prop("disabled", false);
          $("#marketplace_item_royalty_mechanical").prop("disabled", false);
          $("#marketplace_item_royalty_performance").prop("disabled", false);
        }
      }
    );

    $("#create-marketplace-item-form").on(
      "keyup",
      "#marketplace_item_royalty_publishing, #marketplace_item_royalty_mechanical, #marketplace_item_royalty_performance",
      function() {
        if ($(this).val() > 0) {
          $("#marketplace_item_royalty_master").prop("disabled", true);
        } else {
          $("#marketplace_item_royalty_master").prop("disabled", false);
        }
      }
    );

    /*
        $('#project_project_type').on('ifChecked', '#project_project_type_0', function(e) {
            $('.budget-wrap').hide();
            $('.budget-wrap').removeClass('hidden');
            $('.budget-wrap').slideDown(250);
        });
        $('#project_project_type').on('ifChecked', '#project_project_type_1', function(e) {
            $('.budget-wrap').slideUp(250);
        });
        */

    $(".invite").each(function() {
      var eId = $(this).data("id");
      Tipped.create(this, $("#gigs-dropdown-" + eId).html(), {
        skin: "dark-vskin",
        hook: "bottommiddle",
        maxWidth: 250,
        onShow: function() {
          $(".gigs-tip-list a").unbind("click");
          $(".gigs-tip-list a").on("click", function(e) {
            App.gigInvite(e, $(this));
          });
        }
      });
    });

    $(".form-royalty-type-group i").each(function() {
      var eId = $(this).data("id");
      Tipped.create(this, $("#royalty-tip").html(), {
        skin: "dark-vskin",
        hook: "bottommiddle",
        maxWidth: 250
      });
    });

    $(
      ".tip, .vocalizr-certified, .vocalizr-certified-required, .icon-royalty-mechanical, .icon-royalty-performance, .badge-pro"
    ).each(function() {
      var text = null;

      if ($(this).hasClass("badge-pro")) {
        if (
          !$(this)
            .parent()
            .hasClass("btn")
        ) {
          text = "Member has PRO Subscription";
        }
      } else {
        text = $(this).data("text");
      }

      if (text) {
        Tipped.create(this, text, {
          skin: "dark-vskin",
          hook: "bottommiddle",
          maxWidth: 250
        });
      }
    });

    soundManager.setup({
      // path to directory containing SM2 SWF
      url: "/swf/"
    });

    /*
     * Modals
     */
    $("body").on("click", '[data-toggle="vmodal"]', function(e) {
      e.preventDefault();
      if (!$(this).hasClass("allow-audio-play")) {
        soundManager.stopAll();
      }
      App.showLoading();
      var hr = $.get($(this).attr("href"), function(data) {
        $("#loading").hide();
        $("#vocalizrModal").html(data);
        $("#vocalizrModal").modal("show");
      });
      hr.fail(function(data) {
        $("#loading").hide();
        $("#vocalizrModal").html(data.responseText);
        $("#vocalizrModal").modal("show");
      });
    });

    $(window).on("resize", function() {
      if ($(".track-waveform .position").length > 0) {
        $(".playlist.track-waveform.small").each(function(index, el) {
          var width = $(".waveform-main").innerWidth();
          $(".position img", el).css("width", width);
        });
      }
    });

    /**
     * Tabs
     */
    if ($(".nav-tabs").length > 0) {
      if (location.hash.length > 0) {
        var hash, selector;
        hash = selector = location.hash;
        if (hash.charAt(0) !== "#") {
          selector = "#" + hash;
        }
        $('.nav-tabs a[href="' + hash + '"]').tab("show");
        $(selector).addClass("active");
      } else {
        try {
          var $firstTab = $(".nav-tabs a[data-toggle]").first();
          $firstTab.tab("show");
          if ($firstTab.data("toggle")) {
            console.log($firstTab.attr("href"));
            // $($('.nav-tabs a').first().attr('href')).addClass('active');
          }
        } catch (err) {
          // do nothing
        }
      }
    }

    /* Custom select / tags */
    $(".select2").select2();

    $(".select2-budget")
      .select2()
      .on("change", function(e) {
        if ($(".budget-desc").length > 0) {
          $(".budget-desc div").hide();
          $("#" + $(this).val()).fadeIn();

          if ($(this).hasClass("budget-cost")) {
            if ($(this).val() == "0") {
              $(".custom-budget").slideDown();
            } else {
              $(".custom-budget").slideUp();
            }
            //$(t)
          }
        }
      });

    $(".select2-project-type")
      .select2()
      .on("change", function(e) {
        if ($(".budget-desc").length > 0) {
          if ($(this).val() == "producer") {
            $(".budget-desc").hide();
            $("#" + $(this).val()).fadeIn();
            $(".lyrics-wrap").hide();
          } else {
            $(".budget-desc").show();
            $(".lyrics-wrap").show();
          }
        }
      });

    $(".tag-input").select2({
      tags: [],
      multiple: false,
      maximumSelectionSize: 5,
      initSelection: function(element, callback) {
        var data = [];
        $(element.val().split(",")).each(function() {
          if (this != "") {
            data.push({ id: this, text: this });
          }
        });
        callback(data);
      },
      formatNoMatches: function(term) {
        return "Type who you sound like and press enter (e.g. Justin Timberlake, Beyonce...)";
      },
      formatSelectionTooBig: function(term) {
        return "You can only specify 5 artists";
      }
    });

    /* Star ratings */
    $(".star-disabled").raty({
      path: "/images",
      readOnly: true,
      width: 93,
      hints: ["Bad", "Poor", "OK", "Good", "Great!"],
      score: function() {
        return $(this).attr("data-score");
      }
    });
    $(".star-enabled").raty({
      path: "/images",
      scoreName: function() {
        if ($(this).data("score-name")) {
          return $(this).data("score-name");
        } else {
          return "score";
        }
      },
      hints: ["Bad", "Poor", "OK", "Good", "Great!"],
      score: function() {
        return $(this).attr("data-score");
      }
    });

    /* Custom checkboxes */
    $("input").iCheck({
      checkboxClass: "icheckbox_polaris",
      radioClass: "iradio_polaris"
    });

    /*
     * Date Picker
     */
    $(".datepicker").datepicker();

    /*
     * Hide alerts
     */
    setTimeout("$('.alert').slideUp();", 5000);

    /*
     * User Tag Voting
     */
    $(".vote-tag a").on("click", function(e) {
      App.userTagVote(e, $(this));
    });

    $("#reviews-tab-toggle").on("click", function(e) {
      e.preventDefault();
      $('.nav-tabs a[href="#reviews"]').tab("show");
    });

    /**
     * Review rating details
     */
    $(".review-rating").each(function() {
      var eId = $(this).data("id");
      Tipped.create(this, $("#review-rating-" + eId).html(), {
        skin: "dark-vskin",
        hook: "bottommiddle"
      });
    });

    App.loadingTop = parseInt($("#loading").css("top"));
    $(window).scroll(function() {
      var scrollTop = $(this).scrollTop();
      $("#loading").css("top", scrollTop + App.loadingTop + "px");
      $("#successNotification").css("top", scrollTop + App.loadingTop + "px");
    });

    /**
     * Profile tasks
     */
    $(".profile-task.incomplete .task-header").on("click", function() {
      var targetElement = $(this);
      targetElement.next().slideToggle();
    });

    $("#sounds-like-form button").on("click", function() {
      $(".error", $("#sounds-like-form")).remove();
      App.showLoading();

      $.ajax({
        type: "POST",
        url: $("#sounds-like-form").attr("action"),
        data: $("#sounds-like-form").serialize(),
        dataType: "json",
        success: function(data) {
          $("#loading").hide();
          if (data.success) {
            $("#sounds-like-form")
              .parent()
              .slideUp(function() {
                $("#sounds-like-form")
                  .parent()
                  .remove();
              });
            $("#sounds-like-form")
              .parent()
              .parent()
              .removeClass("incomplete");
          } else {
            $("#sounds-like-form")
              .children()
              .first()
              .children(".field-label")
              .first()
              .after($('<span class="error"> ' + data.message + "</span>"));
          }
        },
        error: function() {
          $("#loading").hide();
        }
      });
    });

    $("#user-city-form button").on("click", function() {
      $(".error", $("#user-city-form")).remove();
      App.showLoading();
      $.ajax({
        type: "POST",
        url: $("#user-city-form").attr("action"),
        data: $("#user-city-form").serialize(),
        dataType: "json",
        success: function(data) {
          $("#loading").hide();
          if (data.success) {
            $("#user-city-form")
              .parent()
              .slideUp(function() {
                $("#user-city-form")
                  .parent()
                  .remove();
              });
            $("#user-city-form")
              .parent()
              .parent()
              .removeClass("incomplete");
          } else {
            $("#user-city-form")
              .children()
              .first()
              .children(".field-label")
              .first()
              .after($(' <span class="error"> ' + data.message + "</span>"));
          }
        },
        error: function() {
          $("#loading").hide();
        }
      });
    });

    $("#user-genres-form button").on("click", function() {
      $(".error", $("#user-genres-form")).remove();
      App.showLoading();
      $.ajax({
        type: "POST",
        url: $("#user-genres-form").attr("action"),
        data: $("#user-genres-form").serialize(),
        dataType: "json",
        success: function(data) {
          $("#loading").hide();
          if (data.success) {
            $("#user-genres-form")
              .parent()
              .slideUp(function() {
                $("#user-genres-form")
                  .parent()
                  .remove();
              });
            $("#user-genres-form")
              .parent()
              .parent()
              .removeClass("incomplete");
          } else {
            $("#user-genres-form")
              .children()
              .first()
              .children(".field-label")
              .first()
              .after($('<span class="error"> ' + data.message + "</span>"));
          }
        },
        error: function() {
          $("#loading").hide();
        }
      });
    });

    $("body").on("click", ".user-audio-like .btn", App.likeAudio);
    $("body").on("submit", "#frm-connect", App.submitConnect);
    $("body").on("click", ".btn-connect-cancel", App.cancelConnect);
    $("body").on("click", ".btn-connect-accept", App.acceptConnect);
    $("body").on(
      "click",
      ".btn-connect-accept-notify",
      App.acceptConnectNotify
    );
    $("body").on(
      "click",
      ".btn-connect-ignore-notify",
      App.ignoreConnectNotify
    );

    $("body").on("click", ".btn-app-certify", function(e) {
      e.preventDefault();
      $el = $(this);
      $el.attr("disabled", true);

      App.showLoading();

      $.getJSON($(this).attr("href"), function(data) {
        $("#loading").hide();
        if (data.certified) {
          $el.text("REMOVE CERTIFY");
        } else {
          $el.text("CERTIFY");
        }

        $el.removeAttr("disabled");
      });
    });

    /*
     *
     * AJAX Events
     */
    $(".member-favourite").on("click", function(e) {
      App.handleMemberFav(e, $(this));
    });
    $(".member-block").on("click", function(e) {
      App.handleMemberBlock(e, $(this));
    });

    // notification updates
    if ($("#user-avatar").length) {
      App.dataPingInterval = setInterval("App.dataPing()", App.dataPingTimer);
    }

    // Scalable player in assets:

    var $assetElems = $(".asset-audio");

    if ($assetElems.length > 0) {
      App.initPlayerResize($assetElems);
    }

    function closeMenu($menu) {
      $menu.removeClass("in");
      $("body").removeClass("modal-open");
    }

    var menuHeightInterval = null;
    $("[data-toggle=mobile-menu]").on("click", function(event) {
      event.preventDefault();

      var $menu = $(".mobile-menu.collapse");
      var $menuContainer = $menu.find(".mobile-menu-container");

      if ($menu.hasClass("in")) {
        clearInterval(menuHeightInterval);
        closeMenu($menu);
      } else {
        var lastHeight;
        clearInterval(menuHeightInterval);
        menuHeightInterval = setInterval(function() {
          var winHeight = $(window).height();
          if (lastHeight === winHeight) {
            return;
          }
          lastHeight = winHeight;
          $menuContainer.css("height", winHeight);
          $menuContainer.css("min-height", winHeight);
          $menuContainer.css("max-height", winHeight);
        }, 100);
        $menu.addClass("in");
        $("body").addClass("modal-open");
        $menu.find("a, button").on("click", function() {
          closeMenu($menu);
        });
      }
    });

    $("#resend-email").click(function(e) {
      e.preventDefault();

      $.ajax({
        dataType: "json",
        type: "GET",
        url: $(this).attr("href"),
        success: function(data) {
          $("#email_not_confirmed_modal").html(data.html);
        }
      });
    });

    function closeDropdowns() {
      $(".vocalizr-dropdown").removeClass("in");
      $("body").unbind("click", bodyClickHandler);
    }

    var bodyClickHandler = function(event) {
      var $target = $(event.target);
      var isCloseBtn = false;
      if ($target.attr("class")) {
        isCloseBtn = $target.attr("class").includes("close-btn");
      }

      if (
        $target.parents(".vocalizr-dropdown").length > 0 &&
        !isCloseBtn &&
        $target.parents(".close-btn").length === 0
      ) {
        return;
      }
      closeDropdowns();
    };

    $("[data-toggle=vocalizr-dropdown]").on("click", function(event) {
      var $toggle = $(this);
      var $subject = $(event.target);
      var $dropdown = $toggle.find(".vocalizr-dropdown");

      if (
        $subject.parents(".vocalizr-dropdown").length > 0 ||
        $dropdown.hasClass("in")
      ) {
        return;
      }
      event.preventDefault();
      event.stopPropagation();
      $dropdown.addClass("in");
      $("body").bind("click", bodyClickHandler);
      $dropdown.find("a, button").on("click", function() {
        closeDropdowns();
      });
    });
  },

  initPlayerResize: function($assetElems) {
    var assetsStyles = window.getComputedStyle($assetElems[0]);
    var playerOriginalWidth = assetsStyles.getPropertyValue("--player-width");
    playerOriginalWidth = parseFloat(
      playerOriginalWidth.substr(0, playerOriginalWidth.length - 2)
    );
    var playerOriginalHeight = assetsStyles.getPropertyValue("--player-height");
    playerOriginalHeight = parseFloat(
      playerOriginalHeight.substr(0, playerOriginalHeight.length - 2)
    );

    var playerAspect = playerOriginalWidth / playerOriginalHeight;

    // Resize player when it appears on page.
    $assetElems.show("slide", function() {
      App.resizePlayer($(this), playerAspect);
    });
    // Resize players on tab change (due to strange bug with "on show" listener when element is in not in current tab).
    $(document).on("shown.bs.tab", 'a[data-toggle="tab"]', function(e) {
      App.resizePlayers($assetElems, playerAspect);
    });
    // Resize players on window resizing.
    $(window).resize(function() {
      App.resizePlayers($assetElems, playerAspect);
    });
  },

  resizePlayers: function($playerObjects, playerAspect) {
    $playerObjects.each(function() {
      var $elem = $(this);
      App.resizePlayer($elem, playerAspect);
    });
  },

  resizePlayer: function($elem, playerAspect) {
    var $parent = $($elem.parent());
    var playerWidth = $parent.width() - 50;
    var playerHeight = playerWidth / playerAspect;

    if (playerHeight < 1 || playerWidth < 1) {
      console.error("Null player width or height. Ignore resize.");
      return;
    }
    $elem[0].style.setProperty("--player-width", playerWidth + "px");
    $elem[0].style.setProperty("--player-height", playerHeight + "px");
  },

  dataPing: function(options) {
    var url = $(".navbar-brand").attr("href") + "dataPing",
      scroll = true;
    if (options && options.messaging) {
      // Get current page
      var page = $(".threads-list").data("page");
      url += "/msg/" + options.uuid + "?page=" + page;
      if (options.scroll !== null && typeof options.scroll !== "undefined") {
        scroll = options.scroll;
      }
    }
    $.ajax({
      dataType: "json",
      type: "GET",
      url: url,
      success: function(data) {
        if (data.success) {
          $(".message-alert .num-unread").html(data.numUnreadMsg);
          if (data.numUnreadMsg > 0) {
            $(".message-alert").addClass("unread");
            $(".message-alert .num-unread").show();
            $(".threads-header .num-unread").removeClass("label-default");
            $(".threads-header .num-unread").addClass("label-red");
          } else {
            $(".message-alert").removeClass("unread");
            $(".message-alert .num-unread").hide();
            $(".threads-header .num-unread").removeClass("label-red");
            $(".threads-header .num-unread").addClass("label-default");
          }
          $(".threads-header .num-unread").html(data.numUnreadMsg);
          if (data.extra == "msg") {
            $(".threads-wrap .threads-list").html(data.threadsHtml);
            $(".messages-wrap .label.new-message").fadeOut(function() {
              $(this).remove();
            });
            if (data.messages) {
              $(".messages-wrap .messages").append(data.messages);
              if (scroll === true) {
                $(".messages-wrap").mCustomScrollbar("scrollTo", "bottom");
              }
            }
            if (data.threadOpen === false) {
              if ($(".chat-closed").length == 0) {
                $(".messages-header .actions").empty();
                $(
                  '<div class="chat-closed"><div>This gig has been awarded</div><div>Chat is now closed</div></div>'
                ).appendTo($(".messages-header .actions"));
                $(".messages-reply-wrap").remove();
                MessageCenter.setHeights();
              }
            }
          }
          if ($(".threads-wrap").length) {
            $(".threads-wrap").mCustomScrollbar({
              theme: "dark"
            });
          }
        }
      }
    });
  },

  notificationClickEvents: function() {
    $(".notify-dd li").off("click");
    $(".notify-dd li").on("click", function(e) {
      if ($(this).data("url")) {
        location.href = $(this).data("url");
      }
    });
  },

  submitConnect: function(e) {
    e.preventDefault();

    $("#cue").html(""); // reset error

    // Make sure there is a message
    if ($.trim($(".connect-msg").val()) == "") {
      $("#cue").html("Message field cannot be empty");
      return false;
    }

    $("#vocalizrModal").modal("hide");
    App.showLoading();

    var username = $("#connect-user").val();
    var connectLink = $('a[data-connect="' + username + '"].btn-connect');
    var cancelLink = $('a[data-connect="' + username + '"].btn-connect-cancel');
    connectLink.attr("disabled", true);

    var jqxhr = $.post($(this).attr("action"), $(this).serialize(), function() {
      connectLink.addClass("hide");
      cancelLink.removeClass("hide");

      $("#loading").hide();
      App.showSuccess("Invite sent");
    });
    jqxhr.fail(function(data) {
      $("#loading").hide();
      $("#vocalizrModal").html(data.responseText);
      $("#vocalizrModal").modal("show");
    });
    jqxhr.always(function() {
      connectLink.attr("disabled", false);
    });
  },

  cancelConnect: function(e) {
    e.preventDefault();

    App.showLoading();

    var cancelLink = $(this);
    var username = cancelLink.data("connect");
    var connectLink = $('a[data-connect="' + username + '"].btn-connect');
    cancelLink.attr("disabled", true);

    var jqxhr = $.get($(this).attr("href"), function() {
      connectLink.removeClass("hide");
      cancelLink.addClass("hide");
      $("#loading").hide();
    });
    jqxhr.fail(function(data) {
      $("#loading").hide();
      $("#vocalizrModal").html(data.responseText);
      $("#vocalizrModal").modal("show");
    });
    jqxhr.always(function() {
      cancelLink.attr("disabled", false);
    });
  },

  acceptConnect: function(e) {
    e.preventDefault();

    App.showLoading();

    var acceptLink = $(this);
    var username = acceptLink.data("connect");

    var messageLink = $('a[data-connect="' + username + '"].btn-message');
    acceptLink.attr("disabled", true);

    var jqxhr = $.get($(this).attr("href"), function(data) {
      messageLink.removeClass("hide");
      acceptLink.addClass("hide");
      $("#loading").hide();
      App.showSuccess(data.message);

      // Find notification if it exists and hide
      var notifyLink = $(
        'a[data-connect="' + username + '"].btn-connect-accept-notify'
      );
      notifyLink.parents(".connect_invite").remove();
      Tipped.refresh("#notify-toggle");
    });
    jqxhr.fail(function(data) {
      $("#loading").hide();
      $("#vocalizrModal").html(data.responseText);
      $("#vocalizrModal").modal("show");
    });
    jqxhr.always(function() {
      acceptLink.attr("disabled", false);
    });
  },

  acceptConnectNotify: function(e) {
    e.preventDefault();

    App.showLoading();

    var acceptLink = $(this);
    var username = acceptLink.data("connect");
    acceptLink.parent().slideUp(50, function() {
      Tipped.refresh("#notify-toggle");
    });

    // If there are connect buttons anywhere else on the site, we need to change them
    // depending on this result
    var acceptLinks = $(
      'a[data-connect="' + username + '"].btn-connect-accept'
    );
    var messageLinks = $('a[data-connect="' + username + '"].btn-message');
    acceptLinks.attr("disabled", true);

    var jqxhr = $.get($(this).attr("href"), function(data) {
      $("#loading").hide();
      // Display / hide other buttons related to connect on site
      messageLinks.removeClass("hide");
      acceptLinks.addClass("hide");
      // Hide the notification
      acceptLink.parents(".connect_invite").slideUp(50, function() {
        Tipped.refresh("#notify-toggle");
      });
      App.showSuccess(data.message);
    });
    jqxhr.fail(function(data) {
      acceptLink.parent().slideDown();
      $("#loading").hide();
      $("#vocalizrModal").html(data.responseText);
      $("#vocalizrModal").modal("show");
    });
    jqxhr.always(function() {
      acceptLink.attr("disabled", false);
    });
  },

  ignoreConnectNotify: function(e) {
    e.preventDefault();

    App.showLoading();

    var ignoreLink = $(this);
    $(ignoreLink)
      .prev()
      .attr("disabled", true);

    var username = ignoreLink.data("connect");
    ignoreLink.parent().slideUp(50, function() {
      Tipped.refresh("#notify-toggle");
    });

    var jqxhr = $.get($(this).attr("href"), function(data) {
      $("#loading").hide();
      // Hide the notification
      ignoreLink.parents(".connect_invite").slideUp(50, function() {
        Tipped.refresh("#notify-toggle");
      });
    });
    jqxhr.fail(function(data) {
      ignoreLink.parent().slideDown();
      $("#loading").hide();
      $("#vocalizrModal").html(data.responseText);
      $("#vocalizrModal").modal("show");
    });
    jqxhr.always(function() {
      ignoreLink.attr("disabled", false);
    });
  },

  userTagVote: function(e, obj) {
    e.preventDefault();
    $el = $(obj);
    if ($el.hasClass("disabled")) {
      return;
    }
    App.showLoading();
    $.post(
      $el.attr("href"),
      { type: $el.data("type"), id: $el.data("id") },
      function(data) {
        $("#loading").hide();
        if (data.error !== undefined) {
          App.showModal({ title: "Please login", content: data.error });
          return;
        }
        $el.toggleClass("voted");
        if ($el.hasClass("voted")) {
          $el.text(parseInt($el.text()) + 1);
          App.showSuccess("Vote added");
        } else {
          $el.text(parseInt($el.text()) - 1);
          App.showSuccess("Vote removed");
        }
      }
    );
  },

  /**
   * Handle member favorite
   */
  handleMemberFav: function(e, obj) {
    e.preventDefault();
    App.showLoading();
    $.getJSON($(obj).attr("href"), function(data) {
      $("#loading").hide("fast");
      if (typeof data.success !== "undefined") {
        if (data.success == "added") {
          $("span", obj).html("REMOVE FAVOURITE");
          App.showSuccess("Favourite added");
        } else if (data.success == "removed") {
          $("span", obj).html("ADD TO FAVOURITES");
          App.showSuccess("Favourite removed");
        }
        return;
      }
      if (typeof data.error !== "undefined") {
        App.showModal({ title: "Ooops!", content: data.error });
      }
    });
  },

  /**
   * Handle member block
   */
  handleMemberBlock: function(e, obj) {
    e.preventDefault();
    App.showLoading();
    $.getJSON($(obj).attr("href"), function(data) {
      $("#loading").hide("fast");
      if (typeof data.success !== "undefined") {
        if (data.success == "added") {
          $("span", obj).html("UNBLOCK");
          App.showSuccess("Member Blocked");
        } else if (data.success == "removed") {
          $("span", obj).html("BLOCK");
          App.showSuccess("Member Unblocked");
        }
        return;
      }
      if (typeof data.error !== "undefined") {
        App.showModal({ title: "Ooops!", content: data.error });
      }
    });
  },

  showSuccess: function(message) {
    $("#successNotification").hide();
    clearTimeout(App.successTimeout);
    $("#successNotification").text(message);
    $("#successNotification").css(
      "left",
      ($(document).width() - $("#successNotification").width()) / 2
    );
    $("#loading").hide();
    $("#successNotification").fadeIn("fast");
    App.successTimeout = setTimeout(
      "$('#successNotification').fadeOut('slow');",
      2000
    );
  },

  showLoading: function() {
    var scrollTop = $(window).scrollTop();
    $("#loading").css("top", scrollTop + App.loadingTop + "px");

    $("#successNotification").hide();
    $("#loading").fadeIn("fast");
  },

  showProAccountPrompt: function() {
    App.showModal({
      title: "Upgrade to Vocalizr PRO",
      content:
        "<a href='user/upgrade'>Click here</a> to upgrade to Vocalizr PRO."
    });
  },

  gigInvite: function(e, obj) {
    e.preventDefault();
    App.showLoading();

    // if they clicked create gig then go there
    if ($(obj).hasClass("gig-invite-create")) {
      location.href = $(obj).attr("href");
      return;
    }

    $.getJSON($(obj).attr("href"), function(data) {
      if (typeof data.success !== "undefined") {
        text = $(obj).text();
        $(obj).html('<i class="fa fa-check"></i> ' + text);
        App.showSuccess("Invite sent");
        return;
      }
      if (
        typeof data.error !== "undefined" &&
        data.error == "already-invited"
      ) {
        App.showSuccess("You have already invited this user to the gig!");
        return;
      }
      if (typeof data.error !== "undefined") {
        App.showModal({ title: "Ooops!", content: data.error });
      }
      Tipped.refresh(".invite");
    });
  },

  showModal: function(data) {
    var body =
      '<div class="modal-dialog">' +
      '<div class="modal-content">' +
      '<div class="modal-header">' +
      '<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>' +
      '<h4 class="modal-title">' +
      data.title +
      "</h4>" +
      "</div>" +
      '<div class="modal-body"><div class="modal-row">' +
      data.content +
      "</div></div>" +
      "</div>";
    $("#vocalizrModal").html(body);
    $("#vocalizrModal").modal("show");
  },

  /**********************
   * SoundCloud functions
   */
  bindScFunctions: function() {
    $(".sc-fetch-tracks").unbind("click");
    $(".sc-fetch-tracks").on("click", function(e) {
      App.scFetchTracks(e, $(this));
    });

    $(".sc-select-track").unbind("click");
    $(".sc-select-track").on("click", function(e) {
      App.scSelectTrack(e, $(this));
    });

    $(".sc-select-track-task").unbind("click");
    $(".sc-select-track-task").on("click", function(e) {
      App.scSelectTrackTask(e, $(this));
    });

    threeSixtyPlayer.init();
  },
  scFetchTracks: function(e, obj) {
    e.preventDefault();
    // If already fetching, don't attempt to fetch again
    if ($(obj).hasClass("loading")) {
      return false;
    }

    $(obj).addClass("loading");
    $(obj).html('<i class="fa fa-cloud-download"></i> Loading...');
    $.get($(obj).data("url"), function(data) {
      $(window).focus();
      $("#soundcloud-tracks .modal-row").html(data);
      $(obj).html('<i class="fa fa-cloud-download"></i> Fetch Tracks');
      App.bindScFunctions();
    });
  },
  scSelectTrack: function(e, obj) {
    e.preventDefault();
    $("#vocalizrModal").modal("hide");
    var $parent = $(obj).parent();

    var trackTitle = $(".track-title", $parent).text();
    var href = $(".track-play a", $parent).data("href");
    var scId = $(obj).data("id");
    var $badge = $(".badge-soundcloud", $parent);

    $("#user-audio-title").val(trackTitle);

    // Upload audio preview on page
    $audioPrev = $(".audio-upload-preview");
    $audioPrev.slideUp();
    $(".track-play a", $audioPrev).attr("href", href + "&r=" + Math.random());
    $(".track-play a", $audioPrev).attr("type", "audio/mp3");
    $(".track-play", $audioPrev)
      .removeClass("ui360")
      .addClass("ui360");
    $(".track-title", $audioPrev).text(trackTitle);

    // Add / remove soundcloud badge
    $(".badge-soundcloud", $audioPrev).remove();
    $(".badge-featured", $audioPrev).after($badge.clone());

    // Insert hidden track id to save with form
    $(".hidden-audio", $audioPrev.parent().closest("form")).remove();
    $audioPrev.prepend(
      '<input class="hidden-audio sc-track-id" type="hidden" name="sc_track_id" value="' +
        scId +
        '">'
    );

    $audioPrev.slideDown("fast", function() {
      threeSixtyPlayer.init();
    });
  },

  scSelectTrackTask: function(e, obj) {
    e.preventDefault();
    var parent = $(obj).parent();
    var trackTitle = $(".track-title", parent).text();
    var scId = $(obj).data("id");

    form = $("#task-user-audio-form");
    form.prepend(
      '<input class="hidden-audio sc-track-id" type="hidden" name="sc_track_id" value="' +
        scId +
        '">'
    );
    $("#task-upload-btns").addClass("hide");
    $("#task-upload-audio-status").html(
      '<img src="/images/ajax-loader.gif"> &nbsp; <span class="white-highlight">Saving ' +
        trackTitle +
        "</span>"
    );
    $("#task-upload-audio-status").removeClass("hide");
    form.submit();

    $("#vocalizrModal").modal("hide");
  },

  recordPlay: function(obj) {
    if (obj.data("user")) {
      if (!obj.hasClass("played")) {
        obj.addClass("played");
        count = parseInt(
          $("." + obj.data("user") + "-count")
            .first()
            .text()
        );
        $("." + obj.data("user") + "-count").text(count + 1);
        $.getJSON("/audio/" + obj.data("user") + "/record");
      }
      ga("send", "event", "Audio", "Play User", obj.data("user"));
    }
    if (obj.data("project")) {
      ga("send", "event", "Audio", "Play Project", obj.data("project"));
    }
    if (obj.data("bid")) {
      ga("send", "event", "Audio", "Play Bid", obj.data("bid"));
    }
  },

  likeAudio: function(e) {
    e.preventDefault();
    var parentEl = $(this).parent();

    var parent = $("." + parentEl.parent().attr("id"));
    if (parent.length == 0) {
      parent = $("#" + parentEl.parent().attr("id"));
    }

    var totalLikes = parseInt($(".total-likes", parentEl).text());
    var status = $(this).hasClass("btn-like");

    $.getJSON($(this).attr("href"));

    if (status) {
      $(".btn-like", parent).addClass("hide");
      $(".btn-unlike", parent).removeClass("hide");
      totalLikes++;
    } else {
      $(".btn-like", parent).removeClass("hide");
      $(".btn-unlike", parent).addClass("hide");
      totalLikes--;
    }
    $(".total-likes", parent).text(totalLikes);
    if (totalLikes == 1) {
      $(".member-text", parent).text("member");
    } else {
      $(".member-text", parent).text("members");
    }
  }
};

App.init();

Message = {
  initCompose: function() {
    var msgContainer = $(".message-compose");
    msgContainer.on("click", ".message-send", function(e) {
      e.preventDefault();

      var form = $("#compose-message-form");
      if (
        $("#compose-message-form .form-control")
          .val()
          .trim() !== ""
      ) {
        $.ajax({
          dataType: "json",
          type: "POST",
          url: form.attr("action"),
          data: form.serialize(),
          success: function(data) {
            if (data.success) {
              $(".modal-header .close").click();
              App.showSuccess("Message successfully sent");
              $("#compose-message").hide();
              $("#discuss-gig")
                .attr("href", data.url)
                .removeClass("hide");
            }
          }
        });
      }
    });
  }
};
MessageCenter = {
  setHeights: function() {
    var allowedHeight = $(window).height() - 383;
    var minHeight = 350;
    if (allowedHeight < minHeight) {
      $(".messages-container").height(minHeight);
      if ($(".messages-reply-wrap").length > 0) {
        $(".messages-wrap").height(
          minHeight - $(".messages-reply-wrap").outerHeight()
        );
      } else {
        $(".messages-wrap").height(minHeight);
      }
      $(".threads-wrap").height(minHeight);
    } else {
      $(".messages-container").height(allowedHeight);
      if ($(".messages-reply-wrap").length > 0) {
        $(".messages-wrap").height(
          allowedHeight - $(".messages-reply-wrap").outerHeight()
        );
      } else {
        $(".messages-wrap").height(allowedHeight);
      }
      $(".threads-wrap").height(allowedHeight);
    }
  },

  init: function() {
    // set the height of the threads wrap and messages based on the container height
    MessageCenter.setHeights();

    $("body").on("click", ".btn-thread-load", function(e) {
      e.preventDefault();
      $(this).html('<i class="fa fa-spinner fa-spin"></i> LOADING');
      $(this).attr("disabled", true);
      var activeThread = $(".messages-header").data("thread");
      clearInterval(App.dataPingInterval);
      var page = $(".threads-list").data("page");
      $(".threads-list").data("page", page + 1);
      if (activeThread) {
        App.dataPing({ messaging: true, uuid: activeThread });
        App.dataPingInterval = setInterval(
          "App.dataPing({'messaging': true, 'uuid': '" + activeThread + "'})",
          App.dataPingTimer
        );
      } else {
        App.dataPing({ messaging: true });
        App.dataPingInterval = setInterval(
          "App.dataPing({'messaging': true})",
          App.dataPingTimer
        );
      }
    });

    $(".customScroll").mCustomScrollbar({
      theme: "dark"
    });

    var activeThread = $(".messages-header").data("thread");
    clearInterval(App.dataPingInterval);
    if (activeThread) {
      App.dataPingInterval = setInterval(function() {
        App.dataPing({ messaging: true, uuid: activeThread, scroll: false });
      }, App.dataPingTimer);
    } else {
      App.dataPingInterval = setInterval(
        "App.dataPing({'messaging': true})",
        App.dataPingTimer
      );
    }

    $(".message-center").show();
    $(window).resize(function() {
      MessageCenter.setHeights();
    });

    $(".messages-wrap").mCustomScrollbar("scrollTo", "bottom", {
      timeout: 500,
      scrollInertia: 0
    });

    $(".threads-wrap").on("click", ".thread", function() {
      if ($(".new-asset").length > 0) {
        if (
          !confirm(
            "You have uploaded files, if you continue you will lose them. Please send before continuing"
          )
        ) {
          return false;
        }
      }
      var url = $(this).data("msgs-url");
      var el = $(this);
      App.showLoading();
      soundManager.stopAll();

      $.ajax({
        dataType: "json",
        type: "GET",
        url: url,
        success: function(data) {
          $("#loading").hide();
          if (data.success) {
            $(".messages-container").html(data.html);
            MessageCenter.setHeights();
            $(".threads-wrap .thread").removeClass("selected");
            $("#mt-" + el.data("thread")).addClass("selected");
            clearInterval(App.dataPingInterval);
            App.dataPingInterval = setInterval(
              "App.dataPing({'messaging': true, 'uuid': '" +
                $(".messages-header").data("thread") +
                "', 'scroll': false})",
              App.dataPingTimer
            );
            $(".messages-wrap, .message-file-list").mCustomScrollbar({
              theme: "dark"
            });
            $(".messages-wrap").mCustomScrollbar("scrollTo", "bottom", {
              timeout: 200
            });
            threeSixtyPlayer.init();
            AssetUploader.init("upload-file-container", "upload-files-btn");
          }
        }
      });
    });

    $(".messages-container").on("click", ".message-remove-file", function(e) {
      e.preventDefault();

      if (confirm("Are you sure you want to delete this file?")) {
        $.getJSON($(this).attr("href"));

        $(this)
          .parent()
          .remove();
      }
    });

    $(".messages-container").on("click", ".message-reply", function(e) {
      e.preventDefault();
      var btn = $(this);
      var form = $("#reply-message-form");
      if (
        form
          .children(".form-control")
          .val()
          .trim() == ""
      ) {
        alert("Please enter a message");
        return;
      }
      btn.attr("disabled", true);
      $.ajax({
        dataType: "json",
        type: "POST",
        url: form.attr("action"),
        data: form.serialize(),
        success: function(data) {
          btn.removeAttr("disabled");
          if (data.success) {
            App.showSuccess("Message successfully sent");
            var lastMessage = $(".messages-wrap .message").last();
            $(".messages-wrap .messages").append(data.html);
            $(".messages-reply-wrap textarea").val("");

            $(".messages-wrap").mCustomScrollbar("scrollTo", "bottom");
            $("#asset-filelist .new-asset").remove();
            MessageCenter.setHeights();
          }
        }
      });
    });

    $(".message-center").on("click", ".mark-all-read", function(e) {
      e.preventDefault();

      var url = $(this).attr("href");
      $.ajax({
        dataType: "json",
        type: "GET",
        url: url
      });

      $(".threads-wrap .unread").html("0");
      $(".threads-wrap .unread").removeClass("label-red");
      $(".threads-wrap .unread").addClass("label-default");

      $(".threads-container .num-unread").html("0");
      $(".threads-container .num-unread").removeClass("label-red");
      $(".threads-container .num-unread").addClass("label-default");

      $(".message-alert .num-unread").html("0");
      $(".message-alert .num-unread").hide();
      $(".message-alert").removeClass("unread");
    });
  }
};
